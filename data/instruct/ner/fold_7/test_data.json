[
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is made up of a list of the principal features of the system.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The prototype DigitalHome software system will be situated in a simulated environment.",
    "output": "{\"Machine Domain\": [\"DigitalHome software system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The general user shall be able to use the DigitalHome system capabilities to monitor and control the environment in his/her home.",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"The general user\", \"home\"], \"Design Domain\": [], \"Requirements\": [\"monitor and control the environment\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although the general user is not familiar with the technical features of the DigitalHome system, he/she is familiar with the use of a web interface and can perform simple web operations (logging in and logging out, browsing web pages, and submitting information and requests via a web interface).",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"the general user\"], \"Design Domain\": [\"a web interface\"], \"Requirements\": [\"perform simple web operations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "He/she will have the same right as the DigitalHome Technician.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"DigitalHome Technician.\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There will be no actual physical home and all sensors and controllers will be simulated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"sensors\", \"controllers\"], \"Environment Entity\": [\"physical home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The home web server will provide ability to establish and maintain DigitalHome User Accounts.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The home web server\"], \"Requirements\": [\"establish and maintain DigitalHome User Accounts\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Gateway device shall operate up to a 1000-foot range for indoor transmission.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Gateway device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using wireless communication, sensor values can be read and saved in the home database.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"sensor\"], \"Environment Entity\": [], \"Design Domain\": [\"the home database\"], \"Requirements\": [], \"Shared Phenomena\": [\"wireless communication\", \"values\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A single thermostat shall be placed in an enclosed space (e.g., a room in the house) for which the air temperature is to be controlled.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostat\"], \"Environment Entity\": [\"an enclosed space\"], \"Design Domain\": [], \"Requirements\": [\"the air temperature is to be controlled\"], \"Shared Phenomena\": [\"the air temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Up to eight humidistats shall be placed in rooms throughout the home.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"humidistats\"], \"Environment Entity\": [\"rooms\", \"home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When a security breach occurs and a contact sensor is set OPEN, the alarm system shall be activated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a security breach\", \"a contact sensor\"], \"Environment Entity\": [], \"Design Domain\": [\"the alarm system\"], \"Requirements\": [], \"Shared Phenomena\": [\"OPEN\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "DigitalHome Planner shall provide a user with the capability to direct the system to set various preset home parameters (temperature, humidity, security contacts, and on/off appliance/light status) for certain time periods.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"DigitalHome Planner\", \"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"temperature\", \"humidity\", \"security contacts\", \"on/off appliance/light status\", \"home parameters\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon installation, a DigitalHome user account shall be established.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The development of the DigitalHome system shall use methods and techniques such as the following to support system maintenance.",
    "output": "{\"Machine Domain\": [\"the DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Southwest Research Institute is providing the data system to produce data products in a form suitable for analysis and archiving.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Southwest Research Institute\"], \"Design Domain\": [\"the data system\"], \"Requirements\": [\"for analysis and archiving\"], \"Shared Phenomena\": [\"data products\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ASPERA-3 and MEX OA IDFS data sets shall be stored on a local SwRI archive for data availability and analysis.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a local SwRI archive\"], \"Design Domain\": [], \"Requirements\": [\"data availability and analysis.\"], \"Shared Phenomena\": [\"The ASPERA-3 and MEX OA IDFS data sets\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The web-based displays defined by the ASPERA-3 team to be used for science analysis shall be password protected until the ASPERA-3 data is made public to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the ASPERA-3 team\", \"science analysis\", \"the ASPERA-3 team\"], \"Design Domain\": [], \"Requirements\": [\"meeting mission goals and objectives.\"], \"Shared Phenomena\": [\"The web-based displays\", \"the ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF ground data system shall have built-in error handling for better data integrity.",
    "output": "{\"Machine Domain\": [\"The APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"built-in error handling for better data integrity\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF data system requirements for delivering the ASPERA-3 IDFS data, Mars Express Orbit/Attitude IDFS data, and software are described in the following table.",
    "output": "{\"Machine Domain\": [\"The APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the ASPERA-3 IDFS data\", \"Mars Express Orbit/Attitude IDFS data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic, DR, is used in the requirement identifiers to show that these requirements are Delivery Requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Science analysis software shall be integrated into the NASA approved data repository.",
    "output": "{\"Machine Domain\": [\"Science analysis software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"NASA approved data repository\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no requirements that constrain the design and implementation of the APAF software.",
    "output": "{\"Machine Domain\": [\"the APAF software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This document is designed to provide information to both the client and the technical designers of the software.",
    "output": "{\"Machine Domain\": [\"the software\"], \"Physical Device\": [], \"Environment Entity\": [\"the technical designers\", \"the client\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section three is a detailed requirements specification targeted toward technical designers.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"technical designers\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Therefore, various environments may yield different interfaces, but the behavior of the program will be the same.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Also, a short summary of our team and a link to our website will be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These questions will test the user's knowledge of basic fraction operations and will be presented as a multiple-choice questionnaire.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The inputs will consist of fractions entered by the player using the game's interface. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This process ensures a seamless experience, whether the player chooses to watch the movie or skip it.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The main menu is designed to serve as the initial interface that players interact with upon starting the game or returning to it after a session. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output of interacting with the main menu is determined by the player's choice.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interaction involves selecting their answer from a set of multiple-choice options provided for each question. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system sequence includes \"critical points\" where the storyline can diverge based on whether the player answers these pivotal questions correctly, adding an element of narrative depth and personalization to the gameplay experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Furthermore, this component offers a clear and direct pathway for the player to either revisit the game's content through the main menu or gracefully exit the game, thereby closing their current session.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These links are presented within the system interface and lead to various World Wide Web documents.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will be as secure as the web browser that will run the product.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Navigation module of the CCTNS provides role based landing pages which help in navigating through the CCTNS application.",
    "output": "{\"Machine Domain\": [\"The Navigation module of the CCTNS\", \"CCTNS application\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"help in navigating\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should provide an interface for the user to log any defects or enhancement requests on the application and track thereafter.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"log any defects\", \"enhancement requests\", \"track thereafter\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow a user to be a member of more than one group.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow changes to security attributes for groups or users (such as access rights, security level, privileges, password allocation and management) to be made only by super-user.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"groups\", \"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"security attributes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must employ a single set of user interface rules, or a small number of sets to provide a familiar and common look and feel for the application.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to provide a familiar and common look\"], \"Shared Phenomena\": [\"user interface rules\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Avoiding opening unnecessary windows: Additional windows such as new browser windows or pop-up windows should only be opened if this supports the user’s task.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"Additional windows\"], \"Requirements\": [], \"Shared Phenomena\": [\"opened\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "They could make it cognitively more difficult to understand the navigation structure with negative effects on both usability and accessibility.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Users expect error messages to be in the same language as the user interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"error messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making text resizable by the user: Text should be able to be resized by the user, using functions provided by the user agent or other appropriate means i.e.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"the user agent\"], \"Design Domain\": [], \"Requirements\": [\"Making text resizable by the user\"], \"Shared Phenomena\": [\"Text\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Within-page links are shown with dashed rather than solid underlines ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Longer pages can be more appropriate when users want to read the content without interruptions or when the page needs to match a paper counterpart.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using colour: Colour should be used with care, taking into account human capabilities and restrictions in perceiving colour, and not as the only means of conveying information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using frames with care: If frames are used, care should be taken to avoid possible problems, for example, those involving the use of the back button, bookmarking of pages, or scrolling of information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing alternatives to frame-based presentation: If frames are used, an alternative way of presenting relevant information without frames should be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Frequently, however, different pages have different purposes and types of content.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "User adaptation can also be important for making the user interface more accessible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the user interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to retrieve and display within 20 seconds the case which has not been accessed within the previous 2 months, regardless of storage capacity or number of cases in the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to retrieve and display within 20 seconds the case\"], \"Shared Phenomena\": [\"storage capacity\", \"number of cases\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The deployment of the application will be at state level and will be configured and customized as per the state specific extensions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed to have satisfactory performance even in Police Stations connected on low-bandwidth ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to have satisfactory performance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed to have a n-tier architecture with the presentation logic separated from the business logic that is again separated from the data-access logic ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to have a n-tier architecture\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high scalability and performance through displaying of records on the screen in batches/paged manner. ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [\"the screen\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high scalability and performance\"], \"Shared Phenomena\": [\"records\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The search should fetch only the fields that need to be displayed to the user.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System exists as an integrated part of the overall VLA Expansion Project Monitor and Control Structure.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"VLA Expansion Project Monitor and Control Structure\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System will be a fully observable system with the only limits placed on information access being those imposed by hardware, bandwidth, and/or security restrictions.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Correlator configurations and control instructions will be received from the VLA Expansion Project Monitor and Control System system in a form suitable for translation by the Master Correlator Control Computer.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [\"the Master Correlator Control Computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Correlator configurations\", \"control instructions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Engineers and technicians will need tools to inspect and monitor individual CMIB layer devices from remote locations and have the ability to fault trace to a specific hot-swappable subsystem.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"tools\"], \"Environment Entity\": [\"Engineers\", \"technicians\", \"individual CMIB layer devices\"], \"Design Domain\": [\"a specific hot-swappable subsystem\"], \"Requirements\": [\"inspect and monitor individual CMIB layer devices\"], \"Shared Phenomena\": [\"fault trace\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software developer requires remote access to the EVLA Correlator Monitor and Control System so that troubleshooting can be accomplished away from the the VLA Expansion Project and during non-working hours.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"The software developer\"], \"Design Domain\": [], \"Requirements\": [\"troubleshooting\"], \"Shared Phenomena\": [\"remote access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A few authorized individuals may be allowed access to parts of the EVLA Correlator Monitor and Control System that are usually considered restricted.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Reboots should result in minimal system interruptions with the offending CPU reconfiguring and returning to service autonomously.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB shall conform to both electrical and physical The CMIB shall contain 64 Mbytes or greater of SDRAM, IDE hard disk interface, minimum of one serial and one parallel interface, PCI/ISA buses, 100BaseT network interface, capacity to boot and run a generic COTS operating system in a near real-time environment from local non-volatile storage.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Aside from a networking or CPU failure, it should never be necessary to directly access a CPU to display error messages.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This software will provide full system access for testing, debugging, and control while the correlator is off line or under the control of the VLA Expansion Project Monitor and Control System system.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System system\"], \"Physical Device\": [\"the correlator\"], \"Environment Entity\": [], \"Design Domain\": [\"This software\"], \"Requirements\": [], \"Shared Phenomena\": [\"full system access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a user cannot be identified, they will not be given access.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A system administrator shall have unrestricted access to all aspects of the EVLA Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"A system administrator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"unrestricted access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Replaceability modular design principles shall be employed to the maximum extent possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will receipt and transmission of secondary imagery and/or data from multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"secondary imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will direct receipt of imagery and/or data from multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System has capability to have full function and control of the UAV from takeoff to landing for multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV\", \"the UAV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software will provide the UAV operator the necessary tools for computer related communications, mission tasking, mission planning, mission execution, data receipt, data processing, limited data exploitation, and data dissemination.",
    "output": "{\"Machine Domain\": [\"software\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"tools\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide software portability, scaleable functionality, and support for operational configurations tailored to the users’ needs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"software\"], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Automated Target Hand-off System (ATHS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Automated Target Hand-off System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Guardrail Common Sensor/Aerial Common Sensor (ACS) Integrated Processing Facility (IPF)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Guardrail Common Sensor/Aerial Common Sensor (ACS) Integrated Processing Facility (IPF)\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Intelligence Analysis System (IAS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Intelligence Analysis System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Tactical Exploitation Group (TEG)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Tactical Exploitation Group\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The states of operation of the Tactical Control System shall include Startup, Operation, and Shutdown.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the Tactical Control System Software is terminated normally the Tactical Control System shall enter the Normal Startup Mode of operation upon application of power.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System Software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Levels of interaction higher than those achievable by a particular Tactical Control System configuration shall be prohibited.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Initialization of the Tactical Control System HWCIs shall include startup of HWCIs, download of software, startup of CSCIs, execution of Startup FD/L, and establishment of the state of readiness of all interfaces.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of automatically recording system state data, interface communications and other information necessary to support event reconstruction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"system state data\", \"interface communications\", \"information necessary to support event reconstruction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For recovery from abnormal termination, Tactical Control System shall prompt the operator to select the type of recovery to be executed: (1)Resume in the Same Modes And Data; (2)Resume in the Same Modes but Review and Modify the Command Data as Necessary; or, (3) Perform a Command Shutdown and Startup Via the Normal ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the type of recovery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Functions under the Training Operations Mode shall operate concurrently without precluding or excluding any of the other functions, in accordance with allowable operations as determined by the appropriate levels of interaction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will allow the operator to conduct mission control and monitoring.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to conduct mission control and monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to transmit UAV mission plans to other Tactical Control Systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"other Tactical Control Systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will provide payload search area information, such as visual acuity range due to atmospheric conditions, diurnal transition periods for thermal imagery, and lunar and solar terrain shadowing.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"payload search area information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "At every waypoint and every 5 minutes, the Tactical Control System shall compute the AV's flight range based on remaining fuel.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"AV's flight range\", \"remaining fuel\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability of displaying overlays each containing 100 simultaneous icons of known fire support coordination zones, airspace control zones, threat systems, and displaying the threat engagement envelopes with associated radar terrain masking for those threats.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"airspace control zones\"], \"Design Domain\": [\"threat systems,\"], \"Requirements\": [], \"Shared Phenomena\": [\"the threat engagement envelopes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display icons indicating Tactical Control System position and Ground Data Terminal (GDT) position.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Tactical Control System position\", \"Ground Data Terminal (GDT) position\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the capability to control and monitor an AV, payload, data link, and C4I interfaces during the execution of a mission.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"C4I interfaces\"], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"control and monitor an AV, payload, data link, and C4I interfaces during the execution of a mission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to control the AV flight commands as well as to release the AV to an autonomous flight control mode.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control the AV flight commands as well as to release the AV to an autonomous flight control mode\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display the AV status, to include but not be limited to the AV location and flight and avionics system status.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"system\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"display the AV status, to include but not be limited to the AV location and flight and avionics system status\"], \"Shared Phenomena\": [\"AV status\", \"AV location and flight and avionics system status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the data link is interrupted, the Tactical Control System shall present the last known AV status values and the time at which the last values were reported.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"present the last known AV status values and the time at which the last values were reported\"], \"Shared Phenomena\": [\"AV status values\", \"last values were reported\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Sequential communication means alternatively communicating with one air vehicle and then the other.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"air vehicle\", \"the other\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall receive, process, and present payload data to the operator so that the status of the payload can be determined.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"receive, process, and present payload data to the operator so that the status of the payload can be determined\"], \"Shared Phenomena\": [\"payload data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality necessary to record data obtained via the data link.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"record data obtained via the data link\"], \"Shared Phenomena\": [\"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide automatic pointing commands for directional antennas, and shall allow for the manual pointing of directional antennas when desired by the operator.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"directional antennas\", \"operator\", \"directional antennas\"], \"Design Domain\": [], \"Requirements\": [\"automatic pointing commands for directional antennas, and shall allow for the manual pointing of directional antennas when desired by the operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of positioning antennas to maintain LOS as well as SATCOM.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"antennas\"], \"Design Domain\": [], \"Requirements\": [\"positioning antennas to maintain LOS as well as SATCOM\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall incorporate antenna pedestal 3 -axis stabilization to compensate for platform (e.g. ship, or HMMWV) motion, if applicable.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"antenna pedestal\", \"platform\"], \"Design Domain\": [], \"Requirements\": [\"incorporate antenna pedestal 3 -axis stabilization to compensate for platform (e.g. ship, or HMMWV) motion, if applicable\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall be able to manually override the automatic mode selection of the selected data terminal, if desired.",
    "output": "{\"Machine Domain\": [\"operator\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of presenting to the operator a visual depiction of the minimum and maximum data link operational ranges.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"presenting to the operator a visual depiction of the minimum and maximum data link operational ranges\"], \"Shared Phenomena\": [\"minimum and maximum data link operational ranges\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the functionality necessary to manage all aspects of payload product handling to include receiving, processing, displaying, and performing limited exploitation.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"payload product\"], \"Design Domain\": [], \"Requirements\": [\"manage all aspects of payload product handling to include receiving, processing, displaying, and performing limited exploitation\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall support a target location function where the operator can request the current ground location of the payload field-of-view center.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\", \"the current ground location\", \"the payload field-of-view center\"], \"Design Domain\": [], \"Requirements\": [\"support a target location function\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall export and disseminate formatted NITF 2.0 files, digital imagery, RS-170A video (with as well as without overlay), and tactical communication messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"NITF 2.0 files\", \"digital imagery\", \"RS-170A video\"], \"Requirements\": [\"export and disseminate formatted NITF 2.0 files, digital imagery, RS-170A video (with as well as without overlay), and tactical communication messages\"], \"Shared Phenomena\": [\"tactical communication messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall establish digital communication with the C4I systems and terminate the communication upon completion.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the C4I systems\"], \"Requirements\": [\"establish digital communication\"], \"Shared Phenomena\": [\"terminate the communication upon completion\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to monitor the status of all C4I interfaces, and display appropriate control information.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to monitor the status of all C4I interfaces\", \"display appropriate control information\"], \"Shared Phenomena\": [\"the status of all C4I interfaces\", \"appropriate control information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall be capable of executing payload maintenance software and displaying appropriate status results.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"payload maintenance software\"], \"Requirements\": [\"executing payload maintenance software\", \"displaying appropriate status results\"], \"Shared Phenomena\": [\"appropriate status results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For external communications to C4I systems the Tactical Control System shall utilize the Universal Communication Processor as well as the Common Message Processor (CMP) Government Off The Shelf (GOTS) software capabilities of the DII/COE to communicate with C4I systems using Tactical Communication (TACOMM) messages.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\", \"Tactical Communication (TACOMM) messages\"], \"Physical Device\": [\"the Universal Communication Processor\", \"the Common Message Processor (CMP)\"], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems\", \"Government Off The Shelf (GOTS) software\", \"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"external communications\", \"the DII/COE to communicate\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with JMCIS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"JMCIS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with JMCIS\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with AFMSS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AFMSS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with AFMSS\"], \"Shared Phenomena\": [\"integrate with AFMSS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have provisions for simultaneously supporting both of the following external interfaces: ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external interfaces\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to output digital message data and imagery to a hard copy printer.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"a hard copy printer\"], \"Design Domain\": [], \"Requirements\": [\"to output digital message data and imagery to a hard copy printer\"], \"Shared Phenomena\": [\"output digital message data\", \"imagery to a hard copy printer\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an internal interface for establishing communications with the Real Time Processor (RTP) within Tactical Control System.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [\"the Real Time Processor (RTP)\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide an internal interface\"], \"Shared Phenomena\": [\"establishing communications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System internal data decisions will be left to the design and the requirement specifications for system components.",
    "output": "{\"Machine Domain\": [\"All Tactical Control System internal data decisions\", \"Tactical Control System\", \"system components\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"left to the design and the requirement specifications\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "System safety and health hazards, if any, shall be identified and evaluated during Phase I of the Tactical Control System development.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System development\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The hardware of the Tactical Control System shall be capable of being scaled as well as being modular to meet the varying needs of the Services.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [\"The hardware of the Tactical Control System\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"being scaled as well as being modular to meet the varying needs of the Services\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As an objective a 75% spare memory storage capacity over storage used shall be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"a 75% spare memory storage capacity\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software will provide the functionality and capability to receive, process, and disseminate video and telemetry data from the AV and payload; perform mission planning; monitor and control the payload; monitor and control the AV; and monitor and control the data links.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"The Tactical Control System software\"], \"Physical Device\": [\"the AV\", \"the AV\"], \"Environment Entity\": [\"payload\", \"the payload\"], \"Design Domain\": [\"the data links\"], \"Requirements\": [\"to receive, process, and disseminate video and telemetry data\", \"perform mission planning\", \"monitor and control the payload\", \"monitor and control the AV\", \"monitor and control the data links\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall be capable of being hosted on a variety of computer operating systems that are organic to the various Services.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a variety of computer operating systems\"], \"Requirements\": [\"hosted on a variety of computer operating systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall restrict the operator(s) from exercising levels of interaction not achievable by the system.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator(s)\"], \"Design Domain\": [], \"Requirements\": [\"restrict the operator(s) from exercising levels of interaction not achievable by the system\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have monitor(s) that allow reading of displays under direct sunlight and low light level environments.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"monitor(s)\", \"sunlight and low light level environments\"], \"Design Domain\": [], \"Requirements\": [\"have monitor(s)\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Display jitter and flicker shall not be perceptible by the operator.",
    "output": "{\"Machine Domain\": [\"Display jitter and flicker\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"not be perceptible by the operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall facilitate Human-Computer Interfaces (HCIs) that support operation of all system modes, functions, and capabilities.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Human-Computer Interfaces (HCIs)\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of displaying a window within a window format to include, as a minimum, displaying a video window overlaid on a map screen as well as a map screen overlaid on a video screen.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"displaying a window\"], \"Shared Phenomena\": [\"displaying a video window overlaid on a map screen\", \"a map screen overlaid on a video screen\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide continuously-available, on-screen control functions for time and missioncritical operations, to include as a minimum print, freeze, declassification, mark VCR, declutter, cease RF transmission.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide continuously-available\", \"on-screen control functions for time\", \"missioncritical operations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Systems will interface to the “cloud” using a project defined protocol.",
    "output": "{\"Machine Domain\": [\"Systems\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the “cloud”\"], \"Requirements\": [], \"Shared Phenomena\": [\"a project defined protocol\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Requirements are listed in separate sections and in table format for each functional area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Dynamic Lane, including network identifier, link identifier, dynamic lane identifier, dynamic lane name and failure state.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Dynamic Lane\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"dynamic lane identifier\", \"dynamic lane name\", \"failure state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall be capable of displaying the following for a LCS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map\", \"a LCS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"displaying the following\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall provide a list of previously entered incidents.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a list of previously entered incidents\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The remote Center Control GUI shall be designed to execute on a public network (e.g., Internet) and transmit equipment requests to the C-2-C software system.",
    "output": "{\"Machine Domain\": [\"The remote Center Control GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"a public network\"], \"Design Domain\": [\"the C-2-C software system\"], \"Requirements\": [], \"Shared Phenomena\": [\"equipment requests\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a LCS from a list and provide the following information, including Target LCS and Assignment of lane arrows.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a LCS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target LCS\", \"Assignment of lane arrows\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center shall be able to operate in test mode.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  }
]