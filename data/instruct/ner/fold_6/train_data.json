[
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This document specifies the requirements for the development of a “Smart House”, called DigitalHome (DH), by the DigitalHomeOwner Division of HomeOwner Inc.",
    "output": "{\"Machine Domain\": [\"Smart House\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A “Smart House” is a home management system that allows home residents to easily manage their daily lives by providing for a lifestyle that brings together security, environmental and energy management (temperature, humidity and lighting), entertainment, and communications.",
    "output": "{\"Machine Domain\": [\"a home management system\"], \"Physical Device\": [], \"Environment Entity\": [\"home residents\"], \"Design Domain\": [], \"Requirements\": [\"to easily manage their daily lives\"], \"Shared Phenomena\": [\"a lifestyle\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Smart House components consist of household devices (e.g., a heating and air conditioning unit, a security system, and small appliances and lighting units, etc.), sensors and controllers for the devices, communication links between the components, and a computer system, which will manage the components.",
    "output": "{\"Machine Domain\": [\"The Smart House\"], \"Physical Device\": [\"a heating and air conditioning unit\", \"lighting units\", \"sensors\", \"controllers\"], \"Environment Entity\": [], \"Design Domain\": [\"a security system\", \"small appliances\", \"a computer system\"], \"Requirements\": [], \"Shared Phenomena\": [\"communication links\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome Software Requirements Specification (SRS) is based on the DigitalHome Customer Need Statement.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is made up of a list of the principal features of the system.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This initial version of DigitalHome will be a limited prototype version, which will be used by HomeOwner management to make business decisions about the future commercial development of DigitalHomeOwner products and services.",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [], \"Environment Entity\": [\"HomeOwner\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Hence, the SRS is not intended as a comprehensive or complete specification of DigitalHome requirements.",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There is a supplementary document that provides additional detail and information about the DigitalHome requirements: the Digital Home Use Case Model.",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These document were prepared by the DigitalHomeOwner Division, in consultation with the Marketing Division of HomeOwner Inc.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"HomeOwner\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Digital Home system, for the purposes of this document, is a system that will allow a home user to manage devices that control the environment of a home.",
    "output": "{\"Machine Domain\": [\"The Digital Home system\"], \"Physical Device\": [], \"Environment Entity\": [\"a home user\", \"a home\"], \"Design Domain\": [], \"Requirements\": [\"manage devices\", \"control the environment of a home\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user communicates through a personal web page on the DigitalHome web server or on a local home server.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The user\"], \"Design Domain\": [\"a local home server\", \"the DigitalHome web server\"], \"Requirements\": [], \"Shared Phenomena\": [\"a personal web page\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The product is based on the Digital Home High Level Requirements Definition.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Digital Home High Level Requirements Definition is intended as a prototype, which will allow business decisions to be made about future development of a commercial product.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The scope of the project will be limited to the management of devices which control temperature, humidity, security, and power to small appliances and lighting units, through the use of a web-ready device.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a web-ready device\", \"lighting units\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control temperature, humidity, security, and power to small appliances and lighting units,\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The prototype DigitalHome software system will be situated in a simulated environment.",
    "output": "{\"Machine Domain\": [\"DigitalHome software system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There will be no actual physical home and all sensors and controllers will be simulated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"controllers\", \"sensors\"], \"Environment Entity\": [\"physical home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The general user shall be able to use the DigitalHome system capabilities to monitor and control the environment in his/her home.",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"The general user\", \"home\"], \"Design Domain\": [], \"Requirements\": [\"monitor and control the environment\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although the general user is not familiar with the technical features of the DigitalHome system, he/she is familiar with the use of a web interface and can perform simple web operations (logging in and logging out, browsing web pages, and submitting information and requests via a web interface).",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"the general user\"], \"Design Domain\": [\"a web interface\"], \"Requirements\": [\"perform simple web operations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A Master user will be designated, who shall be able to change the configuration of the system.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"A Master user\"], \"Design Domain\": [], \"Requirements\": [\"change the configuration\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For example, a Master User shall be able to add a user account or change the default parameter settings.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a Master User\"], \"Design Domain\": [], \"Requirements\": [\"add a user account\", \"change the default parameter settings\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "He/she will have the same right as the DigitalHome Technician.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"DigitalHome Technician.\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome Technician is responsible for setting up and maintaining the configuration of a DigitalHome system.",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"A DigitalHome Technician\"], \"Design Domain\": [], \"Requirements\": [\"setting up and maintaining the configuration\"], \"Shared Phenomena\": [\"the configuration\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome Technician is specially trained by DigitalHomeOwner to be familiar with the functionality, architecture, and operation of the DigitalHome system product.",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"A DigitalHome Technician\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome Technician will have rights beyond the DigitalHome General User, capable of setting up and making changes in the configuration of the system (e.g.,setting system parameters and establishing user accounts), and starting and stopping operation of the DigitalHome System.",
    "output": "{\"Machine Domain\": [\"DigitalHome System\", \"DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [\"A DigitalHome Technician\", \"the DigitalHome General User\"], \"Design Domain\": [], \"Requirements\": [\"setting up and making changes in the configuration\", \"starting and stopping operation\"], \"Shared Phenomena\": [\"the configuration\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The “prototype” version of the DigitalHome System (as specified in this document) must be completed within twelve months of inception.",
    "output": "{\"Machine Domain\": [\"DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The development team will consist of five engineers.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "DigitalHomeOwner Director will provide management and communication support.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"DigitalHomeOwner Director\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"management and communication support\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The development team will use the development process specified by the Digital HomeOwner Inc.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The development team\", \"the Digital HomeOwner Inc\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the development process\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Where possible, the DigitalHome project will employ widely used, accepted, and available hardware and software technology and standards, both for product elements and for development tools.",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Because of potential market competition for DigitalHome products, the cost of DigitalHome elements (sensors, controllers, server, tools, etc.), for this project should be minimized.",
    "output": "{\"Machine Domain\": [\"DigitalHome products\"], \"Physical Device\": [\"sensors\", \"controllers\", \"server\", \"tools\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As part of the final project report the development team will describe their efforts to minimize costs, including price comparisons between DigitalHome elements and comparable/competitive elements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome system will be tested in a simulated environment.",
    "output": "{\"Machine Domain\": [\"The DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There will be no actual physical home and all sensors and controllers will be simulated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"sensors\", \"controllers\"], \"Environment Entity\": [\"physical home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Major changes to this document (e.g., changes in requirements) must be approved by the Director of the DigitalHomeOwner Division.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Director of the DigitalHomeOwner Division\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To make marketing and development decisions, the following sections describe operational environment concerns and constraints.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Some of them are related to issues of long-term production and marketing of a DigitalHome product.",
    "output": "{\"Machine Domain\": [\"a DigitalHome product\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome System shall have the capability to establish an individual home web server hosted on a home computer.",
    "output": "{\"Machine Domain\": [\"A DigitalHome System\"], \"Physical Device\": [\"a home computer\"], \"Environment Entity\": [], \"Design Domain\": [\"an individual home web server\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The home web server will provide interaction with and control of the DigitalHome elements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"DigitalHome elements.\"], \"Environment Entity\": [], \"Design Domain\": [\"The home web server\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The home web server will provide storage of DigitalHome plans and data.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The home web server\"], \"Requirements\": [\"provide storage\"], \"Shared Phenomena\": [\"DigitalHome plans and data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The home web server will provide ability to establish and maintain DigitalHome User Accounts.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The home web server\"], \"Requirements\": [\"establish and maintain DigitalHome User Accounts\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The home web server will provide backup service for user account information, user plans and a home database.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The home web server\", \"a home database\"], \"Requirements\": [\"provide backup service\"], \"Shared Phenomena\": [\"user account information\", \"user plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome Gateway device shall provide communication with all the DigitalHome devices and shall connect with a broadband Internet connection.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The DigitalHome Gateway device\", \"DigitalHome devices\"], \"Environment Entity\": [], \"Design Domain\": [\"a broadband Internet connection\"], \"Requirements\": [\"provide communication\"], \"Shared Phenomena\": [\"communication\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Gateway shall contain an RF Module, which shall send and receive wireless communications between the Gateway and the other DigitalHome devices (sensors and controllers).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Gateway\", \"Gateway\", \"an RF Module\", \"sensors\", \"controllers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"wireless communications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Gateway device shall operate up to a 1000-foot range for indoor transmission.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Gateway device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall include digital programmable thermostats, which shall be used to monitor and regulate the temperature of an enclosed space.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"digital programmable thermostats\"], \"Environment Entity\": [\"an enclosed space\"], \"Design Domain\": [], \"Requirements\": [\"monitor and regulate the temperature of an enclosed space\"], \"Shared Phenomena\": [\"the temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The thermostat shall provide a reading of the current temperature in the space where the thermostat is located.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The thermostat\"], \"Environment Entity\": [\"the space\"], \"Design Domain\": [], \"Requirements\": [\"provide a reading of the current temperature in the space\"], \"Shared Phenomena\": [\"the current temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The controller part of thermostat shall provides a “set point” temperature that is used to control the flow of heat energy (by switching heating or cooling devices on or off as needed) to achieve the set point temperature.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The controller part of thermostat\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to control the flow of heat energy\", \"to achieve the set point temperature\"], \"Shared Phenomena\": [\"a “set point” temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The sensor part of the thermostat has a sensitivity range between 14ºF and 104ºF (-10ºC and 40ºC).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The sensor part of the thermostat\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a sensitivity range\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall include digital programmable humidistats, which shall be used to monitor and regulate the humidity of an enclosed space.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"digital programmable humidistats\"], \"Environment Entity\": [\"an enclosed space\"], \"Design Domain\": [], \"Requirements\": [\"monitor and regulate the humidity of an enclosed space\"], \"Shared Phenomena\": [\"the humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The humidistat shall provide a reading of the current humidity in the space where the humidistat is located.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The humidistat\", \"the humidistat\"], \"Environment Entity\": [\"the space\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the current humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The humidistat shall provide a “set point” humidity that is used to control humidifiers and dehumidifiers achieve the set point humidity.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The humidistat\", \"dehumidifiers\", \"humidifiers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"achieve the set point humidity\"], \"Shared Phenomena\": [\"a “set point” humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall include magnetic alarm contact switches which shall be used to monitor entry through a door or window when the switch is active.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"magnetic alarm contact switches\", \"switch\"], \"Environment Entity\": [\"a door\", \"window\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"entry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall include security sound and light alarms, which can be activated when DigitalHome senses a security breach from a magnetic contact.",
    "output": "{\"Machine Domain\": [\"The system\", \"DigitalHome\"], \"Physical Device\": [\"security sound and light alarms\", \"a magnetic contact\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a security breach\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall include digital programmable power switches which shall be used to monitor the current state of an appliance (e.g., a coffee maker is off or on).",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"digital programmable power switches\", \"coffee maker\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to monitor the current state of an appliance\"], \"Shared Phenomena\": [\"the current state of an appliance\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This section provides a description of the functional requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There is a DigitalHome Use Case Model in the Appendix, which provides an overview of the system functionality and shows the relationships between the DigitalHome System entities.",
    "output": "{\"Machine Domain\": [\"DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome System shall allow a web-ready computer, cell phone or PDA to control a home's temperature, humidity, lights, security, and the state of small appliances.",
    "output": "{\"Machine Domain\": [\"The DigitalHome System\"], \"Physical Device\": [\"a web-ready computer\", \"cell phone\", \"PDA\"], \"Environment Entity\": [\"a home\"], \"Design Domain\": [\"small appliances\"], \"Requirements\": [\"to control a home\"], \"Shared Phenomena\": [\"temperature\", \"humidity\", \"lights\", \"security\", \"the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The communication center of the DigitalHome system shall be a DigitalHome home web server, through which a user shall be able to monitor and control home devices and systems.",
    "output": "{\"Machine Domain\": [\"DigitalHome system\"], \"Physical Device\": [\"home devices\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [\"systems\", \"a DigitalHome home web server\"], \"Requirements\": [\"monitor and control home devices and systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each DigitalHome shall contain a master control device (the DigitalHome Gateway Device) that connects to the home’s broadband Internet connection, and uses wireless communication to send and receive communication between the DigitalHome system and the home devices and systems.",
    "output": "{\"Machine Domain\": [\"DigitalHome\", \"the DigitalHome system\"], \"Physical Device\": [\"the home’s broadband Internet connection\", \"a master control device\", \"the home devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"send and receive communication\"], \"Shared Phenomena\": [\"wireless communication\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome shall be equipped with various environmental controllers and sensors (temperature controller-sensors: thermostats, humidity controller-sensors: humidistats, contact sensors, security sound and light alarms, and power switches).",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [\"environmental controllers\", \"thermostats\", \"humidistats\", \"contact sensors\", \"security sound\", \"light alarms\", \"power switches\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using wireless communication, sensor values can be read and saved in the home database.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"sensor\"], \"Environment Entity\": [], \"Design Domain\": [\"the home database\"], \"Requirements\": [], \"Shared Phenomena\": [\"wireless communication\", \"values\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Controller values can be sent to controllers to change the DigitalHome environment.",
    "output": "{\"Machine Domain\": [\"the DigitalHome\"], \"Physical Device\": [\"controllers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to change the DigitalHome environment\"], \"Shared Phenomena\": [\"Controller values\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome programmable thermostat shall allow a user to monitor and control a home’s temperature from any location, using a web ready computer, cell phone, or PDA.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"cell phone\", \"PDA\", \"The DigitalHome programmable thermostat\", \"a web ready computer\"], \"Environment Entity\": [\"a user\", \"a home\"], \"Design Domain\": [], \"Requirements\": [\"to monitor and control a home’s temperature\"], \"Shared Phenomena\": [\"temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome user shall be able to read the temperature at a thermostat position.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a thermostat\"], \"Environment Entity\": [\"A DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome user shall be able to set the thermostat temperatures to between 60 °F and 80 °F, inclusive, at one degree increments.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"the thermostat\"], \"Environment Entity\": [\"A DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"temperatures\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Up to eight thermostats shall be placed in rooms throughout the home.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostats\"], \"Environment Entity\": [\"rooms\", \"home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A single thermostat shall be placed in an enclosed space (e.g., a room in the house) for which the air temperature is to be controlled.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostat\"], \"Environment Entity\": [\"an enclosed space\"], \"Design Domain\": [], \"Requirements\": [\"the air temperature is to be controlled\"], \"Shared Phenomena\": [\"the air temperature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For each thermostat, up to twenty-four one hour settings per day for every day of the week can be scheduled.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostat\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a thermostat device allows a user to make a manual temperature setting, the setting shall remain in effect until the end of the planned or default time period, at which time the planned or default setting will be used for the next time period.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostat device\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [\"make a manual temperature setting\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A thermostat unit shall communicate, through wireless signals, with the master control unit.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"A thermostat unit\", \"the master control unit\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"wireless signals\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall support Fahrenheit and Celsius temperature values.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall be compatible with a centralized HVAC (Heating, Ventilation and Air Conditioning) systems: gas, oil, electricity, solar, or a combination of two or more.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a centralized HVAC (Heating, Ventilation and Air Conditioning) systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall adhere to the standards, policies and procedures of the American Society of Heating, Refrigerating and Air-Conditioning Engineers [ASHRAE 2010].",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome programmable humidistat shall allow a user to monitor and control a home’s humidity from any location, using a web ready computer, cell phone, or PDA.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"web ready computer\", \"cell phone\", \"PDA\", \"The DigitalHome programmable humidistat\"], \"Environment Entity\": [\"a user\", \"a home\"], \"Design Domain\": [], \"Requirements\": [\"to monitor and control a home\"], \"Shared Phenomena\": [\"humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome user shall be able to read the humidity at a humidistat position.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a humidistat\"], \"Environment Entity\": [\"A DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome user shall be able to set the humidity level for a humidistat, from 30% to 60%, inclusive a 1% increments.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a humidistat\"], \"Environment Entity\": [\"A DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the humidity level\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Up to eight humidistats shall be placed in rooms throughout the home.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"humidistats\"], \"Environment Entity\": [\"rooms\", \"home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A single humidistat shall be placed in an enclosed space (e.g., a room in the house) for which the humidity is to be controlled.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"A single humidistat\"], \"Environment Entity\": [\"a room\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a humdistat device allows a user to make a manual temperature setting, the setting shall remain in effect until the end of the planned or default time period, at which time the planned or default setting will be used for the next time period.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a humdistat device\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a manual temperature setting\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For each humidistat, up to twenty-four one hour settings per day for every day of the week can be scheduled.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"humidistat\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome security system consists of contact sensors and a set security alarms.",
    "output": "{\"Machine Domain\": [\"The DigitalHome security system\"], \"Physical Device\": [\"contact sensors\", \"security alarms\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome system shall be able to manage up to fifty door and window contact sensors.",
    "output": "{\"Machine Domain\": [\"A DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [\"window contact sensors\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DigitalHome system shall be able to activate both light and sound alarms: one sound alarm and one light alarm subsystem, with multiple lights.",
    "output": "{\"Machine Domain\": [\"A DigitalHome system\"], \"Physical Device\": [\"light and sound alarms\", \"sound alarm\"], \"Environment Entity\": [\"lights\"], \"Design Domain\": [\"light alarm subsystem\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When a security breach occurs and a contact sensor is set OPEN, the alarm system shall be activated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a security breach\", \"a contact sensor\"], \"Environment Entity\": [], \"Design Domain\": [\"the alarm system\"], \"Requirements\": [], \"Shared Phenomena\": [\"OPEN\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome programmable Appliance Manager shall provide for management of a home’s small appliances, including lighting units, by allowing a user to turn them on or off as desired.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"lighting units\"], \"Environment Entity\": [\"The DigitalHome programmable Appliance Manager\", \"a home’s small appliances\", \"a user\"], \"Design Domain\": [], \"Requirements\": [\"provide for management\"], \"Shared Phenomena\": [\"on or off\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Appliance Manager shall be able to manage up to one hundred 115 volt, 10 amp power switches.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"power switches\"], \"Environment Entity\": [\"The Appliance Manager\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall be able to provide information about the state of a power switch (OFF or ON), indicating the whether an appliance connected to the power switch is OFF or ON.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"a power switch\", \"the power switch\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information about the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system shall be able to change the state of a power switch (OFF to ON, or ON to OFF), in turn changing the state of an appliance connected to the power switch.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"a power switch\", \"the power switch\"], \"Environment Entity\": [], \"Design Domain\": [\"an appliance\"], \"Requirements\": [], \"Shared Phenomena\": [\"the state\", \"the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a user changes the state of power switch device manually, the device shall remain in that state until the end of the planned or default time period, at which time the planned or default setting will be used for the next time period.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"power switch device\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "DigitalHome Planner shall provide a user with the capability to direct the system to set various preset home parameters (temperature, humidity, security contacts, and on/off appliance/light status) for certain time periods.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"DigitalHome Planner\", \"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"temperature\", \"humidity\", \"security contacts\", \"on/off appliance/light status\", \"home parameters\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For a given month and year, a user shall be able to create or modify a month plan that specifies for each day, for up to four daily time periods, the environmental parameter settings (temperature, humidity, contact sensors and power switches).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"contact sensors\", \"power switches\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"environmental parameter settings\", \"temperature\", \"humidity\", \"a month plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A user shall be able to override planned parameter values, through the DigitalHome website, or if available, through manual switches on household devices ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"switches\", \"household devices\"], \"Environment Entity\": [\"A user\"], \"Design Domain\": [\"the DigitalHome website\"], \"Requirements\": [\"override planned parameter values,\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For a given month and year, in the past two years, DigitalHome shall be able to provide a report on the management and control of the home.",
    "output": "{\"Machine Domain\": [\"DigitalHome\"], \"Physical Device\": [], \"Environment Entity\": [\"the home\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a report\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The month report shall contain daily average, maximum (with time) and minimum (with time) values of temperature and humidity for each thermostat and humidistat, respectively.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"thermostat\", \"humidistat\"], \"Environment Entity\": [\"The month report\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"temperature\", \"humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The month report shall provide the day and time for which any security breaches occurred, that is, when the security alarms were activated.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"security alarms\", \"security breaches\"], \"Environment Entity\": [\"The month report\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the day and time\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The month report shall provide a section that indicates the periods of time when the DigitalHome System was not in operation.",
    "output": "{\"Machine Domain\": [\"the DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [\"The month report\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the periods of time\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Displays of environmental conditions (temperature, humidity, contact sensors and power switches) shall be updated at least every two seconds.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"contact sensors\", \"power switches\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Displays of environmental conditions\", \"temperature\", \"humidity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Sensor (temperature, humidity, contact sensor, power state) shall have a minimum data acquisition rate of 10 Hz.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"Sensor\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome System must be highly reliable with no more than 1 failure per 10,000 hours of operation.",
    "output": "{\"Machine Domain\": [\"The DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Digital Home System shall incorporate backup and recovery mechanisms.",
    "output": "{\"Machine Domain\": [\"The Digital Home System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome System will backup all system data (configuration, default parameter settings, planning, and usage data) on a daily basis, with the backup time set by the DigitalHome Technician at system set up.",
    "output": "{\"Machine Domain\": [\"The DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [\"the DigitalHome Technician\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"system data\", \"configuration\", \"default parameter settings\", \"planning\", \"usage data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the DigitalHome System fails (due to power loss, loss of internet access, or other software or hardware failure), the system recovery mechanism shall restore system data (configuration, default parameter settings, planning, and usage data) from the most recent backup.",
    "output": "{\"Machine Domain\": [\"the DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [\"the system recovery mechanism\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"system data\", \"configuration\", \"default parameter settings\", \"planning\", \"usage data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All DigitalHome operations shall incorporate exception handling so that the system responds to a user with a clear, descriptive message when an error or an exceptional condition occurs.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"message\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Such failures might affect the safety of home dwellers (e.g., security breaches, inadequate lighting in dark spaces, inappropriate temperature and humidity for people who are in ill-health, or powering certain appliances when young children are present).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"home dwellers\", \"young children\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon installation, a DigitalHome user account shall be established.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a DigitalHome user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The DigitalHome web system shall provide for authentication and information encryption through a recognized reliable and effective security technology, such as Transport Layer Security.",
    "output": "{\"Machine Domain\": [\"The DigitalHome web system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"authentication and information encryption\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Log in to an account shall require entry of an account name and a password.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a password\", \"an account name\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The development of the DigitalHome system shall use methods and techniques such as the following to support system maintenance.",
    "output": "{\"Machine Domain\": [\"the DigitalHome system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although the product produced under this document will be a “prototype” version, all modules and components of this prototype version shall be designed and implemented in such a manner that it may be incorporated in a fully specified commercial version of the DigitalHome System.",
    "output": "{\"Machine Domain\": [\"the DigitalHome System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All system documents (Software Requirements Specification, Architectural Design Specification, Module Detailed Design, Module Source Code, and all Test Plans) shall be up-to-date, use the Homeowner document format [HO2305] and reside in the HomeOwner Document Archive at completion of the project.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "HomeOwner has designated object-oriented development, using UML 2.0, as the preferred method for development of software for HomeOwner products.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Exceptions to this rule must be approved by the CIO.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This Software Requirements Specification (SRS) identifies the requirements for the ASPERA-3 Processing and Archiving Facility (APAF) ground data system for the Mars Express mission.",
    "output": "{\"Machine Domain\": [\"the ASPERA-3 Processing and Archiving Facility (APAF) ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"the Mars Express mission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ASPERA-3 instrument package will be flown on the Mars Express mission of the European Space Agency (ESA) and will be launched in June 2003 according to the current schedule.",
    "output": "{\"Machine Domain\": [\"The ASPERA-3 instrument package\"], \"Physical Device\": [], \"Environment Entity\": [\"the Mars Express mission\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 contains a number of different sensors that will measure the particles, neutral atoms, and fields in the near Martian environment.",
    "output": "{\"Machine Domain\": [\"ASPERA-3\"], \"Physical Device\": [\"sensors\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the particles\", \"neutral atoms\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Southwest Research Institute is providing the data system to produce data products in a form suitable for analysis and archiving.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Southwest Research Institute\"], \"Design Domain\": [\"the data system\"], \"Requirements\": [\"for analysis and archiving\"], \"Shared Phenomena\": [\"data products\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These data products will be put into a form known as the Instrument Data File Set (IDFS).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ASPERA-3 Processing and Archiving Facility (APAF) is a ground data system responsible for processing all of the ASPERA-3 telemetry.",
    "output": "{\"Machine Domain\": [\"The ASPERA-3 Processing and Archiving Facility\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"processing all of the ASPERA-3 telemetry\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF data system acquires the telemetry data via NISN, processes the data into IDFS data sets, distributes the IDFS data sets to the ASPERA-3 team, provides web-based displays of the most current data for public view, stores the telemetry and IDFS data sets on a local SwRI archive, and submits the ASPERA-3 IDFS data sets to PDS for long-term archival.",
    "output": "{\"Machine Domain\": [\"The APAF data system\"], \"Physical Device\": [\"NISN\", \"local SwRI archive\", \"public view\"], \"Environment Entity\": [\"the ASPERA-3 team\", \"PDS\"], \"Design Domain\": [\"IDFS data sets\", \"IDFS data sets\", \"the ASPERA-3 IDFS data sets\"], \"Requirements\": [\"the IDFS data sets\"], \"Shared Phenomena\": [\"the telemetry data\", \"the data\", \"current data\", \"the telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The first step in defining the IDFS data sets is to identify the physical instruments that make up the ASPERA-3 experiment and any ancillary data necessary for scientific analysis.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the IDFS data sets\"], \"Requirements\": [], \"Shared Phenomena\": [\"physical instruments\", \"ancillary data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each of the physical components will be divided into logical groups (called virtual instruments) in which each logical group will be formatted as an IDFS data set.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"IDFS data set\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each of the seven components described above will have an associated Software Design Document (SDD) that will define and fully describe all of the data products contained within each individual virtual instrument.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF ground data system is to provide data processing algorithms and support to IRF for the ASPERA-3 science team (including Co-I’s) in preparation for the Mission Operations and Data Analysis (MO&DA) phase of the Mars Express mission.",
    "output": "{\"Machine Domain\": [\"The APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [\"IRF\", \"the ASPERA-3 science team\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"data processing algorithms and support\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition, validation and archiving of all ASPERA-3 scientific data in the NASA Planetary Data System (PDS) within 6 months of receipt in a form useable by the general scientific community is to be provided by the APAF.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"NASA Planetary Data System (PDS)\"], \"Environment Entity\": [\"the APAF\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 scientific data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section 2 is an overview of the descriptions of requirement determination, qualification procedures, rationale, and traceability that are used in the identification and the definitions of the requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The requirements of the APAF data system are categorized and defined in Section 3.",
    "output": "{\"Machine Domain\": [\"the APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section 4 contains general information to aid in the understanding of this specification.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each requirement shall be: assigned a project-unique identifier.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF ground data system requirements are categorized according to functional areas and are defined in the following sections in table format.",
    "output": "{\"Machine Domain\": [\"The APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The requirements associated with the functionality of the APAF ground data system are itemized in the table below.",
    "output": "{\"Machine Domain\": [\"APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic, FR, is used in the requirement identifiers to show that these requirements are Functional Requirements unless otherwise specified.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF system shall acquire from ESOC the telemetry data of the ASPERA-3 Experiment and Mars Express Orbit/Attitude to automatically process the data on a daily basis.",
    "output": "{\"Machine Domain\": [\"The APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"ESOC\"], \"Design Domain\": [], \"Requirements\": [\"to automatically process the data\"], \"Shared Phenomena\": [\"the telemetry data of the ASPERA-3 Experiment and Mars Express Orbit/Attitude\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF system shall process all ASPERA-3 science data into IDFS data sets.",
    "output": "{\"Machine Domain\": [\"The APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"IDFS data sets\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 science data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF system shall process the engineering and ancillary information necessary for calibration and science validation into IDFS data sets.",
    "output": "{\"Machine Domain\": [\"The APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"IDFS data sets.\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the engineering and ancillary information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Intermediate files of cleaned-up ASPERA-3 and MEX OA telemetry shall be generated in the event that cleaned-up telemetry is not provided by ESOC to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ESOC\", \"the ASPERA-3 team\"], \"Design Domain\": [], \"Requirements\": [\"meeting mission goals and objectives\"], \"Shared Phenomena\": [\"Intermediate files of cleaned-up ASPERA-3 and MEX OA telemetry\", \"cleaned-up telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ASPERA-3 and MEX OA telemetry data shall be stored on a local SwRI archive for data availability and re-processing.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a local SwRI archive\"], \"Design Domain\": [], \"Requirements\": [\"data availability and re-processing\"], \"Shared Phenomena\": [\"The ASPERA-3 and MEX OA telemetry data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ASPERA-3 and MEX OA IDFS data sets shall be stored on a local SwRI archive for data availability and analysis.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a local SwRI archive\"], \"Design Domain\": [], \"Requirements\": [\"data availability and analysis.\"], \"Shared Phenomena\": [\"The ASPERA-3 and MEX OA IDFS data sets\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be stored on a local SwRI archive for data availability and re-processing, and to support the ASPERA-3 team.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a local SwRI archive\", \"the ASPERA-3 team\", \"APAF\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"intermediate files\", \"ASPERA-3 and MEX OA cleaned-up telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Web-based displays of the most current ASPERA-3 data shall be provided for public view to monitor instrument performance.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"public view\"], \"Design Domain\": [], \"Requirements\": [\"to monitor instrument performance\"], \"Shared Phenomena\": [\"ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Web-based displays defined by ASPERA-3 team shall be provided where any available ASPERA-3 data (as opposed to just the most current) can be used for science analysis to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA-3 team\", \"science analysis\", \"the ASPERA-3 team\"], \"Design Domain\": [], \"Requirements\": [\"meeting mission goals and objectives\"], \"Shared Phenomena\": [\"Web-based displays defined\", \"ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The web-based displays defined by the ASPERA-3 team to be used for science analysis shall be password protected until the ASPERA-3 data is made public to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the ASPERA-3 team\", \"science analysis\", \"the ASPERA-3 team\"], \"Design Domain\": [], \"Requirements\": [\"meeting mission goals and objectives.\"], \"Shared Phenomena\": [\"The web-based displays\", \"the ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF ground data system shall have built-in error handling for better data integrity.",
    "output": "{\"Machine Domain\": [\"The APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"built-in error handling for better data integrity\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 and MEX OA IDFS data and any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be provided to all ASPERA-3 Co-I’s.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"APAF\", \"ASPERA-3 Co-I’s\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 and MEX OA IDFS data\", \"intermediate files\", \"ASPERA-3 and MEX OA cleaned-up telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "IDFS data access software developed by SwRI shall be made available to the ASPERA-3 Co-I’s to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"SwRI\", \"the ASPERA-3 Co-I\", \"the ASPERA-3 team\"], \"Design Domain\": [\"IDFS data access software\"], \"Requirements\": [\"meeting mission goals and objectives\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Science analysis software developed by SwRI to analyze IDFS-formatted data shall be made available to the ASPERA-3 Co-I’s to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA-3 Co-I’s\", \"SwRI\", \"the ASPERA-3 team\"], \"Design Domain\": [\"Science analysis software\"], \"Requirements\": [\"meeting mission goals and objectives\"], \"Shared Phenomena\": [\"IDFS-formatted data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All internal interfaces are left to the design.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All internal data requirements are left to the design.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Software Design Documents of each of the seven components (see section 1.2) shall contain the detailed information of the virtual instrument data items.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the virtual instrument data items\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the detailed information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "However, there are privacy issues related to intellectual property and sensitive information and data.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The requirement associated with the privacy of the APAF ground data system is in the table below.",
    "output": "{\"Machine Domain\": [\"the APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic, PR, is used in the requirement identifier to show that this requirement is a Privacy Requirement.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF system web server shall be password protected where appropriate to allow only pertinent ASPERA-3 team members access.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA-3 team members\"], \"Design Domain\": [\"The APAF system web server\"], \"Requirements\": [], \"Shared Phenomena\": [\"password protected\", \"access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Computer resources include computer hardware, computer software, and computer communication.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"computer hardware\"], \"Environment Entity\": [], \"Design Domain\": [\"computer software\", \"computer communication\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic, CR, is used in the requirement identifiers to show that these requirements are Computer resource Requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be a UNIX-based APAF system development computer.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a UNIX-based APAF system development computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be a UNIX-based APAF system production computer with an archival system.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a UNIX-based APAF system production computer\"], \"Environment Entity\": [], \"Design Domain\": [\"an archival system\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be a web server for the APAF system for web-based displays and information change.",
    "output": "{\"Machine Domain\": [\"the APAF system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a web server\"], \"Requirements\": [\"web-based displays and information change\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be a network connection between SwRI and NISN for data transfers and distribution.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"SwRI\", \"NISN\"], \"Design Domain\": [\"a network connection\"], \"Requirements\": [\"data transfers and distribution\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The SwRI software team shall provide system maintenance and software support.",
    "output": "{\"Machine Domain\": [\"system\"], \"Physical Device\": [], \"Environment Entity\": [\"The SwRI software team\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"maintenance\", \"software support\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The logistics-related requirements of the APAF ground data system are itemized in the following table.",
    "output": "{\"Machine Domain\": [\"the APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "SwRI shall provide APAF system maintenance.",
    "output": "{\"Machine Domain\": [\"APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"SwRI\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"maintenance\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "SwRI shall provide software support for the APAF system.",
    "output": "{\"Machine Domain\": [\"the APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"SwRI\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"software support\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF data system requirements for delivering the ASPERA-3 IDFS data, Mars Express Orbit/Attitude IDFS data, and software are described in the following table.",
    "output": "{\"Machine Domain\": [\"The APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the ASPERA-3 IDFS data\", \"Mars Express Orbit/Attitude IDFS data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic, DR, is used in the requirement identifiers to show that these requirements are Delivery Requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 and MEX OA IDFS data and any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry shall be provided to all ASPERA-3 Co-I's.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA-3 Co-I's\", \"APAF\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 and MEX OA IDFS data\", \"intermediate files\", \"ASPERA-3 and MEX OA cleaned-up telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 IDFS data that are electronically distributed shall be provided to the ASPERA-3 Co-I’s within 24 hours of acquiring ASPERA-3 telemetry as long as the transmission and processing are error-free to support the ASPERA-3 team in meeting MEX mission goals and objectives ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA-3 Co-I\", \"the ASPERA-3 team\"], \"Design Domain\": [], \"Requirements\": [\"meeting MEX mission goals and objectives\"], \"Shared Phenomena\": [\"ASPERA-3 IDFS data\", \"ASPERA-3 telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "MEX OA IDFS data that are electronically distributed shall be provided to the ASPERA-3 Co-I’s within 24 hours of acquiring MEX OA telemetry as long as the transmission and processing are error-free to support the ASPERA-3 team in meeting MEX mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"ASPERA-3 Co-I’s\", \"the ASPERA-3 team\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"meeting MEX mission goals and objectives\"], \"Shared Phenomena\": [\"MEX OA IDFS data\", \"MEX OA telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Any APAF-generated intermediate files of ASPERA-3 and MEX OA cleaned-up telemetry that are electronically distributed shall be provided to the ASPERA-3 Co-I’s within 24 hours of acquiring ASPERA-3 and MEX OA telemetry as long as the transmission and processing are error-free to support the ASPERA-3 team in meeting MEX mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the ASPERA-3 Co-I’s\", \"the ASPERA-3 team\"], \"Design Domain\": [\"APAF\"], \"Requirements\": [\"meeting MEX mission goals and objectives\"], \"Shared Phenomena\": [\"ASPERA-3 and MEX OA cleaned-up telemetry\", \"ASPERA-3 and MEX OA telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 data shall be provided to NASA PDS in PDS-compliant form.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"NASA PDS\"], \"Design Domain\": [\"PDS-compliant form\"], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 data shall be calibrated and validated prior to depositing in the NASA PDS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the NASA PDS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ASPERA-3 data shall be provided to NASA PDS no later than 6 months after acquisition.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"NASA PDS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"ASPERA-3 data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "SwRI shall provide IDFS data processing algorithms to IRF.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"SwRI\", \"IRF\"], \"Design Domain\": [], \"Requirements\": [\"IDFS data processing algorithms\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Science analysis software shall be integrated into the NASA approved data repository.",
    "output": "{\"Machine Domain\": [\"Science analysis software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"NASA approved data repository\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Science analysis software developed by SwRI to analyze IDFS-formatted data shall be made avaiable to the ASPERA=3 Co-I’s to support the ASPERA-3 team in meeting mission goals and objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"ASPERA=3 Co-I’s\", \"SwRI\", \"the ASPERA-3 team\"], \"Design Domain\": [\"Science analysis software\"], \"Requirements\": [\"meeting mission goals and objectives\"], \"Shared Phenomena\": [\"IDFS-formatted data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "How the ASPERA-3 and MEX OA data and exactly what data sets are to be distributed to each Co-I shall be determined by the needs and resources available six months prior to MEX launch.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the ASPERA-3 and MEX OA data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The distribution mechanisms shall be clearly defined/described in the APAF Operation Procedures Document.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF data system is not required to operate in more than one state or mode.",
    "output": "{\"Machine Domain\": [\"The APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no installation-dependent requirements for the operation of the APAF data system.",
    "output": "{\"Machine Domain\": [\"the APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the operation\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "However, if any are identified, they shall be documented in the APAF Operations Procedures Document.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The APAF data system will not impose hazards to personnel, property, or the environment.",
    "output": "{\"Machine Domain\": [\"The APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Therefore, there are no safety requirements of the APAF ground data system.",
    "output": "{\"Machine Domain\": [\"the APAF ground data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although the APAF data system and associated software will be developed with the highest quality possible, there are no requirements concerned with software quality.",
    "output": "{\"Machine Domain\": [\"the APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Some of the software quality factors that will be considered when developing the APAF data system include: reliability, maintainability, availability, flexibility, portability, testability, and usability.",
    "output": "{\"Machine Domain\": [\"APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no requirements that constrain the design and implementation of the APAF software.",
    "output": "{\"Machine Domain\": [\"the APAF software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no identified requirements related to personnel that will use the software.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "However, the APAF Operations Procedures Document will aid personnel in the operational use of the APAF system.",
    "output": "{\"Machine Domain\": [\"the APAF system\"], \"Physical Device\": [], \"Environment Entity\": [\"personnel\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Since the members of the SwRI software team are experienced with data system and IDFS processing software development, there are no training-related requirements for developers of the APAF data system.",
    "output": "{\"Machine Domain\": [\"APAF data system\"], \"Physical Device\": [\"the members of the SwRI software team\"], \"Environment Entity\": [], \"Design Domain\": [\"data system\", \"IDFS processing software\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition, the APAF Operations Procedures Document shall provide installation and operations procedures of the APAF system in enough detail where there are no training-related requirements for users and operators of the APAF data system.",
    "output": "{\"Machine Domain\": [\"the APAF system\", \"the APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [\"users\", \"operators\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no requirements of the APAF data system that need special treatment or consideration at this time.",
    "output": "{\"Machine Domain\": [\"the APAF data system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This is the Software Requirements Specification (SRS) for the \"Space Fractions\" system.",
    "output": "{\"Machine Domain\": [\"the \\\"Space Fractions\\\" system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The purpose of the document is to describe the purpose and functionality of the software product requested by Ms. Andrea Brooks of Pecan Springs Elementary School.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The SRS will include the details of the system's requirements, interface, design issues, and components.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system is a learning tool created to help improve fraction-solving skills for sixth-grade students.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"help improve fraction-solving skills\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The product will be a web-based, interactive system.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "We are also providing an umbrella for the past systems created.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The umbrella will be a web-based menu system allowing the user to choose between the systems.",
    "output": "{\"Machine Domain\": [\"The umbrella\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"to choose between the systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This document is designed to provide information to both the client and the technical designers of the software.",
    "output": "{\"Machine Domain\": [\"the software\"], \"Physical Device\": [], \"Environment Entity\": [\"the technical designers\", \"the client\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section one is a brief overview of the product, including definitions and references.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The definitions section is intended to assist the technical designers as well as the client in clarifying the terms used throughout the document.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the technical designers\", \"the client\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section two is a general description of the product requirements from a user's perspective.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This section includes information such as functional and data requirements, general constraints, and assumptions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Section three is a detailed requirements specification targeted toward technical designers.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"technical designers\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Specific requirements and expectations regarding the components of the product are given in this portion of the SRS document.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The target clients for our software are students in the sixth grade and their teacher.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"students\", \"teacher\", \"clients\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These students are in the process of learning how to solve arithmetic problems involving fractions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"students\"], \"Design Domain\": [], \"Requirements\": [\"to solve arithmetic problems involving fractions\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Moreover, these students (as well as the teacher) are assumed to have basic computer and ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"students\", \"the teacher\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Internet skills that will enable them to use this software.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The personas we will use to model our intended users are a sixth grade female student called Alice learning fractions who does not like to use computers, a sixth grade male student called Bobby learning fractions who is very competitive and a sixth grade teacher with computer skills called Claire.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\", \"female student\", \"male student\", \"teacher\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Alice is a sixth grade female student learning fractions who does not like to use computers.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"computers\"], \"Environment Entity\": [\"female student\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although Alice has used computers for email and systems, Alice considers computers to be boring.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Alice would rather read a story or talk with friends.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"friends\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Bobby is a sixth grade male student learning fractions who is very competitive.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"male student\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Bobby has used computers since age five.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Bobby particularly likes to play systems where Bobby can excel.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Bobby is only somewhat interested in learning about fractions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Claire is a sixth grade teacher who has computer skills.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"teacher\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Claire enjoys teaching sixth graders and is interested in finding innovative ways to teach her students.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"students\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Claire has been teaching the sixth grade for six years now.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Claire finds that students have a particularly hard time learning about the concepts related to fractions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"students\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system requires a web browser capable of running Flash movies.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"movies\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will not be dependent on any other software and is not a component of another program.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Since the Space Fractions system requires a Flash-supporting browser, the external interface will depend on the configuration of the browser.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Therefore, various environments may yield different interfaces, but the behavior of the program will be the same.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system does not require any new hardware.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The umbrella will be a singular component, providing links to projects relating to fractions, decimals, and percents in a format accessible over the World Wide Web.",
    "output": "{\"Machine Domain\": [\"The umbrella\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"providing links to projects\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will have an introductory movie to set up the storyline.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will have a main menu, including a brief help section.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will have a series of fraction questions (testing arithmetic, equivalence, graphical interpretation, and improper versus proper fraction skills) that sequentially form a storyline related to the introduction.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will have an ending scene where the user's score is calculated and ranked, with an option to quit the system or try again.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition, a component accessible over the World Wide Web will allow the series of fraction questions to be updated by an administrator of the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"an administrator\"], \"Design Domain\": [], \"Requirements\": [\"the series of fraction questions to be updated\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The administrator of the Space Fractions system may wish to design a custom system complete with custom fraction questions.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"The administrator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This information must be saved in a file on the web server where the Space Fractions system is hosted and will be easily edited through simplified administrative screens.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"This information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user's score must be kept as local data within the Space Fractions system so that the results may be given at the end of the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\", \"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"The user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"score\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Input will consist entirely of mouse clicks for the user to choose answer options and to set preferences.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"choose answer options and to set preferences\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will run on any Internet-accessible computer with a web browser that supports ",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [\"computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon starting the Space Fractions system, the user is taken through a brief introductory movie to provide background story and information that will help them complete the fraction questions.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There is an option to skip the introduction, if desired.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Otherwise, they will watch the movie to its completion and be taken to the main screen.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "At the main title screen, the user will be able to view a general help screen to reveal basic instructions on system play.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"to view a general help screen to reveal basic instructions on system play\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Also, a short summary of our team and a link to our website will be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The information and interface will be effective so that Bobby will easily recognize what to do to start the system immediately and Alice will have no problems navigating through the help section to understand the rules and systemplay.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Claire will be assured that the students will know what to do from this main screen.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These questions will test the user's knowledge of basic fraction operations and will be presented as a multiple-choice questionnaire.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user will be given a problem and then must click the correct solution.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A friendly robotic sidekick will assist with general usability issues and give hints towards the correct response.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Bobby will be captivated by the storyline and will wish to progress as fast as possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "After the last question, the main character's adventure will come to an end.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The last scene will be determined by the user's response on certain critical questions that impact the story's plot, and an option to try again will be presented.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition, the player's exact score will be given with a customized message.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This gives Bobby the competition he requires and allows Alice to have a unique experience the next time through the program.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Either way, the user will be encouraged to try again and further better their fraction skills.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "She navigates to the updater page, which asks for a password.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon correct submission of her password, she uses an intuitive web forms interface to update the system to her desiring.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The following table summarizes the external interface requirements for the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The purpose of the Space Fractions system is to process player inputs during gameplay, specifically for calculating spaceship velocity adjustments based on fraction inputs. ",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This is crucial for navigating through space obstacles and reaching destinations within the system.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The inputs will consist of fractions entered by the player using the game's interface. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These inputs will be in the form of two integers representing the numerator and denominator of a fraction. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The source of these inputs is the player's interaction with the game's user interface during specific gameplay moments that require velocity adjustment.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon receiving the fraction inputs, the Space Fractions system will validate the integrity and format of the data to ensure they are integers and that the denominator is not zero.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"validate the integrity and format of the data\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the input is valid, the Space Fractions system calculates the velocity adjustment by converting the fraction into a decimal value and applying it to the spaceship's current velocity.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The processing includes error handling for invalid inputs, such as displaying an error message to the player and requesting a new input.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output of this process is the adjusted velocity of the spaceship, represented as a decimal value.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This adjusted velocity is applied to the game's physics engine to update the spaceship's speed in real-time.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output timing is immediate, ensuring responsive gameplay. The range of output values is determined by the game's physics rules and the maximum and minimum velocity constraints set within the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In cases of invalid inputs, the output is an error message displayed on the user interface, guiding the player to provide a valid fraction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [\"to provide a valid fraction\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The introductory movie serves to immerse players into the game's universe, setting the stage for the storyline and providing critical information to assist users in solving fraction-related puzzles.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\", \"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This engaging start is designed to enhance understanding and interest in the game's educational objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to enhance understanding and interest in the game's educational objectives\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary input for this component is the user's interaction in the form of a mouse click. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a mouse\"], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This action allows players the option to skip the introductory movie at any point, facilitating a direct transition to the main menu of the game for those who prefer to dive straight into gameplay or who are revisiting the game and already familiar with its storyline.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As soon as the player enters the introductory movie component, the movie begins to play automatically.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system continuously listens for a mouse click event during the playback.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [\"a mouse\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a click is detected, the movie is immediately terminated, and the system transitions the user to the game's main menu, bypassing the rest of the movie. If no click is registered, the movie plays in its entirety, after which the Space Fractions system automatically proceeds to the main menu.",
    "output": "{\"Machine Domain\": [\"the system\", \"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This process ensures a seamless experience, whether the player chooses to watch the movie or skip it.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output of this functional requirement is the visual and auditory presentation of the movie on the player's screen.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"screen\"], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the movie is skipped or once it concludes, the subsequent output is the transition to the game's main menu, where players can start their adventure or access various game settings.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The main menu is designed to serve as the initial interface that players interact with upon starting the game or returning to it after a session. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It offers a concise help section that guides players on how to engage with the game effectively and also includes links to both the primary game component and an external educational resource, the Denominators' web page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [\"engage with the game\", \"includes links to both the primary game component and an external educational resource\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This menu aims to equip players with the necessary knowledge to start playing and offer additional learning resources, thereby enriching the overall game experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [\"equip players with the necessary knowledge\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Players interact with the main menu through mouse clicks on specific buttons.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "One button initiates the game, leading players directly into the gameplay experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Another button or hyperlink connects players to the Denominators' web page, providing an opportunity to explore educational content or resources related to the game's thematic elements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [\"to explore educational content or resources\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system remains in a passive listening state until an input is received in the form of a mouse click on one of the menu options.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Depending on the player's choice, the system then executes one of two actions: either initiating the game sequence or redirecting the player to the Denominators' web page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\", \"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This decision-making process ensures that the player's intent is accurately interpreted and the corresponding action is taken swiftly, maintaining a seamless transition from the menu to the player's selected activity.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\", \"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output of interacting with the main menu is determined by the player's choice.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the player opts to start the Space Fractions system, the system transitions to the game sequence, where gameplay begins immediately. ",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Alternatively, if the player selects the option to visit the Denominators' web page, the system facilitates this redirection, opening the web page either within the game environment or in a separate browser window, depending on the game's design and platform capabilities.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This dual-path output allows for a customized experience that caters to the player's immediate preference, whether it be diving into the game or seeking additional information and resources.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary function of the system sequence is to engage players with a series of multiple-choice questions focused on fractions. These questions are integrated within a storyline that naturally follows the introductory narrative of the game.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This sequence is designed to challenge and educate players on fractions while advancing the plot, thereby keeping the educational content engaging and contextually relevant.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [\"to challenge and educate players on fractions\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Players interact with this component by responding to the displayed questions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interaction involves selecting their answer from a set of multiple-choice options provided for each question. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This method ensures a straightforward and accessible approach for users to demonstrate their understanding and apply their knowledge of fractions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the player selects the correct answer, a confirmation message is displayed, and the component transitions to the next question, maintaining engagement and providing positive reinforcement.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For incorrect answers, the player is informed of the mistake and given another opportunity to answer the question, albeit without the possibility of earning points for that question, fostering a learning environment that encourages understanding through trial and error.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system sequence includes \"critical points\" where the storyline can diverge based on whether the player answers these pivotal questions correctly, adding an element of narrative depth and personalization to the gameplay experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "After completing a predetermined set of questions, the player is directed to the concluding scene of the game, providing closure to the educational journey.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The output from this component consists of plot-based questions that incorporate fractions, tailored to both challenge the player's mathematical skills and advance the game's narrative.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Additionally, the sequence customizes the storyline's progression based on the player's performance at critical junctures, offering a dynamic and personalized gaming experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Feedback is provided after each question to help players understand their performance and learn from their mistakes, reinforcing the educational goals of the game.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ending scene serves as the culmination of the player's journey through the system, providing a conclusion to the storyline that reflects their performance across critical decision points. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "his scene not only showcases the player's overall score but also offers a narrative conclusion that ties directly back to the choices made during gameplay, reinforcing the impact of educational achievements within the game's context.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Additionally, it presents players with the option to either conclude their current session or navigate back to the main menu for further exploration or replay.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Player interaction with the ending scene is facilitated through mouse clicks, allowing them to choose between exiting the system or returning to the main menu. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"mouse\"], \"Environment Entity\": [\"Player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This simple, intuitive input method ensures that players of all ages and skill levels can easily make their selection without confusion or frustration.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon reaching the ending scene, the system momentarily pauses to allow the player to make their choice between continuing their exploration of the game's content by returning to the main menu or concluding their session by exiting the game.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This process is designed to be straightforward and user-friendly, ensuring a smooth transition to the player's chosen next step.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary outputs of the ending scene include the display of the player's total score accumulated throughout the system and a tailored narrative conclusion.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This conclusion reflects the outcomes of key decisions made during the system, specifically at critical junctures that were influenced by the player's understanding and application of fractions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The dynamic nature of the conclusion serves to emphasize the educational progress and decisions of the player, offering a personalized ending that varies from one session to another based on the player's performance.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\", \"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Furthermore, this component offers a clear and direct pathway for the player to either revisit the game's content through the main menu or gracefully exit the game, thereby closing their current session.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Its primary function is to facilitate the updating and editing of questions within the system sequence, ensuring that the game's educational content remains current, accurate, and engaging for players. By providing an easy-to-use interface for content modification, this tool supports the game's adaptability and longevity in educational settings.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [\"to facilitate the updating and editing of questions\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Administrators interact with the Question Updater through a user-friendly interface consisting of pulldown menus and text fields. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Administrators\"], \"Design Domain\": [\"the Question Updater\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This design allows for the efficient input of new data or modifications to existing questions. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each question is managed on a separate page within the tool, and navigation between questions is streamlined through the use of a button to progress from one question to the next, ensuring a smooth and organized content update process.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon the completion of data entry for a question, the administrator will use a submission button to initiate the update process.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the administrator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The tool then performs a validation check on the submitted data to ensure completeness and contextual relevance to the game's educational objectives.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This step is crucial for maintaining the quality and integrity of the system content. Once the data passes the validation process, the update for that specific question is finalized.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The successful update of a question results in the generation of a text file on the system server.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This file contains the updated question data, structured in a format that the system sequence can dynamically read and incorporate into the gameplay.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This system allows for real-time updates to the game's content without the need for system restarts or interruptions, enabling a seamless integration of new or revised educational material into the game sequence.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Math Umbrella component is designed to serve as an educational resource hub within the system, providing players with easy access to a curated selection of external S2S projects that are specifically tailored to sixth graders. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [\"The Math Umbrella\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These projects are organized by mathematical topics, such as fractions, to complement and enhance the learning experience within the game. ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This component aims to extend the educational value of the system by integrating additional, topic-relevant resources that support and deepen the player's understanding of mathematics.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Players interact with the Math Umbrella through a series of links.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Players\"], \"Design Domain\": [\"the Math Umbrella\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These links are presented within the system interface and lead to various World Wide Web documents.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each link corresponds to a different S2S project, allowing players to choose which external resources they wish to explore based on their interests or areas where they seek further understanding.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon the player's selection of a link, the Math Umbrella component momentarily pauses to process this action.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [\"the Math Umbrella\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system is designed to detect and respond to the player's choice by initiating the process to open the selected S2S project.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [\"to detect and respond to the player's choice\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This ensures a smooth transition from the system to the external educational content, without disrupting the user's engagement or learning experience.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The chosen S2S project is opened in a separate window, allowing the player to explore the additional mathematical content without leaving or closing the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This functionality facilitates a seamless integration of supplemental educational resources, ensuring that players have the opportunity to engage with a broader range of topics and materials at their own pace.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"players\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "By presenting these resources in a separate window, the system maintains the player's context within the main system environment, enabling easy return to the system after exploring the external content.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the player\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Only one person can use a single instance of the Space Fractions system.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "However, the Space Fractions system will reside on the Internet so more than one user can access the product and download its content for use on their computer.",
    "output": "{\"Machine Domain\": [\"the Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [\"user\", \"computer\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Due to the relatively small size of the introductory and main menu movies, they can be downloaded in approximately one minute with a modem connection.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will be as secure as the web browser that will run the product.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Space Fractions system will be available over the Internet via the S2S website.",
    "output": "{\"Machine Domain\": [\"The Space Fractions system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Reliability will be ensured by extensive testing by the team members and mentors, if available.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the team members\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Maintainability is a primary goal for this project.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For example, using appropriate sub- scenes in the main Flash system to split up the code will allow for easy alteration at a later date.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There are no additional requirements at this time.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "CRIME &amp; CRIMINAL TRACKING NETWORK AND SYSTEMS (CCTNS)",
    "output": "{\"Machine Domain\": [\"CRIMINAL TRACKING NETWORK AND SYSTEMS (CCTNS)\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "FUNCTIONAL REQUIREMENTS SPECIFICATION V1.0 (DRAFT) ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "MINISTRY OF HOME AFFAIRS GOVERNMENT OF INDIA  ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Functional Requirements Specifications (FRS) report provides the detailed description of the functionalities required for the first version of the CCTNS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The key guiding principle behind the functional design of CCTNS V1.0 is to focus on the critical functionality that provides value to the police personnel at the cutting edge which in turn can improve the outcomes in the areas of “Investigation of Crime” and “Detection of Criminals”.",
    "output": "{\"Machine Domain\": [\"CCTNS V1.0\"], \"Physical Device\": [], \"Environment Entity\": [\"the police personnel\"], \"Design Domain\": [], \"Requirements\": [\"to focus on the critical functionality\", \"improve the outcomes\"], \"Shared Phenomena\": [\"value\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "CCTNS V1.0 functionality is designed to focus on delivering value to IOs, records room staff and citizens within the broad crime investigation area.",
    "output": "{\"Machine Domain\": [\"CCTNS V1.0\"], \"Physical Device\": [\"IOs\"], \"Environment Entity\": [\"citizens\", \"room staff\"], \"Design Domain\": [], \"Requirements\": [\"to focus on delivering value\", \"records room staff and citizens\"], \"Shared Phenomena\": [\"value\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Based on the guiding principles stated above, nine different function blocks have been identified and the detailed functionality of each block was determined.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Citizens can register their complaints with police and then based on the evidence, facts and following investigation, police shall take the complaint forward.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Citizens\", \"police\", \"police\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"complaints\", \"evidence\", \"facts\", \"following investigation\", \"complaint\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Registration module acts as an interface between the police and citizens and it eases the approach, interaction and information exchange between police and complainants.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"police\", \"citizens\", \"police\", \"complainants\"], \"Design Domain\": [\"Registration module\"], \"Requirements\": [\"eases the approach, interaction and information exchange\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "After a complaint is initiated, police initiates the investigation process.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"police\", \"a complaint\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Investigation module of the CCTNS facilitates the investigation process and introduces operational efficiencies by automating most of the tasks that take place after initial entries are made during Registration.",
    "output": "{\"Machine Domain\": [\"the CCTNS\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"facilitates the investigation process and introduces operational efficiencies\"], \"Shared Phenomena\": [\"initial entries\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Interfacing with the courts during the prosecution of cases is an integral part of the responsibilities of police personnel.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"courts\", \"police personnel\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"cases\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A designated constable from each police station constantly interfaces with the courts.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"police station\", \"courts\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"constable\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Prosecution module of the CCTNS aids this interfacing by providing a platform to record entries of the court interactions.",
    "output": "{\"Machine Domain\": [\"The Prosecution module of the CCTNS\"], \"Physical Device\": [], \"Environment Entity\": [\"a platform\"], \"Design Domain\": [], \"Requirements\": [\"to record entries of the court interactions\"], \"Shared Phenomena\": [\"entries of the court interactions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Search module of the CCTNS gives police personnel the ability to execute a basic or advanced search on cases.",
    "output": "{\"Machine Domain\": [\"The Search module of the CCTNS\"], \"Physical Device\": [], \"Environment Entity\": [\"police personnel\"], \"Design Domain\": [], \"Requirements\": [\"to execute a basic or advanced search on cases\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using the search functionality, police personnel can search for a particular person, type of crime, modus operandi, property etc.",
    "output": "{\"Machine Domain\": [\"the search functionality\"], \"Physical Device\": [], \"Environment Entity\": [\"police personnel\"], \"Design Domain\": [], \"Requirements\": [\"search for a particular person, type of crime, modus operandi, property etc\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It makes reporting easy for police by enabling them to execute different types of queries such as monthly reporting, RTI related etc.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"police\"], \"Design Domain\": [], \"Requirements\": [\"to execute different types of queries\", \"reporting easy\"], \"Shared Phenomena\": [\"RTI related\", \"monthly reporting\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The police in turn can use it to respond to citizens with very little turnaround time.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The police\"], \"Design Domain\": [], \"Requirements\": [\"to respond to citizens\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It improves overall productivity by helping citizens and police to cut short the drudgery of large amounts of paperwork.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"citizens\", \"police\"], \"Design Domain\": [], \"Requirements\": [\"improves overall productivity\", \"to cut short the drudgery of large amounts of paperwork\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Navigation module of the CCTNS provides role based landing pages which help in navigating through the CCTNS application.",
    "output": "{\"Machine Domain\": [\"The Navigation module of the CCTNS\", \"CCTNS application\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"help in navigating\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It shows information such as cases assigned, alerts, pending tasks etc hence helping police personnel to plan better and execute with greater efficiency.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"police personnel\"], \"Design Domain\": [], \"Requirements\": [\"plan better and execute\"], \"Shared Phenomena\": [\"information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Configuration module of the CCTNS helps keep the application configured according to the states’ requirements in addition to keeping data elements/rules up to date.",
    "output": "{\"Machine Domain\": [\"The Configuration module of the CCTNS\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"keep the application configured\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "With a proper configuration, information such as act and sections, state specific data, castes, tribes, property information etc.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The functional requirements for each of the modules are provided as A1 to A7 in separate enclosures.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The non-functional requirements specify the qualitative attributes such as user-friendliness and performance of the CCTNS system that are critical for the increased user-acceptance of the application.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should provide detailed context-sensitive help material for all the possible actions and scenarios on all user interfaces in the application.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"all user interfaces\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"detailed context-sensitive help material\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should provide detailed context-sensitive help material for all the possible actions and scenarios on all user interfaces in the application.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"all user\"], \"Design Domain\": [], \"Requirements\": [\"detailed context-sensitive\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should provide an interface for the user to log any defects or enhancement requests on the application and track thereafter.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"log any defects\", \"enhancement requests\", \"track thereafter\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should send alerts (e.g., email, SMS) to the user if the user chooses to whenever any action has been taken on the alert.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"alerts\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should enable the user to track the submitted defect or enhancement request.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"track the submitted defect\", \"enhancement request\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The solution should enable the help-desk user to view the reports on the submitted defects or enhancement requests category-wise, status-wise, and age- wise.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the help-desk user\"], \"Design Domain\": [], \"Requirements\": [\"view the reports\"], \"Shared Phenomena\": [\"reports\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The support solution should be accessible to the users both from within the application and also outside the application through a browser interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the users\"], \"Design Domain\": [\"a browser interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This includes actions taken by users or Administrators, or actions initiated automatically by the CCTNS system as a result of system parameters.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"users\", \"Administrators\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"actions\", \"actions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must keep an unalterable audit trail capable of automatically capturing and storing information about all the actions (create/read/update/delete) that are taken upon the critical entities in the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"an unalterable audit trail\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information about all the actions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must keep an unalterable audit trail capable of automatically capturing and storing information about the user initiating and or carrying out the action.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"an unalterable audit trail\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information about the user initiating\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The word “unalterable” is to mean that the audit trail data cannot be modified in any way or deleted by any user.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"any user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the audit trail data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once the audit trail functionality has been activated, the CCTNS system must track events without manual intervention, and store in the audit trail information about them.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"the audit trail\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"events\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must maintain the audit trail for as long as required, which will be at least for the life of the case to which it refers.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"the audit trail\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must ensure that audit trail data is available for inspection on request, so that a specific event can be identified and all related data made accessible, and that this can be achieved by authorised external personnel who have little or no familiarity with the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"external personnel\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"audit trail data\", \"a specific event\", \"all related data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to export audit trails for specified cases (without affecting the audit trail stored by The CCTNS system).",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"export audit trails\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This functionality can be used by external auditors who wish to examine or analyse system activity.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"external auditors\"], \"Design Domain\": [], \"Requirements\": [\"to examine or analyse system activity\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to capture and store violations (i.e.A user’s attempts to access a case to which he is denied access), and (where violations can validly be attempted) attempted violations, of access control mechanisms.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to capture and store violations\", \"attempted violations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "# 审核到这里啦",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The requirements specify the requirements to control the user access to correspondences, files, and records and various functionalities provided within the CCTNS system.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow the user to limit access to cases to specified users or user groups.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"user\", \"users\", \"user groups\"], \"Design Domain\": [], \"Requirements\": [\"limit access\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should provide for role-based control for the functionality within the CCTNS system ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"role-based control\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow a user to be a member of more than one group.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow only admin-users to set up user profiles and allocate users to groups.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"admin-users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"user profiles\", \"groups\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should allow a user to stipulate which other users or groups can access cases.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [\"stipulate which other users or groups can access cases\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow changes to security attributes for groups or users (such as access rights, security level, privileges, password allocation and management) to be made only by super-user.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"groups\", \"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"security attributes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a user requests access to, or searches for, a case which he does not have the right to access, the CCTNS system must provide one of the following responses (selectable at configuration time): display title and metadata;display the existence of a case but not its title or other metadata;do not display any case information or indicate its existence in any way.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"title\", \"metadata\", \"requests access\", \"the existence of a case\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These options are presented in order of increasing security.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Note that the requirement in the third option (i.e.the most stringent) implies that the CCTNS system must not include such cases in any count of search results; this level of security is normally appropriate for cases dealing with matters such as national security.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a user performs a quick or advanced search, the CCTNS system must never include in the search result list any record which the user does not have the right to access.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the search result\", \"search\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If the CCTNS system allows users to make unauthorised attempts to access cases, it must log these in the audit trail.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"users\", \"cases\", \"the audit trail\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"unauthorised attempts\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Any access to cases, and all other activities involving the cases and related documents or data should also need to be stored in the audit trail to ensure legal admissibility and to assist in data recovery.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the audit trail\"], \"Design Domain\": [], \"Requirements\": [\"to ensure legal admissibility\", \"to assist in data recovery\"], \"Shared Phenomena\": [\"documents\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All error messages produced by the CCTNS system must be meaningful, so that they can be appropriately acted upon by the users who are likely to see them.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"the users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"error messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Ideally, each error message will be accompanied by explanatory text and an indication of the action(s) which the user can take in response to the error.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"error message\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must employ a single set of user interface rules, or a small number of sets to provide a familiar and common look and feel for the application.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to provide a familiar and common look\"], \"Shared Phenomena\": [\"user interface rules\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interfaces must be made customizable or user-configurable to the extent possible.(e.g., the displayed columns in the table, move, resize, modify the appearance).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Such configurations must be saved in the user profile.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"configurations\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system user interface must be suitable for users with special needs; that is, compatible with specialist software that may be used and with appropriate interface guidelines ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must provide End User and Administrator functions which are easy to use and intuitive throughout.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"End User\", \"Administrator\"], \"Design Domain\": [], \"Requirements\": [\"easy to use and intuitive throughout\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must allow persistent defaults for data entry where desirable.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"data entry\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"persistent defaults\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These defaults should include: user-definable values; values same as previous item; values derived from context, e.g.date, file reference, user identifier;",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Frequently-executed System transactions must be designed so that they can be completed with a small number of interactions (e.g.mouse clicks).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Where the CCTNS system employs a graphical user interface, it must allow users to customise it.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a graphical user interface\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Customisation should include, but need not be limited to the following changes: menu contents; layout of screens; use of function keys; on-screen colours, fonts and font sizes; ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user interfaces of the CCTNS system should comply with Standard ISO 9241.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Application user interfaces to meet its requirements and recommendations.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software accessibility ISO 9241-171 shall be the standard for guidance on software accessibility.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "User interfaces should meet its requirements and recommendations.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Content accessibility WCAG 1.0 shall be the standard used for guidance on content accessibility.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The application logo to be available on all pages as a link to the home page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing text equivalents for non-text media objects: All non-text media objects, such as graphical images or video, should be provided with alternative equivalent textual descriptions and/or with equivalent text-based functionality.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"graphical images\", \"video\", \"alternative equivalent textual descriptions\", \"equivalent text-based functionality\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making navigation self-descriptive: Navigation should be designed to help users understand where they are, where they have been and where they can go next.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [\"Navigation\"], \"Requirements\": [], \"Shared Phenomena\": [\"where they are\", \"where they have been\", \"where they can go next\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "General guidance on achieving self-descriptiveness is given in ISO 9241-110.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Showing users where they are: Each presentation segment (page or window) should provide the user with a clear and sufficient indication of where he or she is in the navigation structure and of the current segment position with respect to the overall structure.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"Each presentation segment\"], \"Requirements\": [], \"Shared Phenomena\": [\"a clear and sufficient indication\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Offering alternative access paths: Alternative access paths for navigating to a specific unit of content should be offered to support different navigation strategies.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a specific unit of content\"], \"Design Domain\": [], \"Requirements\": [\"to support different navigation strategies\"], \"Shared Phenomena\": [\"Alternative access paths\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Minimizing navigation effort: The number of navigation steps needed to reach a certain piece of content should be minimized as long as different mental models, navigation strategies and tasks of the user are taken into account.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a splash screen is used, a navigation option to skip it should be offered.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a splash screen\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a navigation option\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Avoiding opening unnecessary windows: Additional windows such as new browser windows or pop-up windows should only be opened if this supports the user’s task.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"Additional windows\"], \"Requirements\": [], \"Shared Phenomena\": [\"opened\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Opening new windows can distract, confuse or impede users for a variety of reasons.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [\"new windows\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "They can superimpose the primary window, hiding relevant information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "They could make it cognitively more difficult to understand the navigation structure with negative effects on both usability and accessibility.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "They also require additional user actions for closing unwanted windows.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"unwanted windows\"], \"Design Domain\": [], \"Requirements\": [\"for closing unwanted windows\"], \"Shared Phenomena\": [\"user actions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This may be done by placing important information at the top and providing links to information that is further down the page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"important information\", \"links to information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Horizontal scrolling should be avoided wherever possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Designing for input device independence: User interfaces should be designed to allow activation of controls by a variety of input devices.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"input device\", \"input devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to allow activation of controls\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ability to choose between different input devices for activating controls such as links, fields and buttons is important both for users who prefer a certain input mode, mobile users and users with disabilities.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"input devices\"], \"Environment Entity\": [\"users\", \"mobile users\", \"users with disabilities\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In general, device independence can be achieved if the functionality is operable via a keyboard.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making user interfaces robust: User interfaces should be designed to be as robust as possible in the face of changing technology.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"User interfaces\"], \"Requirements\": [\"Making user interfaces robust\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This encompasses being able to present content containing newer technologies by older user agents as well as designing content to be usable with future technologies.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"older user agents\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"content containing newer technologies\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Acceptable opening / download times: Application pages should be designed and implemented so that there are acceptable opening times and download times for the expected range of technical contexts of use (e.g.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Application pages\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This is particularly important for frequently accessed pages or pages that are important for user navigation and exploration, such as the home page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Minimizing user errors: Potential user errors as well as the effort needed to recover from errors should be minimized.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Potential user errors\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing clear error messages: The content of error messages shown on the pages or special error pages should clearly state the reason why the error occurred and, if possible, actions the user can take to resolve the error.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"the pages\", \"special error pages\"], \"Requirements\": [\"resolve the error\"], \"Shared Phenomena\": [\"The content of error messages\", \"actions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Users expect error messages to be in the same language as the user interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"error messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using appropriate formats, units of measurement or currency: When designing user interfaces for use by diverse groups, input and output of information elements such as currency, units of measurement, temperatures, date and time, phone numbers, address or postal codes should be designed so that they are usable.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making text resizable by the user: Text should be able to be resized by the user, using functions provided by the user agent or other appropriate means i.e.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"the user agent\"], \"Design Domain\": [], \"Requirements\": [\"Making text resizable by the user\"], \"Shared Phenomena\": [\"Text\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Text quality: The quality of textual content with respect to spelling and grammar should be sufficient so as not to impede readability.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Writing style: The reading and understanding of the textual content on the screen should be supported by suitable means, including the use of short sentences, the division of the text into shorter chunks or the presentation of content items in the form of bullet points.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Supporting text skimming: Fast skimming of text should be supported by the provision of clear links, bulleted lists, highlighted keywords, logical headings, and short phrases and sentences.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Readability of text: Text presented on the pages should be readable taking into account the expected display characteristics and spatial arrangement.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ISO 9241-303 shall be consulted for screen text legibility requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Distinguishable within-page links: Within-page links should be clearly distinguishable from other links that lead to a different page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Within-page links are shown with dashed rather than solid underlines ",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Avoiding link overload: Text pages containing large proportions of links should be formatted so that the presence of links does not impede the readability of the text.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using descriptive link labels: The target or purpose of a link should be directly indicated by its label, avoiding generic labels such as “go” or “click here” except where the purpose of the link is clear from its context on the page or the labels have commonly understood semantics in the particular application domain.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Marking links opening new windows: Links that open new browser windows or pop-up windows should be clearly marked.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Distinguishing navigation links from controls: Navigation links should be clearly distinguishable from controls activating some action.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Typical action types in user interfaces include manipulating application data, performing searches, communication actions, such as opening a new e-mail window or starting a chat function, and presentation-related actions, such as sorting a list of search results.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing printable document versions: If a document is either too long, dispersed over several pages or in a specific layout that is not suitable for online reading, a printer-friendly version of the document should be provided that prints the content in a form acceptable to the user (e.g.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the document\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Use of “white space”: “White space” on a page i.e.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "space filled only with the background color should be used in such a way that it does not impair the visual skimming of the page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "While white space is an important means of visually organizing the different content elements on a page, if the distance between the blocks of information displayed becomes too large, rapid skimming of the page can be impeded.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Selecting appropriate page lengths The length of a page should be selected so as to support the primary purpose and use of the page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Short pages are generally more appropriate for homepages, navigation pages, or overview pages that need to be read quickly.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Longer pages can be more appropriate when users want to read the content without interruptions or when the page needs to match a paper counterpart.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using colour: Colour should be used with care, taking into account human capabilities and restrictions in perceiving colour, and not as the only means of conveying information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Color should never be the only means of coding.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Some users may have difficulties in perceiving certain colors or color combinations (color-blindness).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Using frames with care: If frames are used, care should be taken to avoid possible problems, for example, those involving the use of the back button, bookmarking of pages, or scrolling of information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When frames are used, it is important to title each frame, and to describe its purpose and how frames relate to one another other.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing alternatives to frame-based presentation: If frames are used, an alternative way of presenting relevant information without frames should be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing alternative text-only pages: When style sheets and/or frames are turned off it should be possible for the user to read and understand the page; alternatively, the user should be provided with an equivalent alternative text-only page.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the page\", \"style sheets and/or frames\", \"an equivalent alternative text-only page\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Consistent page layout: Pages should be designed using consistent layout schemes, supporting the user in finding similar information at the same position on different pages.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [\"finding similar information at the same position\"], \"Shared Phenomena\": [\"Pages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Overall layout schemes apply to all pages and are preferable when all pages have a similar structure.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Frequently, however, different pages have different purposes and types of content.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In such cases, pages can usually be grouped in different categories, using one layout scheme for each category consistently.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Placing title information consistently: Page titles should be placed in a consistent location on the different pages.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Observing principles of human perception When designing application pages, the general principles of human perception should be taken into account.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The International Standards mentioned below shall be consulted for guidance.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Practical guidelines for presenting information to the user are to be found in ISO 9241-12.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Guidance on selecting and using different forms of interaction techniques is to be found in ISO 9241-14 to ISO 9241-17.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "ISO 9241-14 gives guidance about menus, ISO 9241-15 about command dialogues, ISO 9241-16 about direct manipulation and ISO 9241-17 about forms.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition, when designing multimedia information presentations, the design principles and recommendations described in ISO 14915-1 to ISO 14915-3 should be taken into account.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Appropriate content presentation also plays a key role in accessibility.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Linking back to the home page or landmark pages: Each page should contain a link leading to the home page of the application or to a landmark page that is easy to recognize for the user.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"Each page\"], \"Requirements\": [\"is easy to recognize\"], \"Shared Phenomena\": [\"a link\", \"a landmark page\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Providing a site map: A separate navigation overview such as a site map should be provided for application showing the structure of the site in an overview form.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Consistency between navigation components and content: If navigation components (or overviews) are shown in conjunction with associated content, consistency between the navigation component and the content shown should be maintained by indicating in the navigation component (e.g.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "highlighting) the topic currently visible in the content area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Placing navigation components consistently: Navigation components should be placed consistently on the pages or in the framesets in the pages of the application.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Individualization and user adaptation : Adapting the content and the navigation of a user interface to individual users or user groups can be a useful mechanism for providing information that is of interest to the users and for making access to relevant information more efficient.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"individual users\", \"user groups\", \"users\"], \"Design Domain\": [\"a user interface\"], \"Requirements\": [\"making access to relevant information more efficient\"], \"Shared Phenomena\": [\"the content and the navigation\", \"information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "User adaptation can also be important for making the user interface more accessible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the user interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Different approaches can be used for achieving these goals, like providing users with means for customizing the user interface to their personal needs i.e.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [\"the user interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "individualization designing content and navigation differently for varying user groups or roles i.e.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "such as employees of different levels, citizens etc, monitoring the user’s behaviour and adapting to the user’s goals that are inferred from the behaviour observed, recommending information that is potentially more relevant or interesting to the specific user, based on the behaviour of all users or a user group.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"employees\", \"citizens\"], \"Design Domain\": [], \"Requirements\": [\"monitoring the user’s behaviour and adapting to the user’s goals\", \"recommending information\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Taking account of the users’ tasks and information needs: When providing different access paths or navigation structures for different user groups, the tasks and information needs of these user groups should be taken into consideration.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"user groups\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"navigation structures\", \"access paths\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making individualization and adaptation evident: It should be made evident to the user when individualization and/or adaptation are used.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Making user profiles evident: If predefined user profiles or user-specified profiles are used for individualizing or adapting content, the profile currently used should be made evident.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"user profiles\", \"user-specified profiles\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Allowing users to see and change profiles: If user-specified profiles are used, users should be able to see, modify and delete that profile on demand.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"users\", \"users\"], \"Design Domain\": [], \"Requirements\": [\"see, modify and delete that profile on demand\"], \"Shared Phenomena\": [\"user-specified profiles\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user interfaces of the CCTNS system should follow the guidelines specified under www.usability.gov ",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The planned downtime for the CCTNS system must not exceed <xx> hours per <rolling three month period>.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system is considered to be down if any user is unable to perform any normal System function and if this failure is attributed to any component of the CCTNS system other than the workstation.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Unplanned downtime for the CCTNS system must not exceed <xx hours/minutes> per <rolling three month period>.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The number of incidents of unplanned downtime for the CCTNS system must not exceed <x> per <rolling three month period>.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the event of any software or hardware failure, it must be possible to restore the CCTNS system (with inline synchronization) within no more than <xx> hours.",
    "output": "{\"Machine Domain\": [\"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must provide adequate response times for commonly performed functions under both standard and peak conditions ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide adequate response times\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to perform a simple search within 5-8 seconds and a advanced search (multiple search criteria) within 10-15 seconds regardless of the storage capacity or number of cases in the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to perform a simple search within 5-8 seconds and a advanced search (multiple search criteria) within 10-15 seconds\"], \"Shared Phenomena\": [\"the storage capacity\", \"number of cases\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It does not include retrieving the records themselves.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the records\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to retrieve and display within 5-8 seconds the case which has been accessed within the previous 2 months, regardless of storage capacity or number of cases in the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to retrieve and display within 5-8 seconds the case\"], \"Shared Phenomena\": [\"storage capacity\", \"number of cases\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This requirement is intended to allow for rapid retrieval of frequently-used cases, on the understanding that frequency of use is typically correlated with recent use.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to allow for rapid retrieval of frequently-used cases\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must be able to retrieve and display within 20 seconds the case which has not been accessed within the previous 2 months, regardless of storage capacity or number of cases in the CCTNS system.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\", \"the CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to retrieve and display within 20 seconds the case\"], \"Shared Phenomena\": [\"storage capacity\", \"number of cases\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This requirement is intended to allow for cases where cases used infrequently are stored on slower media than more active records.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system be scaleable and must not have any features which would preclude use in small or large police stations, with varying numbers of cases handled.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The proposed functional architecture is modeled around centralized deployment to facilitate ease of maintenance and leverage advancement in open standards and web technologies.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The 3 C’s (Core-Configuration-Customization) forms the guiding principle for the architecture.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The functional architecture of the CCTNS solution is given in the figure below.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The functional architecture is composed of 4 major components based on SOA principles.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each of the components contains multiple services as defined by Service Definition.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The core services, support layer and security and access control components can be deployed as standard components with necessary configuration changes.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The deployment of the application will be at state level and will be configured and customized as per the state specific extensions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS systems should be designed with the following broad guidelines: ",
    "output": "{\"Machine Domain\": [\"The CCTNS systems\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should support multilingual interface ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support multilingual interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed in manner that operational data is not lost in case of any failure of equipment or communication network.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [\"equipment\"], \"Environment Entity\": [], \"Design Domain\": [\"communication network\"], \"Requirements\": [], \"Shared Phenomena\": [\"operational data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should work even in an offline mode with the critical functionality ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed to have satisfactory performance even in Police Stations connected on low-bandwidth ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to have satisfactory performance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be implemented using Service Oriented Architecture (SOA) and have a modular design ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be built on a common User Access and Authentication Service to ensure Single-Sign on for the end-user ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [\"the end-user\"], \"Design Domain\": [], \"Requirements\": [\"to ensure Single-Sign\"], \"Shared Phenomena\": [\"a common User Access\", \"Authentication Service\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be developed for a centralized deployment and maintenance ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be developed to be deployed in a 3-tier datacenter architecture ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed to have a n-tier architecture with the presentation logic separated from the business logic that is again separated from the data-access logic ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to have a n-tier architecture\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be extensible to provide access to the interfaces through PDA’s and mobile data terminals ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to provide access to the interfaces\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should adopt standardized formats and common metadata elements ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should be designed for access through browser-based systems and must impose minimal requirements on the client device ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system must support multiple types of communication services for remote access ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support multiple types of communication services for remote access\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should have capability to support public access to a subset of data and functionality ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to support public access to a subset of data and functionality\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should support multi-tier authentication where required ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support multi-tier authentication\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should support secure virtual private network connections ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support secure virtual private network connections\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should use HTTPS as the communication protocol, i.e., HTTP over an encrypted secure socket layer (SSL) ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should run on multiple browsers.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"run on multiple browsers\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should support selective encryption of the stored data.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"selective encryption\"], \"Shared Phenomena\": [\"the stored data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure secure transmission of data over the network and utilize SSL and 2-way digital signatures.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure secure transmission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through preventing cross-site scripting.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through preventing SQL Injection.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"SQL Injection\"], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through sanitizing the user-inputs.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through validating the incoming data or user request.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": [\"the incoming data\", \"user request\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through encoding the incoming data or user request.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": [\"the incoming data\", \"user request\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through validating the data both at the client and server.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the client\", \"server\"], \"Requirements\": [\"ensure high standards of security and access control through\"], \"Shared Phenomena\": [\"the data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high standards of security and access control through do not allow hard delete and perform only soft tagging the row for deletion.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high standards of security and access control\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high scalability and performance through using of AJAX based technology to improve user experience.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high scalability and performance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high scalability and performance through leveraging Asynchronous HTTP socket capabilities of web server for scalability and performance.",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high scalability and performance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The search results should be fetched from the database in batches of 10 or 20 maximum as configured within the application.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the database\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CCTNS system should ensure high scalability and performance through displaying of records on the screen in batches/paged manner. ",
    "output": "{\"Machine Domain\": [\"The CCTNS system\"], \"Physical Device\": [\"the screen\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"ensure high scalability and performance\"], \"Shared Phenomena\": [\"records\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The search should fetch only the fields that need to be displayed to the user.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Only when the user clicks on a particular record to view its further details should a query be fired to fetch the additional details for this particular record only.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A hierarchical cache should be configured and used for caching of results of most frequently used searches.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Database Indexes should be applied on the key columns used for searching.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary goal of this document is to provide a complete and accurate list of requirements for the VLA Expansion Project Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary audience of this document includes, but is not limited to, project leaders, the designers and developers of the EVLA Correlator Monitor and Control System and the end user.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the end user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The document may also be of interest to VLA Expansion Project project scientists and engineers or as a reference for individuals involved in similar projects with similar requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The requirements contained in this document are numbered based on the section/subsection in which they appear.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is the primary interface by which the correlator is configured, operated, and serviced.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"the correlator\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall receive configuration information from the VLA Expansion Project Monitor and Control System system and translate this info into a physical correlator hardware configuration.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Requirements\": [], \"Shared Phenomena\": [\"configuration information\", \"a physical correlator hardware configuration\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall process and transfer dynamic control data and monitor data.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"transfer dynamic control data\", \"monitor data\"], \"Shared Phenomena\": [\"dynamic control data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall monitor correlator and correlator subsystem health and take corrective action autonomously to recover from hardware and computing system faults.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"monitor correlator and correlator subsystem health\", \"recover from hardware and computing system faults\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall perform limited amounts of real-time data processing and probing such as providing tools to collect and display auto correlation products.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to collect and display auto correlation products\"], \"Shared Phenomena\": [\"limited amounts of real-time data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall allow for easy system access to aid testing and debugging.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The remainder of this document contains a more detailed description of the Correlator Monitor and Control System as well as the primary requirements necessary to design and build the EVLA Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\", \"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The format of the document follows that outlined in the IEEE STD 830 document, IEEE The VLA Expansion Project Correlator Monitor and Control System is responsible for correlator configuration, real time monitor/control, and hardware testing/servicing.",
    "output": "{\"Machine Domain\": [\"Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"correlator configuration\", \"real time monitor/control\", \"hardware testing/servicing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System exists as an integrated part of the overall VLA Expansion Project Monitor and Control Structure.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"VLA Expansion Project Monitor and Control Structure\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System will provide a level of abstraction to modularize the correlator system within the VLA Expansion Project environment.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the VLA Expansion Project environment\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The gateway to the correlator will be through the Virtual Correlator Interface which will exist as a software entity on the The Correlator Monitor and Control System will be designed and implemented as a Master/Slave network with one computer system coordinating the activities of a number of intelligent hardware control processors.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [\"hardware control processors\"], \"Environment Entity\": [\"the correlator\"], \"Design Domain\": [\"the Virtual Correlator Interface\", \"one computer system\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Master is expected to handle the bulk of the monitor or control interface with the outside world whereas the slaves will be only concerned with the correlator hardware systems under their direct control.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The Master\", \"the monitor or control interface\", \"the slaves\"], \"Design Domain\": [\"the correlator hardware systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This topology will place the real-time computing requirements in the slave layer and the quasi real-time, network-chaotic loads into the master layer.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the slave layer\", \"the master layer\"], \"Design Domain\": [], \"Requirements\": [\"the real-time computing\", \"the quasi real-time, network-chaotic\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "One of the primary benefits of this structure is isolation of the correlator hardware from the the EVLA Correlator Monitor and Control System is expected to be redundant in critical areas and highly modular.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [\"the correlator hardware\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator monitor subsystem will provide VLA Expansion Project system wide access to all correlator system states including the Monitor and Control System supervisor system state.",
    "output": "{\"Machine Domain\": [\"The Correlator monitor subsystem\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"VLA Expansion Project system\"], \"Requirements\": [], \"Shared Phenomena\": [\"all correlator system states\", \"the Monitor and Control System supervisor system state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Some of this information will be provided on a time synchronous basis as required by other systems and other information will only be presented on a request basis.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System will be a fully observable system with the only limits placed on information access being those imposed by hardware, bandwidth, and/or security restrictions.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Error and status messages will be provided in a concise time/location referenced format to upper system levels in a content controllable manner.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"upper system\"], \"Requirements\": [], \"Shared Phenomena\": [\"Error and status messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Correlator configurations and control instructions will be received from the VLA Expansion Project Monitor and Control System system in a form suitable for translation by the Master Correlator Control Computer.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [\"the Master Correlator Control Computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Correlator configurations\", \"control instructions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The translation will provide the correlator with specific goal oriented hardware configuration tables to satisfy the configuration requested by the A second interface with a human GUI will also allow for configuration of the correlator hardware, preferably through the same table structures used above.",
    "output": "{\"Machine Domain\": [\"a human GUI\"], \"Physical Device\": [\"the correlator\", \"the correlator hardware\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to satisfy the configuration\"], \"Shared Phenomena\": [\"hardware configuration tables\", \"configuration\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This translation interface will be called the Virtual Correlator Interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Specific data sets required by the Backend Data Processing System will be provided in a timely and robust fashion over a secondary virtual network.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"a secondary virtual network\"], \"Environment Entity\": [], \"Design Domain\": [\"the Backend Data Processing System\"], \"Requirements\": [], \"Shared Phenomena\": [\"Specific data sets\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Ancillary monitor data including system health, error messages and configuration echoes will be spooled such that temporary loss of network communication with the VLA Expansion Project Monitor and Control System network will not result in loss of monitor data.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"not result in loss of monitor data\"], \"Shared Phenomena\": [\"Ancillary monitor data\", \"system health\", \"error messages\", \"configuration echoes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Data sample rates and contents will be fully controllable via either the VLA Expansion Project Monitor and Control System or the Backend processing controller.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the Backend processing controller\"], \"Requirements\": [], \"Shared Phenomena\": [\"Data sample rates\", \"contents\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Master Correlator Control Computer will accept external data feeds for models, time standards, fiber-link phase corrections and other required data to be packaged with control data delivered to the correlator hardware.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Master Correlator Control Computer\", \"the correlator hardware\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"models\", \"time standards\", \"fiber-link phase corrections\", \"control data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ability to attempt recovery from failure or hot-swapped hardware devices will be built into this system.",
    "output": "{\"Machine Domain\": [\"this system\"], \"Physical Device\": [\"hot-swapped hardware devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"recovery from failure\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Should a CMIB subsystem fail and not respond to reboot requests or other self-heal attempts, an alert notice will be issued so appropriate personnel can affect a hardware repair.",
    "output": "{\"Machine Domain\": [\"a CMIB subsystem\"], \"Physical Device\": [], \"Environment Entity\": [\"personnel\"], \"Design Domain\": [], \"Requirements\": [\"a hardware repair\"], \"Shared Phenomena\": [\"reboot requests\", \"self-heal attempts\", \"an alert notice\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB subsystem will then be automatically restarted and configured back into the current operational environment.",
    "output": "{\"Machine Domain\": [\"The CMIB subsystem\"], \"Physical Device\": [], \"Environment Entity\": [\"the current operational environment\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is intended that both primary and secondary Master Correlator Control Computer systems maintain full Correlator Monitor and Control System state information such that any hard failure in the primary node can be corrected by simply rerouting Monitor and Control System communications to the secondary.",
    "output": "{\"Machine Domain\": [\"Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"primary and secondary Master Correlator Control Computer systems\"], \"Design Domain\": [], \"Requirements\": [\"hard failure in the primary node can be corrected\"], \"Shared Phenomena\": [\"Correlator Monitor and Control System state information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Watchdog processes and the Master Correlator Control Computer will likewise monitor Correlator Power Control Computer health.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"Correlator Power Control Computer\", \"the Master Correlator Control Computer\"], \"Environment Entity\": [\"Watchdog processes\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Correlator Power Control Computer health\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Due to the more hardware specific connections and controls of the Correlator Power Control Computer, actions taken by external system upon hard failures are TBD.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"the Correlator Power Control Computer,\"], \"Environment Entity\": [], \"Design Domain\": [\"external system\"], \"Requirements\": [], \"Shared Phenomena\": [\"actions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All use of the Correlator Monitor and Control System will be through the VCI or Master Correlator Control Computer.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\"], \"Physical Device\": [\"Master Correlator Control Computer\"], \"Environment Entity\": [\"VCI\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software tools will be provided to assist the user at all access levels from system wide configuration and control to a low level CMIB command line instruction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"Software tools\"], \"Requirements\": [], \"Shared Phenomena\": [\"system wide configuration\", \"a low level CMIB command line instruction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary contact with array operations will be via status and error messages channeled through the Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status and error messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ability of the Correlator System to achieve and maintain high reliability and uptime will be vitally dependent upon reliable operation and rapid diagnosis and repair of faults in the hardware and software systems.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These individuals will be responsible for performing corrective and preventive maintenance along with periodic performance tests and upgrades.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Engineers and technicians will need tools to inspect and monitor individual CMIB layer devices from remote locations and have the ability to fault trace to a specific hot-swappable subsystem.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"tools\"], \"Environment Entity\": [\"Engineers\", \"technicians\", \"individual CMIB layer devices\"], \"Design Domain\": [\"a specific hot-swappable subsystem\"], \"Requirements\": [\"inspect and monitor individual CMIB layer devices\"], \"Shared Phenomena\": [\"fault trace\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These individuals are responsible for developing the software and will interact with the EVLA Correlator Monitor and Control System to ensure that it is functioning properly.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"These individuals\"], \"Design Domain\": [], \"Requirements\": [\"to ensure that it is functioning properly.\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software developer requires remote access to the EVLA Correlator Monitor and Control System so that troubleshooting can be accomplished away from the the VLA Expansion Project and during non-working hours.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"The software developer\"], \"Design Domain\": [], \"Requirements\": [\"troubleshooting\"], \"Shared Phenomena\": [\"remote access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A few authorized individuals may be allowed access to parts of the EVLA Correlator Monitor and Control System that are usually considered restricted.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If it is unavailable, incoming astronomical data will be lost.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"incoming astronomical data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ultimate determiner of a reliable and available correlator is dependent on the stability of the Functionality needs to be modularized to provide the easiest means of fault detection and repair.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The ultimate ease of use and flexibility of the correlator is rooted in the Correlator Monitor and Control System software.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Full access is required with a high level of data integration to provide the user with a logical and coherent interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a logical and coherent interface\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is assumed that all auxiliary data needed for real time update of correlator parameters will be provided directly by the VLA Expansion Project Monitor and Control System system or by dedicated servers.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"dedicated servers\"], \"Requirements\": [\"real time update of correlator parameters\"], \"Shared Phenomena\": [\"all auxiliary data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is assumed that the backend data processing and VLA Expansion Project Monitor and Control System systems will be capable of accepting output data rates generated by the Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the backend data processing\", \"VLA Expansion Project Monitor and Control System\", \"the Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"data rates\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interface between the CMIB, Master Correlator Control Computer, and Correlator Power Control Computer shall be Ethernet of 100 Mbits/sec or better data rate.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interface shall be transformer coupled copper twisted pair unless other materials are required for noise, ground isolation, or physical layout constraints.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Network switches shall be employed to distribute traffic within a correlator rack and where their use will significantly reduce overall network wiring complexity.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"Network switches\", \"a correlator rack\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Master Correlator Control Computer-CMIB, Master Correlator Control Computer-Correlator Power Control Computer, and Master Correlator Control Computer-VLA Expansion Project Monitor and Control System networks shall be on separate physical interfaces.",
    "output": "{\"Machine Domain\": [\"Master Correlator Control Computer-VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [\"The Master Correlator Control Computer-CMIB\", \"Master Correlator Control Computer-Correlator Power Control Computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be a redundant communication path between the Master Correlator Control Computer and Correlator Power Control Computer to provide for remote reboot in the event of a networking or computing failure.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"the Master Correlator Control Computer\", \"Correlator Power Control Computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to provide for remote reboot\"], \"Shared Phenomena\": [\"a redundant communication path\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The interface between the Master Correlator Control Computer and external networks shall be Ethernet of 100 Pathways penetrating the correlator shielded room shall be fiber optic or other low RFI material to meet RFI specifications.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Network routers/switches shall be employed at the Master Correlator Control Computer-VLA Expansion Project Monitor and Control System interface level to protect the Master Correlator Control Computer from unauthorized access and irrelevant network traffic.",
    "output": "{\"Machine Domain\": [\"the Master Correlator Control Computer-VLA Expansion Project Monitor and Control System\"], \"Physical Device\": [\"Network routers/switches\", \"the Master Correlator Control Computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to protect the Master Correlator Control Computer from unauthorized access\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB daughter board shall communicate with the correlator carrier boards via either the PCI or ISA busses.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The CMIB daughter board\", \"the correlator carrier boards\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the PCI\", \"ISA busses\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Alternative communication paths may be through a serial or parallel connection as required.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB shall be able to read back the contents of all writeable hardware control registers where meaningful.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The CMIB\", \"all writeable hardware control registers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the contents\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It is desired that the state of the correlator hardware be available through interrogation across the CMIB bus for monitoring and fault tolerance.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"the correlator hardware\", \"the CMIB\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"monitoring and fault tolerance\"], \"Shared Phenomena\": [\"the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB shall have control of hardware warm boots such that an external command from the Master Correlator Control Computer to reboot the CMIB shall have an option to force a hardware warm boot.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The CMIB\", \"hardware\", \"the Master Correlator Control Computer\", \"the CMIB\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to force a hardware warm boot\"], \"Shared Phenomena\": [\"an external command\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The carrier board for the CMIB shall have an externally visible indicator that will provide a user with a physical indication of CMIB operational status.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The carrier board for the CMIB\", \"visible indicator\"], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a physical indication of CMIB operational status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Where applicable, all computers and peripherals shall be powered though UPS type devices with sufficient capacity for the computers to safely coordinate a system wide shutdown of the correlator hardware in the event of a prolonged power outage.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The UPS devices need the ability to signal the Correlator Monitor and Control System when a power outage has occurred and keep the Correlator Monitor and Control System apprised of time remaining on backup power.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\", \"the Correlator Monitor and Control System\"], \"Physical Device\": [\"The UPS devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"signal\", \"time remaining on backup power\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All computers within the Correlator Monitor and Control System system shall have the ability for authorized users to directly access individual systems for maintenance and monitoring through remote logins.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\"], \"Physical Device\": [\"All computers\"], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [\"maintenance and monitoring through remote logins\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each computer system in the Correlator Monitor and Control System shall have a hardware based watchdog timer configured to reboot the EVLA Correlator Monitor and Control System in the case of a system hang.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\"], \"Physical Device\": [\"Each computer system\", \"watchdog timer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"reboot the EVLA Correlator Monitor and Control System\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Reboots should result in minimal system interruptions with the offending CPU reconfiguring and returning to service autonomously.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The CMIB shall conform to both electrical and physical The CMIB shall contain 64 Mbytes or greater of SDRAM, IDE hard disk interface, minimum of one serial and one parallel interface, PCI/ISA buses, 100BaseT network interface, capacity to boot and run a generic COTS operating system in a near real-time environment from local non-volatile storage.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operating system/module combination shall be capable of supporting the real-time requirements of the correlator hardware, hardware monitor/control/diagnostics with support for standalone test bench operation with simulated control data generation, and the ability to access and upgrade correlator hardware The Master Correlator Control Computer shall be a high availability type general- purpose computer capable of supporting multiple Ethernet interfaces, COTS operating systems, and support server/host services for the CMIB operating system.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This computer may exist as a hot swappable or redundant CPU device capable of self-healing where possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"This computer\", \"CPU device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"self-healing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This computer may exist as a hot swappable or redundant CPU device capable of self-healing where possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"This computer\", \"CPU device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"self-healing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This requirement is to allow correlator power monitoring and control to continue in the event of an Monitor and Control System network failure.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All lower system error and debug messages shall be present at the Master Correlator Control Computer layer.",
    "output": "{\"Machine Domain\": [\"the Master Correlator Control Computer layer\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"error\", \"debug messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Aside from a networking or CPU failure, it should never be necessary to directly access a CPU to display error messages.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All system error and debug messages shall be categorized in a logical fashion such that message traffic can be filtered as to content, detail, and message rate.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Personnel interested in error messages should be able to easily filter the error message stream.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All messages passed between Correlator Monitor and Control System system layers shall have both UTC and wall clock time stamp information appropriate for the message type.",
    "output": "{\"Machine Domain\": [\"Correlator Monitor and Control System system layers\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Error messages will be stamped with their discovery time, control messages will be stamped with their generation time.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Other message internal time stamps can be used as monitor/control parameters as deemed necessary.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software shall be provided that allows an authorized user full access to all messaging, monitor, and control traffic.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"an authorized user\"], \"Design Domain\": [\"Software\"], \"Requirements\": [\"access to all messaging,\", \"monitor, and control traffic\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This software will provide full system access for testing, debugging, and control while the correlator is off line or under the control of the VLA Expansion Project Monitor and Control System system.",
    "output": "{\"Machine Domain\": [\"the VLA Expansion Project Monitor and Control System system\"], \"Physical Device\": [\"the correlator\"], \"Environment Entity\": [], \"Design Domain\": [\"This software\"], \"Requirements\": [], \"Shared Phenomena\": [\"full system access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A Graphical User Interface shall be provided as an interface to the Correlator Monitor and Control System test software that allows for a convenient and configurable tool to access the Correlator Monitor and Control System remotely through the VCI.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System shall be self-monitoring.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"self-monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "It will be capable of detecting, reporting on and automatically taking action to remedy or lessen the impact of the following types of abnormal conditions: processor hardware failure, operating system hangs or crashes, temperature or voltage deviations, computational performance below minimum specifications, computational error rates above maximum specification, internal communications failures.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software part of the EVLA Correlator Monitor and Control System shall be able to perform without total system restart due to internal failure between system maintenance windows.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The hardware part of the EVLA Correlator Monitor and Control System shall be able to perform indefinitely without complete loss of service, except in the event of total failure of primary and backup power.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [\"primary and backup power\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The EVLA Correlator Monitor and Control System shall be able to continue processing of all correlator configuration/control events until the queues of parameters are exhausted and external communications are restored.",
    "output": "{\"Machine Domain\": [\"The EVLA Correlator Monitor and Control System\"], \"Physical Device\": [\"all correlator\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"all correlator configuration/control events\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The EVLA Correlator Monitor and Control System shall be able to sit at idle and resume operations with minimal delay.",
    "output": "{\"Machine Domain\": [\"The EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All system processing and interconnect hardware shall be readily accessible for maintenance, repair, replacement and reconfiguration.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This excludes items that due to their physical location, are not practical to configure for ready access.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All systems and application source code shall be available to or on the EVLA Correlator Monitor and Control Systems that execute it.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All software application modules shall be debuggable.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "They should be organized such that all inputs and outputs can be simulated if necessary.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All software processes shall be killable, restartable, debuggable and testable with minimal impact on normal system operations.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Operating system software shall either have source code available or come with sufficient diagnostics and customer support.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "I/O, communications, and processing hardware shall be easily expandable, reconfigurable, augmentable and replaceable to meet increasing data traffic and processing demands imposed by VLA Expansion Project science, Correlator changes, and availability of new hardware.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Transparency shall be accomplished in manner that is transparent to processing, communications and I/O software functions with the possible exception of recompilation of executables.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Seamlessness shall be accomplished in a manner that is seamless, in that it does not affect hardware modules or software functionality that it meets at interfaces.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Correlator Monitor and Control System needs a robust security mechanism in place so that unauthorized users are not allowed access.",
    "output": "{\"Machine Domain\": [\"The Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"unauthorized users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Authorized users are expected to be restricted to software and hardware development, testing, maintenance and operations personnel.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All users of the Correlator Monitor and Control System must be uniquely identified.",
    "output": "{\"Machine Domain\": [\"the Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"All users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This could be done via a username and associated password scheme that would authenticate and authorize the user access to the EVLA Correlator Monitor and Control System and, if applicable, grant the user access to restricted or controlled parts of the EVLA Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "If a user cannot be identified, they will not be given access.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In order to monitor all past access to the EVLA Correlator Monitor and Control System, all attempts to access the EVLA Correlator Monitor and Control System should be logged.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\", \"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"all past access\", \"all attempts\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Systems operations should be given unrestricted access to all aspects of the EVLA Correlator Monitor and Control System and should have the authority to grant and revoke privileges on a per-user basis.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Development, testing and maintenance personnel, on the other hand, require access to some parts of the EVLA Correlator Monitor and Control System, but not all, indicating that an access level is needed that allows privileges to be granted on a per-user and what-do-you-need-to-do basis.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Development\", \"testing and maintenance personnel\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All users of the EVLA Correlator Monitor and Control System shall login using some form of unique identification.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"All users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"unique identification\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A system administrator shall have unrestricted access to all aspects of the EVLA Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"A system administrator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"unrestricted access\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The administrator shall have the ability to remove a user from the EVLA Correlator Monitor and Control System.",
    "output": "{\"Machine Domain\": [\"the EVLA Correlator Monitor and Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"The administrator\", \"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"remove a user\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The administrator shall have the ability to edit a user’s system access properties.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The administrator\"], \"Design Domain\": [], \"Requirements\": [\"to edit a user’s system access properties\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The EVLA Correlator Monitor and Control System shall continue operations, although not Description necessarily at full capacity, on all unaffected resources during partial shutdowns for maintenance, repair and/or upgrade.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Replaceability modular design principles shall be employed to the maximum extent possible.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Maximal practical use of available hot swappable devices and components shall be made.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Complete and comprehensible hardware systems specifications and configuration information shall be readily available.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software system and application code shall be well documented and written in a generally familiar language or languages.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software shall be written in a style that is easily readable and using practices that allow for minimal confusion.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System (TCS) System/Subsystem Specification",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"(TCS) System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This TACTICAL CONTROL SYSTEM (TCS) - SYSTEM / SUBSYSTEM SPECIFICATION (SSS) - VERSION 1.0 identifies, specifies, and establishes the detailed system requirements for the Tactical control system as set forth by the OPERATIONAL REQUIREMENTS DOCUMENT FOR THE UNMANNED AERIAL VEHICLE (UAV) TACTICAL CONTROL SYSTEM (TCS) - VERSION 5.0.",
    "output": "{\"Machine Domain\": [\"TACTICAL CONTROL SYSTEM\", \"the Tactical control system\"], \"Physical Device\": [], \"Environment Entity\": [\"UNMANNED AERIAL VEHICLE\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The SSS further specifies the methods to be used to ensure that each requirement has been met.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Requirements pertaining to the TCS external interfaces are covered in separate Interface Design ",
    "output": "{\"Machine Domain\": [\"the TCS\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The purpose of the Tactical Control System is to provide the military services with a single command, control, data receipt, data processing, data export and dissemination system that is interoperable with the family of all present and future tactical unmanned aerial vehicles.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"tactical unmanned aerial vehicles\"], \"Design Domain\": [\"data export and dissemination system\"], \"Requirements\": [\"to provide the military services\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System will also be capable of receiving and processing information from High Altitude and Endurance (HAE) UAVs, their associated payloads, future development UAVs and payloads.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"High Altitude and Endurance (HAE) UAVs\", \"associated payloads\", \"development UAVs\", \"payloads\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Unmanned Aerial Vehicle Joint Project Office (UAV JPO) has undertaken development of a Tactical Control System for UAVs.",
    "output": "{\"Machine Domain\": [\"a Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"The Unmanned Aerial Vehicle Joint Project Office\", \"UAVs\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Phase 1 is defined as the Program Definition and Risk Reduction phase, and Phase 2 is defined as the Engineering and Manufacturing Development phase in accordance with Department Of Defense Instruction (DODI) - 5000.2R.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "During Phase 2, Tactical Control System Low Rate Initial Production (LRIP) will commence.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Phase 1 will be a 24 month period and will demonstrate Level 1 through Level 5 interaction (as defined below) in an Incremental and Evolutionary strategy as described in accordance with MIL-STD-498.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will receipt and transmission of secondary imagery and/or data from multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"secondary imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will direct receipt of imagery and/or data from multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will control of the UAV payload in addition to direct receipt of imagery/data for multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"imagery/data\", \"the UAV payload\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System has capability to have full function and control of the UAV from takeoff to landing for multiple UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV\", \"the UAV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System consists of the software, software-related hardware and the extra ground support hardware necessary for the control of the Outrider, and the Predator UAV, and future tactical UAVs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"software-related hardware\", \"ground support hardware\"], \"Environment Entity\": [\"Outrider\", \"Predator UAV\", \"tactical UAVs\"], \"Design Domain\": [\"software\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will also provide connectivity to specifically identified Command, Control, Communications, Computers, and ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Computers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the objective capability of receiving High Altitude Endurance ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"receiving High Altitude Endurance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Although developed as a total package, the Tactical Control System will be scaleable to meet the user's requirements for deployment.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide a common Human-Computer Interface (HCI) for tactical airborne platforms to simplify user operations, training, and facilitate seamless integration into the Services’ joint C4I infrastructure across all levels of interaction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"user\", \"Services’ joint C4I infrastructure\"], \"Design Domain\": [\"Human-Computer Interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The major focus of the Tactical Control System program is software.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software will provide the UAV operator the necessary tools for computer related communications, mission tasking, mission planning, mission execution, data receipt, data processing, limited data exploitation, and data dissemination.",
    "output": "{\"Machine Domain\": [\"software\"], \"Physical Device\": [], \"Environment Entity\": [\"UAV operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"tools\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software will provide a high resolution computer generated graphical user interface that enables a UAV operator trained on one system to control different types of UAVs or UAV payloads with a minimum of additional training.",
    "output": "{\"Machine Domain\": [\"software\"], \"Physical Device\": [\"high resolution computer\"], \"Environment Entity\": [\"UAV operator\", \"UAVs\", \"UAV payloads\"], \"Design Domain\": [\"graphical user interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will operate in an open architecture and be capable of being hosted on computers that are typically supported by the using Service.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"computers\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Software developed will be Defense Information Infrastructure / Common Operating Environment (DII/COE) compliant, non-proprietary, and the architectural standard for all future tactical UAVs.",
    "output": "{\"Machine Domain\": [\"Software\"], \"Physical Device\": [\"tactical UAVs\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To the extent possible, the Tactical Control System will use standard Department of Defense (DoD) software components to achieve commonality.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Department of Defense (DoD) software components\"], \"Requirements\": [\"achieve commonality\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide software portability, scaleable functionality, and support for operational configurations tailored to the users’ needs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"software\"], \"Physical Device\": [], \"Environment Entity\": [\"users\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To the extent possible, the Tactical Control System will use standard DoD components in order to achieve commonality.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"standard DoD components\"], \"Requirements\": [\"achieve commonality\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will use the computing hardware specified by the service specific procurement contracts.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"computing hardware\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The individual armed services will identify Tactical Control System computing hardware, the desired level of Tactical Control System functionality, the battlefield C4I connectivity, and the particular type of air vehicle and payloads to be operated depending upon the deployment concept and area of operations.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [\"air vehicle\"], \"Environment Entity\": [\"individual armed services\"], \"Design Domain\": [\"computing hardware\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware must be scaleable or modular to meet varying Service needs.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System hardware\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"meet varying Service needs\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware will permit long range communications from one to another, data storage expansion, access to other computers to share in processing capability, and multiple external peripherals.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"computers\", \"peripherals\"], \"Environment Entity\": [], \"Design Domain\": [\"The Tactical Control System hardware\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System integration with C4I systems will be accomplished through development of interfaces that permit information exchange between the Tactical Control System and specified C4I systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems\", \"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"information exchange\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be capable of entering DII/COE compliant networks.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"DII/COE compliant networks\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Advanced Tomahawk Weapons Control Station (ATWCS).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Advanced Tomahawk Weapons Control Station\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Advanced Field Artillery Tactical Data System (AFATDS).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Advanced Field Artillery Tactical Data System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with All Source Analysis System (ASAS).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"All Source Analysis System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Automated Target Hand-off System (ATHS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Automated Target Hand-off System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Closed Circuit Television (CCTV)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Closed Circuit Television\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Common Operational Modeling, Planning, and Simulation Strategy (COMPASS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Contingency Airborne Reconnaissance System (CARS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Contingency Airborne Reconnaissance System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Enhanced Tactical Radar Correlator (ETRAC)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Enhanced Tactical Radar Correlator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Guardrail Common Sensor/Aerial Common Sensor (ACS) Integrated Processing Facility (IPF)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Guardrail Common Sensor/Aerial Common Sensor (ACS) Integrated Processing Facility (IPF)\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Intelligence Analysis System (IAS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Intelligence Analysis System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Joint Deployable Intelligence Support System (JDISS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Joint Deployable Intelligence Support System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Joint Maritime Command Information System (JMCIS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Joint Maritime Command Information System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Joint Service Imagery Processing System – Air Force (JSIPS-AF)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Joint Service Imagery Processing System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Joint Service Imagery Processing System - Navy (JSIPS-N)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Joint Service Imagery Processing System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Joint Surveillance Target Attack Radar System (JSTARS) Ground Station Module/Common",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Joint Surveillance Target Attack Radar System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Ground Station (GSM/CGS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Ground Station\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Modernized Imagery Exploitation System (MIES)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Modernized Imagery Exploitation System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Army Mission Planning System (AMPS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Army Mission Planning System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Air Force Mission Support System (AFMSS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Air Force Mission Support System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Tactical Aircraft Mission Planning System (TAMPS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Tactical Aircraft Mission Planning System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Tactical Exploitation Group (TEG)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Tactical Exploitation Group\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Tactical Exploitation Systeme (TES)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Tactical Exploitation Systeme\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be connected with Theater Battle Management Core System (TBMCS)",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Theater Battle Management Core System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will export and disseminate UAV imagery products, tactical communication messages, as well as mission plans and target coordinates.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"UAV imagery products\", \"tactical communication messages\", \"mission plans\", \"target coordinates\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will also receive, process, and display tasking orders, and operational information from Service specific mission planning systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Service specific mission planning systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"tasking orders\", \"operational information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System system will be capable of controlling the Predator and Outrider AVs with a single control system, using existing military services standard hardware and software, and supporting interfaces with various C4I systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System system\"], \"Physical Device\": [\"the Predator\", \"Outrider AVs\", \"military services standard hardware\"], \"Environment Entity\": [], \"Design Domain\": [\"single control system\", \"software\", \"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall consist of the Tactical Control System workstation Hardware Configuration Items (HWCIs), TCS Computer Software Configuration Items (CSCIs), and additional TCS Support HWCIs and CSCIs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Tactical Control System workstation Hardware Configuration Items\", \"TCS Computer Software Configuration Items\", \"TCS Support HWCIs and CSCIs\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System HWCI’s and CSCI’s shall be Year 2000 compliant.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The primary function of the Tactical Control System is to provide command and control of the payload, Air Vehicle (AV), data link, and other necessary support equipment in order to employ tactical UAVs to conduct reconnaissance, surveillance, target acquisition, and target identification missions.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Air Vehicle\", \"data link\", \"support equipment\", \"tactical UAVs\", \"the payload\"], \"Design Domain\": [], \"Requirements\": [\"conduct reconnaissance, surveillance, target acquisition, and target identification missions\"], \"Shared Phenomena\": [\"command and control\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will interface with and export and disseminate payload data to military supported units via external (not part of TCS) tactical communications systems, and C4I systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"military supported units\"], \"Design Domain\": [\"tactical communications systems\", \"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"payload data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Communications procedures, formats, and interfaces will be interoperable with selected standard DoD C4I systems, architectures, and protocols.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"standard DoD C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operational capabilities to be performed by the system will be determined by task analysis in accordance with MIL STD 1388 Task 401 as a guide based on a thorough understanding of Outrider and Predator mission requirements.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"Outrider\", \"Predator\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tasks will be evaluated and allocated based on operator skills and proficiencies.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The initial TCS task analysis will produce a system baseline which will be optimized by engineering analysis and operator evaluations.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall meet the applicable capability and characteristic criteria established by the Operational Requirements Document (ORD) CAF 003-90-I-A for the RQ-1A Predator Medium Altitude Endurance Unmanned Aerial Vehicle/System (MAE UAV) and the Close Range – Tactical Unmanned Aerial Vehicle (CR-TUAV).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Medium Altitude Endurance Unmanned Aerial Vehicle/System\", \"Tactical Unmanned Aerial Vehicle\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide software capabilities and hardware configurations necessary to fulfill the operational tasking requirements across the 5 levels of interaction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to fulfill the operational tasking requirements\"], \"Shared Phenomena\": [\"software capabilities\", \"hardware configurations\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide receipt and transmission of secondary imagery and/or data from UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"secondary imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide direct receipt of imagery and/or data from UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide control of the UAV payload in addition to direct receipt of imagery/data for UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [\"UAV payload\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"imagery\", \"data\", \"control\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide control of the UAV, less launch and recovery, plus all the functions of level three from UAV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\", \"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"control\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide capability to have full function and control of the UAV from takeoff to landing.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"control\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The states of operation of the Tactical Control System shall include Startup, Operation, and Shutdown.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System states shall not exist concurrently.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon application of power the Tactical Control System shall enter the Startup State.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will execute the particular startup mode which corresponds with the manner in which the Tactical Control System ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the Tactical Control System Software is terminated normally the Tactical Control System shall enter the Normal Startup Mode of operation upon application of power.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System Software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the Tactical Control System software is halted due to an unplanned power interruption as well as abnormal program termination, then the Tactical Control System shall enter the Recovery Startup Mode upon application of power.",
    "output": "{\"Machine Domain\": [\"Tactical Control System software\", \"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "During startup, the Tactical Control System shall determine which of the 5 levels of interaction are achievable by the Tactical Control System configuration.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Levels of interaction higher than those achievable by a particular Tactical Control System configuration shall be prohibited.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall inform the operator if the operator attempts to execute a function prohibited as a result of the determined level of interaction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When executing in the Normal Startup Mode, the Tactical Control System shall provide the system functionality necessary to initialize the system to place it in the Operations State within 60 seconds from the time power is supplied and the Tactical Control System application is launched.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to initialize the system\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Initialization of the Tactical Control System HWCIs shall include startup of HWCIs, download of software, startup of CSCIs, execution of Startup FD/L, and establishment of the state of readiness of all interfaces.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Recovery of the Tactical Control System HWCIs shall include startup of HWCIs, download of software, startup of CSCIs, and establishment of the state of readiness of all interfaces.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"HWCIs\", \"CSCIs\"], \"Design Domain\": [\"all interfaces\"], \"Requirements\": [], \"Shared Phenomena\": [\"the state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of automatically recording system state data, interface communications and other information necessary to support event reconstruction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"system state data\", \"interface communications\", \"information necessary to support event reconstruction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For recovery from abnormal termination, Tactical Control System shall prompt the operator to select the type of recovery to be executed: (1)Resume in the Same Modes And Data; (2)Resume in the Same Modes but Review and Modify the Command Data as Necessary; or, (3) Perform a Command Shutdown and Startup Via the Normal ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the type of recovery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When in the Operations State the Tactical Control System shall be capable of operating in three modes: normal operations mode, training operations mode, and maintenance operations mode.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Operations State modes shall not exist concurrently.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall have the capability to command the system to the Shutdown State from all modes under the Operations State.",
    "output": "{\"Machine Domain\": [\"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the Shutdown State\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Normal Operations Mode the Tactical Control System shall support mission planning.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support mission planning\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Normal Operations Mode the Tactical Control System shall support mission control and monitoring.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support mission control and monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Normal Operations Mode the Tactical Control System shall support payload product management.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support payload product management\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Normal Operations Mode the Tactical Control System shall support target coordinate development.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support target coordinate development\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Normal Operations Mode the Tactical Control System shall support C4I systems interface.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Functions under the Normal Operations Mode shall operate concurrently without precluding or excluding any of the other functions, in accordance with allowable operations as determined by the appropriate levels of interaction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Training Operations Mode the Tactical Control System shall support mission control and monitoring.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support mission control and monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Training Operations Mode the Tactical Control System shall support C4I systems interface.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Functions under the Training Operations Mode shall operate concurrently without precluding or excluding any of the other functions, in accordance with allowable operations as determined by the appropriate levels of interaction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall conduct AV maintenance.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [\"Human Computer Interface\"], \"Requirements\": [\"conduct AV maintenance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall conduct payload maintenance.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [\"Human Computer Interface\"], \"Requirements\": [\"conduct payload maintenance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall conduct data link terminal maintenance.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Human Computer Interface\"], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [], \"Requirements\": [\"conduct data link terminal maintenance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall conduct workstation and peripheral equipment maintenance.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"equipment\"], \"Environment Entity\": [\"workstation\", \"computer workstation\"], \"Design Domain\": [\"Human Computer Interface\"], \"Requirements\": [\"conduct workstation and peripheral equipment maintenance\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall perform fault detection/location (FD/L).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Human Computer Interface\"], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [], \"Requirements\": [\"perform fault detection/location (FD/L)\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall perform software upgrades.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Human Computer Interface\"], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [], \"Requirements\": [\"perform software upgrades\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In the Maintenance Operations Mode, if computer workstation Human Computer Interface (HCI) is required, the Tactical Control System shall perform software debug and monitoring.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Human Computer Interface\"], \"Environment Entity\": [\"computer workstation\"], \"Design Domain\": [], \"Requirements\": [\"perform software debug and monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Functions, except for software upgrade and software debug, under the Maintenance Operations Mode shall operate concurrently without precluding or excluding any of the other functions in accordance with allowable operations as determined by the appropriate levels of interaction.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Shutdown of the Tactical Control System shall include storage as well as deletion, as specified by the operator, of mission data files, shutdown of appropriate functions, shutdown of HCIs, and proper termination of all active interfaces.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"mission data files\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "There shall be no modes of operation in the shutdown state.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will allow the operator to conduct mission planning.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to conduct mission planning\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will allow the operator to conduct mission control and monitoring.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to conduct mission control and monitoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will allow the operator to conduct payload product management. ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to conduct payload product management\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will allow the operator to conduct C4I system interface.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [\"C4I system interface\"], \"Requirements\": [\"to conduct C4I system interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to allow the operator to generate a UAV mission plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to generate a UAV mission plan\"], \"Shared Phenomena\": [\"UAV mission plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to receive and process UAV mission plans from service specific mission planning systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"service specific mission planning systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to transmit UAV mission plans to service specific mission planning systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"service specific mission planning systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall facilitate automated processing of mission plan data received via C4I interfaces in order to extract the appropriate mission planning data.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I interfaces\"], \"Requirements\": [], \"Shared Phenomena\": [\"mission planning data\", \"mission plan data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to receive and process UAV mission plans from other Tactical Control Systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"other Tactical Control Systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to transmit UAV mission plans to other Tactical Control Systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"other Tactical Control Systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A Mission Plan shall include a Flight Route Plan for a selected AV, a Payload Plan for the selected payload, and a Communications Plan.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"payload\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Communications Plan\", \"Flight Route Plan\", \"Payload Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of storing a minimum of 500 mission plans under unique names to allow for later retrieval.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"allow for later retrieval\"], \"Shared Phenomena\": [\"mission plans\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to compute the range and bearing between two geographic positions on the map display.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to compute the range and bearing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As an objective, the Tactical Control System shall have the capability to import as well as create and modify map display overlays for fire support coordination measures [SSS547], airspace control measures [SSS548], and threat identification measures.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"create and modify map display overlays\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon completion of radar cross section analysis and characterization by the Government for each UAV type, Tactical Control System shall utilize a UAV signature versus threat lookup table (database) that identities the lethality of the threat to the UAV [SSS065], and shall provide the capability of displaying aircraft signature versus threat, before and during flight.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Government\", \"the UAV\", \"\"], \"Design Domain\": [\"database\", \"threat lookup table\"], \"Requirements\": [], \"Shared Phenomena\": [\"UAV signature\", \"aircraft signature\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall permit dynamic mission and payload retasking during all phases of operational mission execution.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"permit dynamic mission\", \"payload retasking\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to enter as well as review mission plan parameters, including AV flight parameters, payload control parameters, data link control parameters, AV VCR control parameters (if applicable to the selected AV), and AV loiter patterns.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"review mission plan parameters\", \"AV flight parameters\", \"payload control parameters\", \"data link control parameters\", \"AV VCR control parameters\", \"AV loiter patterns\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to enter system configuration characteristics in the mission plan, to include selected AV type, AV identification number, selected payload type, ground control authorization information, and required communications pre-set for data links, tactical communications, and C4I data dissemination.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"data links\"], \"Requirements\": [], \"Shared Phenomena\": [\"system configuration characteristics\", \"selected AV type\", \"AV identification number\", \"selected payload type\", \"ground control authorization information\", \"communications pre-set\", \"tactical communications\", \"C4I data dissemination\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality necessary to upload a flight route plan and payload plan (if applicable) to the AV via the selected system data link as well as direct ground connection.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the AV\"], \"Design Domain\": [\"selected system data link\"], \"Requirements\": [], \"Shared Phenomena\": [\"flight route plan\", \"payload plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall provide the capability for the operator to retrieve a mission plan for viewing, modification, as well as deletion at the operator's discretion, and allow the operator to save the mission plan under a different name, for future retrieval.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"operator\"], \"Design Domain\": [], \"Requirements\": [\"viewing\", \"modification\", \"deletion\"], \"Shared Phenomena\": [\"mission plan\", \"mission plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall automatically check the validity of the intended mission plan prior to being uploaded including altitude constraints, payload constraints, data link range constraints, airspace restrictions, fuel limitations, threat constraints, data link terrain masking effects, and Loss of Link (LOL) Plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"intended mission plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall notify the operator of all discrepancies found during the mission plan check as well as indicate successful completion of the mission plan check.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to override validation faults after the fault is acknowledged by the operator.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to set the LOL delay timer(s) during mission planning.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"to set the LOL delay timer(s) during mission planning\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The LOL delay is the time from when the AV detects an unplanned LOL to the time it initiates LOL procedures.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"AV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to print waypoint data in alphanumeric format.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"waypoint data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Flight Route Plan, as a minimum, shall include AV flight path information, Loss of Link plan, AV VCR control tasking (if applicable to the selected AV), and data link control information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Flight Route Plan\", \"AV flight path information\", \"Loss of Link plan\", \"AV VCR control tasking\", \"data link control information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to display mission waypoints and flight path graphically.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"mission waypoints\", \"flight path\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to enter waypoint data in alphanumeric format.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"waypoint data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will calculate the weight and balance data for takeoff.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the weight\", \"balance data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will perform fuel calculations.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"perform fuel calculations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will provide terrain avoidance warnings for line-of-sight flights. ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System flight route planner\"], \"Physical Device\": [], \"Environment Entity\": [\"line-of-sight flights\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"terrain avoidance warnings\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will calculate the minimum data link reception altitude for line-of-sight flights.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [\"line-of-sight flights\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the minimum data link reception altitude\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will provide payload search area information, such as visual acuity range due to atmospheric conditions, diurnal transition periods for thermal imagery, and lunar and solar terrain shadowing.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"payload search area information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System flight route planner will be able to designate flight corridors and restricted airspace.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Tactical Control System flight route planner\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"designate flight corridors and restricted airspace\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall present to the operator the estimated time of arrival and fuel status at each programmed waypoint of the proposed mission plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the estimated time of arrival\", \"fuel status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "At every waypoint and every 5 minutes, the Tactical Control System shall compute the AV's flight range based on remaining fuel.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"AV's flight range\", \"remaining fuel\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall analyze the flight route plan selected for uplink to determine that the flight constraints of the AV and the limitation of the data link are not violated prior to transmission of the flight route plan to the AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the AV\", \"the AV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the flight route plan\", \"the limitation of the data link\", \"the flight route plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The flight route plan, as a minimum, shall provide the necessary AV commands to autonomously execute a programmed flight and return to a designated recovery area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a programmed flight\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"AV commands\", \"The flight route plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the operator with an interactive graphics and map based flight route planning capability.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"interactive graphics\", \"map based flight route planning\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to create waypoints that define the desired flight path, define AV Altitude and Airspeed associated with the waypoint.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"AV Altitude\", \"Airspeed\", \"the desired flight path\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability of displaying overlays each containing 100 simultaneous icons of known fire support coordination zones, airspace control zones, threat systems, and displaying the threat engagement envelopes with associated radar terrain masking for those threats.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"airspace control zones\"], \"Design Domain\": [\"threat systems,\"], \"Requirements\": [], \"Shared Phenomena\": [\"the threat engagement envelopes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A de-clutter capability shall be provided that allows the operator to display only a selected number of the most significant threats.",
    "output": "{\"Machine Domain\": [\"operator\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"most significant threats\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to modify the maximum number of threats displayed, when de-clutter is selected.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the maximum number of threats displayed\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to display waypoint data in alphanumeric format.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"waypoint data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the operator with a clearly indicated map scale.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"clearly indicated map scale\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display an icon indicating AV position when receiving downlink from the desired AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"AV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"an icon indicating AV position\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display an icon indicating payload center field of view and footprint when receiving downlink from the desired AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"an icon indicating payload center field\", \"downlink\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display an icon, in variable sizes, indicating target position and type at coordinates selected by the operator.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"icon\", \"target position\", \"type\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display icons indicating Tactical Control System position and Ground Data Terminal (GDT) position.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Tactical Control System position\", \"Ground Data Terminal (GDT) position\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of displaying the positions of the icons in Lat./Lon., Universal Transverse Mercator (UTM), and Military Grid Reference System (MGRS) formats and provide conversion to multiple spheroid scales.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to graphically display Line of Sight versus terrain profile (DTED).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Line of Sight\", \"terrain profile\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be able to generate payload planning information to be uplinked to the AV separate from a flight route plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"AV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"payload planning information\", \"flight route plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality necessary to generate a payload plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"payload plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to display the payload swath for the selected payload for planning purposes.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the selected payload\"], \"Design Domain\": [], \"Requirements\": [\"planning purposes\"], \"Shared Phenomena\": [\"the payload swath\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the capability to control and monitor an AV, payload, data link, and C4I interfaces during the execution of a mission.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"C4I interfaces\"], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"control and monitor an AV, payload, data link, and C4I interfaces during the execution of a mission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "While flying two MAE AVs Beyond Line Of Sight (BLOS), the Tactical Control System shall provide full control functionality of each AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide full control functionality of each AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "AV specific components used to perform ground based closed loop command and control functions for Tactical Control System shall be initialized upon operator selection of a specific AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [\"AV specific components\"], \"Requirements\": [\"initialized upon operator selection of a specific AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall transmit command and control information to the AV via the uplink to the AV, and receive AV telemetry and payload information via downlink from the AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\", \"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [\"uplink\", \"downlink\"], \"Requirements\": [\"transmit command and control information to the AV via the uplink to the AV, and receive AV telemetry and payload information via downlink from the AV\"], \"Shared Phenomena\": [\"command and control information\", \"AV telemetry and payload information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of being interoperable with Predator and Outrider UAVs across the 5 levels of UAV interaction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Predator\", \"Outrider UAVs\", \"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"interoperable with Predator and Outrider UAVs across the 5 levels of UAV interaction\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to control and monitor multiple types of AVs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AVs\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control and monitor multiple types of AVs\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall notify the operator when AV performance parameters are out of limits.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"notify the operator when AV performance parameters are out of limits\"], \"Shared Phenomena\": [\"AV performance parameters\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to pass control of an AV to another Tactical Control System, and receive control of an AV from another Tactical Control System [SSS115].",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\", \"another Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"pass control of an AV to another Tactical Control System, and receive control of an AV from another Tactical Control System\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to control the AV flight commands as well as to release the AV to an autonomous flight control mode.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control the AV flight commands as well as to release the AV to an autonomous flight control mode\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "AV telemetry data shall be available to support other Tactical Control System functions as required.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support other Tactical Control System functions as required\"], \"Shared Phenomena\": [\"telemetry data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to control the flight of the selected AV in accordance with the specific ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control the flight of the selected AV in accordance with the specific\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to fully control and display the AV's Identification Friend or Foe ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"fully control and display the AV's Identification Friend or Foe\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to enter AV preset limits which, as a minimum, will include airspeed limits, altitude limits, and fuel limits.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"enter AV preset limits which, as a minimum, will include airspeed limits, altitude limits, and fuel limits\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to control an AV using the LOS as well as SATCOM data links.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [\"LOS\", \"SATCOM data links\"], \"Requirements\": [\"allow the operator to control an AV using the LOS as well as SATCOM data links\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary system capabilities required for AV flight control BLOS via uplink command to two MAE air vehicles.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"system\"], \"Physical Device\": [\"AV\", \"air vehicles\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"AV flight control BLOS via uplink command to two MAE air vehicles\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall support operation of the AV via all flight modes, to include manual controls.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support operation of the AV via all flight modes, to include manual controls\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to implement an emergency action plan, if supported by the AV, to control the AV during equipment failures.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"implement an emergency action plan, if supported by the AV, to control the AV during equipment failures\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to command the flight behavior characteristics inherent to the selected AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"allow the operator to command the flight behavior characteristics inherent to the selected AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall have the capability to initiate as well as change, to include as a minimum manual override, flight behaviors by sending the proper control commands to the UAV.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to command the AV to use the navigation methods inherent to the selected AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"command the AV to use the navigation methods inherent to the selected AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall have the capability to initiate as well as change, to include as a minimum manual override, UAV navigation methods by sending the proper control commands to the UAV.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"UAV\", \"UAV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the functionality to control, monitor, and display the operation of the Air Data ",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control, monitor, and display the operation of the Air Data\"], \"Shared Phenomena\": [\"Air Data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This control will include control of the ADT antenna and of the ADT transmitter and receiver.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"ADT antenna\", \"ADT transmitter\", \"receiver\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the functionality to control the ADT antenna.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"ADT antenna\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control the ADT antenna\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This control will including its pointing direction and mode of transmission (e.g. omni and directional).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the functionality to control the power, transmitter signal strength, and frequencies used by ADT for data link communication.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"transmitter\", \"ADT\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control the power, transmitter signal strength, and frequencies used by ADT for data link communication\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As an objective, the Tactical Control System shall support an automatic launch and recovery system.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support an automatic launch and recovery system\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As and objective, the Tactical Control System shall be interoperable with the Integrity Beacon Landing System (IBLS), and the Common Automated Recovery System (CARS), both used by Outrider.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"Outrider\"], \"Environment Entity\": [], \"Design Domain\": [\"Integrity Beacon Landing System\", \"IBLS\", \"Common Automated Recovery System\", \"CARS\"], \"Requirements\": [\"be interoperable with the Integrity Beacon Landing System (IBLS), and the Common Automated Recovery System (CARS), both used by Outrider\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As an objective, the Tactical Control System shall present sufficient cues to the operator to implement and monitor automatic launch and recovery, and to initiate abort procedures if required.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"present sufficient cues to the operator to implement and monitor automatic launch and recovery, and to initiate abort procedures if required\"], \"Shared Phenomena\": [\"cues\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to initiate the emergency recovery feature of the AV, if the AV has an emergency recovery feature.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"allow the operator to initiate the emergency recovery feature of the AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall provide the capability to monitor specific telemetry elements real-time, and record all telemetry elements for future review and processing.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide the capability to monitor specific telemetry elements real-time, and record all telemetry elements for future review and processing\"], \"Shared Phenomena\": [\"telemetry elements\", \"telemetry elements\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall provide the capability to monitor AV adherence to the uplinked mission plan, detecting any deviations greater than 10% from projected flight path, and notifying the operator if deviations are detected.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"provide the capability to monitor AV adherence to the uplinked mission plan, detecting any deviations greater than 10% from projected flight path, and notifying the operator if deviations are detected\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall provide the capability to monitor the status of all AV subsystems reporting status.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [\"AV subsystems\"], \"Requirements\": [\"monitor the status of all AV subsystems reporting status\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display the AV status, to include but not be limited to the AV location and flight and avionics system status.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"system\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"display the AV status, to include but not be limited to the AV location and flight and avionics system status\"], \"Shared Phenomena\": [\"AV status\", \"AV location and flight and avionics system status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the data link is interrupted, the Tactical Control System shall present the last known AV status values and the time at which the last values were reported.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"present the last known AV status values and the time at which the last values were reported\"], \"Shared Phenomena\": [\"AV status values\", \"last values were reported\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of displaying fuel parameters to the operator to include as a minimum, remaining fuel, flow rate, and bingo fuel.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"displaying fuel parameters to the operator to include as a minimum, remaining fuel, flow rate, and bingo fuel\"], \"Shared Phenomena\": [\"fuel parameters\", \"minimum\", \"remaining fuel\", \"flow rate\", \"bingo fuel\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall compute the estimated position of the AV during Loss of Link (LOL) based upon the last known AV position and anticipated flight path based on current flight mode (e.g. flight route plan mode, emergency flight route plan mode, maintain current heading mode).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"compute the estimated position of the AV during Loss of Link (LOL) based upon the last known AV position and anticipated flight path based on current flight mode (e.g. flight route plan mode, emergency flight route plan mode, maintain current heading mode)\"], \"Shared Phenomena\": [\"estimated position\", \"last known AV position\", \"anticipated flight path\", \"current flight mode\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall display a LOL timer to the operator initiating a LOL onset.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"LOL timer\", \"operator\"], \"Design Domain\": [], \"Requirements\": [\"display a LOL timer to the operator initiating a LOL onset\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of being interoperable with the installed payloads across the 5 levels of UAV interaction.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"being interoperable with the installed payloads across the 5 levels of UAV interaction\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the capability to control and monitor the AV payload(s).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"control and monitor the AV payload(s)\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to receive data from and control payloads on an AV that is being controlled from another Tactical Control System.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"receive data from and control payloads on an AV that is being controlled from another Tactical Control System\"], \"Shared Phenomena\": [\"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary system capabilities required for payload control beyond line of sight via uplink command of two air vehicles of the same type using sequential communication techniques.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"air vehicles\"], \"Design Domain\": [\"sequential communication techniques\"], \"Requirements\": [\"payload control beyond line of sight via uplink command of two air vehicles of the same type using sequential communication techniques\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Sequential communication means alternatively communicating with one air vehicle and then the other.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"air vehicle\", \"the other\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Current air vehicle design does not permit concurrent communications with two air vehicles at the same time.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"air vehicle\", \"air vehicles\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall receive, process, and present payload data to the operator so that the status of the payload can be determined.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"receive, process, and present payload data to the operator so that the status of the payload can be determined\"], \"Shared Phenomena\": [\"payload data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall permit the operator to control the payload using all methods supported by the payload installed in the selected AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"AV\"], \"Design Domain\": [], \"Requirements\": [\"control the payload using all methods supported by the payload installed in the selected AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide a graphical user interface display for the purpose of controlling the payload.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"user\"], \"Design Domain\": [\"graphical user interface\"], \"Requirements\": [\"controlling the payload\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide override of payload automated as well as preprogrammed inputs.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide override of payload automated as well as preprogrammed inputs\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall provide the capability to monitor payload adherence to the uplinked mission plan.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"monitor payload adherence to the uplinked mission plan\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display the current search footprint and the search history of the payload on the map.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"map\"], \"Design Domain\": [], \"Requirements\": [\"display the current search footprint and the search history of the payload on the map\"], \"Shared Phenomena\": [\"current search footprint\", \"search history of the payload\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to simultaneously control and monitor a line-of-sight as well as a BLOS data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"BLOS data terminal\"], \"Requirements\": [\"simultaneously control and monitor a line-of-sight as well as a BLOS data terminal\"], \"Shared Phenomena\": [\"line-of-sight\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality necessary to record data obtained via the data link.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"data link\"], \"Requirements\": [\"record data obtained via the data link\"], \"Shared Phenomena\": [\"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of interfacing with the specified data terminal and issuing data link terminal commands required to establish, control, and maintain the data link with a selected AV.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\", \"AV\"], \"Design Domain\": [\"data link terminal\", \"data link\"], \"Requirements\": [\"interfacing with the specified data terminal and issuing data link terminal commands required to establish, control, and maintain the data link with a selected AV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As a minimum the Tactical Control System LOS data terminal control modes shall include acquisition, autotrack, search, manual point, omni directional, as well as directional modes of operation, if applicable to the selected data link.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [\"data link\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall be able to manually override any automatic data terminal control mode selection if desired, except during Emission Control (EMCON) and Hazards of Electromagnetic Radiation to Ordnance (HERO) conditions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"data terminal\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall support a LOS data link and SATCOM data link capability.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"LOS data link\", \"SATCOM data link\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For shipboard operations, the Tactical Control System shall provide the capability to switch to a second LOS antenna, if a second antenna is available, when desired (e.g. the currently active antenna is masked by shipboard obstructions).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"shipboard\", \"shipboard obstructions\", \"LOS antenna\", \"antenna\"], \"Design Domain\": [], \"Requirements\": [\"switch to a second LOS antenna, if a second antenna is available\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to switch to a SATellite COMmunication (SATCOM) antenna, if the selected AV has SATCOM capability, when desire (e.g. the AV proceeds beyond LOS range as well as when LOS is obstructed).",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\", \"AV\"], \"Environment Entity\": [\"antenna\"], \"Design Domain\": [], \"Requirements\": [\"switch to a SATellite COMmunication (SATCOM) antenna\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an interactive display for the purpose of controlling the data link terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data link terminal\"], \"Design Domain\": [\"interactive display\"], \"Requirements\": [\"interactive display for the purpose of controlling the data link terminal\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide automatic pointing commands for directional antennas, and shall allow for the manual pointing of directional antennas when desired by the operator.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"directional antennas\", \"operator\", \"directional antennas\"], \"Design Domain\": [], \"Requirements\": [\"automatic pointing commands for directional antennas, and shall allow for the manual pointing of directional antennas when desired by the operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of positioning antennas to maintain LOS as well as SATCOM.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"antennas\"], \"Design Domain\": [], \"Requirements\": [\"positioning antennas to maintain LOS as well as SATCOM\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall incorporate antenna pedestal 3 -axis stabilization to compensate for platform (e.g. ship, or HMMWV) motion, if applicable.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"antenna pedestal\", \"platform\"], \"Design Domain\": [], \"Requirements\": [\"incorporate antenna pedestal 3 -axis stabilization to compensate for platform (e.g. ship, or HMMWV) motion, if applicable\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of automatically controlling the transmitter and receiver functions of the selected data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"automatically controlling the transmitter and receiver functions of the selected data terminal\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall be able to manually override the automatic function selection of the selected data terminal, if desired.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"manually override the automatic function selection of the selected data terminal, if desired\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of automatically controlling the transmitter and receiver modes of the selected data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"automatically controlling the transmitter and receiver modes of the selected data terminal\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall be able to manually override the automatic mode selection of the selected data terminal, if desired.",
    "output": "{\"Machine Domain\": [\"operator\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of automatically controlling the transmitter and receiver frequencies of the selected data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"transmitter\", \"receiver\", \"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"automatically controlling the transmitter and receiver frequencies of the selected data terminal\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operator shall be able to manually override the automatic frequency selection if desired.",
    "output": "{\"Machine Domain\": [\"operator\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall receive, process, and present status data to the operator so that the status of the data terminal and the supported AV data link can be monitored.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"operator\", \"data terminal\"], \"Design Domain\": [\"data link\"], \"Requirements\": [\"eceive, process, and present status data to the operator so that the status of the data terminal and the supported AV data link can be monitored\"], \"Shared Phenomena\": [\"status data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of monitoring and displaying the signal strength of the received and transmitted signals for the selected data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"monitoring and displaying the signal strength of the received and transmitted signals for the selected data terminal\"], \"Shared Phenomena\": [\"signal strength\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of monitoring and displaying the signal quality of the received and transmitted signals for the selected data terminal.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"data terminal\"], \"Design Domain\": [], \"Requirements\": [\"monitoring and displaying the signal quality of the received and transmitted signals for the selected data terminal\"], \"Shared Phenomena\": [\"signal quality\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of presenting to the operator a visual depiction of the minimum and maximum data link operational ranges.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"presenting to the operator a visual depiction of the minimum and maximum data link operational ranges\"], \"Shared Phenomena\": [\"minimum and maximum data link operational ranges\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the functionality necessary to manage all aspects of payload product handling to include receiving, processing, displaying, and performing limited exploitation.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"payload product\"], \"Design Domain\": [], \"Requirements\": [\"manage all aspects of payload product handling to include receiving, processing, displaying, and performing limited exploitation\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The payload product includes the payload sensor output and the appropriate AV and payload telemetry data.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"payload sensor\", \"AV\"], \"Environment Entity\": [\"payload product\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"payload telemetry data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to process payload product data from Electro Optical (EO), Infrared (IR), and Synthetic Aperture Radar (SAR) payloads.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Electro Optical (EO)\", \"Infrared (IR)\", \"Synthetic Aperture Radar (SAR)\"], \"Design Domain\": [], \"Requirements\": [\"process payload product data from Electro Optical (EO), Infrared (IR), and Synthetic Aperture Radar (SAR) payloads\"], \"Shared Phenomena\": [\"payload product data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This functionality, as a minimum, shall include: formatting, storing, internally routing, and recording the video [SSS190]; creating and storing a freeze frame of the video [SSS191]; retrieving and displaying the video [SSS192]; printing a hard copy of freeze frame video [SSS193]; and processing digital imagery for export and dissemination [SSS194].",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"video\", \"video\", \"hard copy\"], \"Design Domain\": [], \"Requirements\": [\"formatting, storing, internally routing, and recording the video [SSS190]; creating and storing a freeze frame of the video [SSS191]; retrieving and displaying the video [SSS192]; printing a hard copy of freeze frame video [SSS193]; and processing digital imagery for export and dissemination\"], \"Shared Phenomena\": [\"digital imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Payload data includes the digital and analog imagery and associated telemetry sent to the Tactical Control System from each of these payloads.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Payload data\", \"associated telemetry\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be able to store up to 24 hours of payload data.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"store up to 24 hours of payload data\"], \"Shared Phenomena\": [\"payload data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be in compliance with Common Imagery Ground Surface Station (CIGSS), United States Imagery Standards (USIS), Video Working Group Standards Architecture, National Imagery Transmission Format (NITF) Version 2.0, and Global Command Control Systems (GCCS) when processing payload imagery data.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The NITF 2.0 imagery files generated by the Tactical Control System shall contain the necessary telemetry and support data to permit subsequent imagery exploitation by C4I systems.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"NITF 2.0 imagery files\"], \"Design Domain\": [\"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"telemetry and support data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have a built-in text entry capability including the ability to annotate textual information on imagery.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have a built-in text entry capability including the ability to annotate textual information on imagery\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of receiving secondary HAE UAV payload imagery.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"receiving secondary HAE UAV payload imagery\"], \"Shared Phenomena\": [\"secondary HAE UAV payload imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Payload telemetry data shall be available to support other Tactical Control System functions as required.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Payload telemetry data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Annotation includes operator generated comments as well as graphics which are superimposed on the imagery.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Annotation\", \"comments\", \"graphics\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Overlays consist of information obtained from external sources that is selected by the operator for presentation with the imagery.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"Overlays\", \"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to simultaneously view imagery as well as data from more than one payload, when applicable.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"simultaneously view imagery as well as data from more than one payload, when applicable\"], \"Shared Phenomena\": [\"imagery\", \"data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System operator shall be able to select the content of the overlay information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The Tactical Control System operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to select and deselect several types of cross hairs (or other similar ICON) to identify a selected point on a target.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to select and deselect several types of cross hairs (or other similar ICON) to identify a selected point on a target\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "RS170A video and digital imagery shall be routed to Tactical Control System functions and displayed upon operator request.",
    "output": "{\"Machine Domain\": [\"Tactical Control System functions\"], \"Physical Device\": [\"RS170A video\"], \"Environment Entity\": [\"digital imagery\", \"operator request\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to conduct limited exploitation, to include voice and textual reporting for spot and mission objectives, on the payload product data.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the payload product data\"], \"Design Domain\": [], \"Requirements\": [\"to conduct limited exploitation\", \"to include voice and textual reporting for spot and mission objectives\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Limited exploitation, as a minimum, will include image enhancement and annotation.",
    "output": "{\"Machine Domain\": [\"Limited exploitation\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"image enhancement\", \"annotation\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The image enhancement capability shall include contrast, brightness, edge enhancement, and sharpness.",
    "output": "{\"Machine Domain\": [\"The image enhancement capability\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"contrast\", \"brightness\", \"edge enhancement\", \"sharpness\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to capture frozen-frames of imagery and store these frozen images for further review and processing.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to capture frozen-frames of imagery\", \"store these frozen images for further review and processing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to display Near-Real Time (NRT) imagery to include, as a minimum, date/time group, target location coordinates when the target is in the center of the field of view, north seeking arrow, and AV position and heading.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to display Near-Real Time (NRT) imagery\", \"date/time group\", \"target location coordinates\", \"north seeking arrow\", \"AV position and heading\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to compute the range and bearing between two geographic positions located on the payload imagery display.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the payload imagery display\"], \"Design Domain\": [], \"Requirements\": [\"to compute the range and bearing between two geographic positions\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the functionality to determine target coordinates, and estimate target coordinate accuracy.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to determine target coordinates\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall support a target location function where the operator can request the current ground location of the payload field-of-view center.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\", \"the current ground location\", \"the payload field-of-view center\"], \"Design Domain\": [], \"Requirements\": [\"support a target location function\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to determine the location of items of interest within the payload field of view, and express these locations in coordinates acceptable for military applications.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the payload field of view\"], \"Design Domain\": [], \"Requirements\": [\"to determine the location of items of interest\", \"express these locations in coordinates acceptable for military applications\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality necessary to manage all aspects of C4I system interfaces to include receiving, processing, and transmitting tactical information to include but not limited to character based text messages, NITF 2.0 imagery files, and RS-170A video.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"RS-170A video\"], \"Environment Entity\": [\"NITF 2.0 imagery files\"], \"Design Domain\": [], \"Requirements\": [\"to manage all aspects of C4I system interfaces\"], \"Shared Phenomena\": [\"receiving, processing, and transmitting tactical information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall plan and conduct a mission.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"plan and conduct a mission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be responsible for the presentation of payload products and target coordinates for the purpose of export and dissemination.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"the presentation of payload products\", \"target coordinates for the purpose of export and dissemination\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide information to the C4I system, utilizing data obtained from drones (non-real-time trajectories, tactical points, and details), for use by C4I system operators. This information is transmitted via tactical data communication links and is available for engagement by appropriate weapon systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"This information\"], \"Physical Device\": [], \"Environment Entity\": [\"C4I system operators\"], \"Design Domain\": [\"the C4I system\", \"weapon systems\", \"tactical data communication links\"], \"Requirements\": [\"provide information to the C4I system\"], \"Shared Phenomena\": [\"utilizing data obtained from drones\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to interoperate with a data server to receive, extract, and push intelligence data.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to interoperate with a data server\", \"to receive\", \"extract\", \"push intelligence data\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to use cable to deliver live video imagery in multiple locations.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"live video\"], \"Environment Entity\": [\"live video imagery\", \"in multiple locations\"], \"Design Domain\": [], \"Requirements\": [\"to use cable to deliver live video imagery\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the ability to interface with Service specific ground and airborne Ultra High Frequency (UHF), Very High Frequency (VHF), UHF/VHF, and High Frequency (HF) radios for digital message transmission while using the same radios for record traffic.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"Ultra High Frequency (UHF), Very High Frequency (VHF), UHF/VHF, and High Frequency (HF) radios\", \"radios\"], \"Environment Entity\": [\"Service specific ground\"], \"Design Domain\": [], \"Requirements\": [\"to interface with Service specific ground\", \"airborne Ultra High Frequency (UHF), Very High Frequency (VHF), UHF/VHF, and High Frequency (HF) radios\"], \"Shared Phenomena\": [\"digital message transmission\", \"record traffic\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Record traffic is defined as operational/voice communications.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Record traffic\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Where applicable, Tactical Control System data burst messages shall comply with Variable Message Formats.",
    "output": "{\"Machine Domain\": [\"Tactical Control System data burst messages\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Variable Message Formats\"], \"Requirements\": [\"comply with Variable Message Formats\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall export and disseminate formatted NITF 2.0 files, digital imagery, RS-170A video (with as well as without overlay), and tactical communication messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"NITF 2.0 files\", \"digital imagery\", \"RS-170A video\"], \"Requirements\": [\"export and disseminate formatted NITF 2.0 files, digital imagery, RS-170A video (with as well as without overlay), and tactical communication messages\"], \"Shared Phenomena\": [\"tactical communication messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the capability to manage all operational C4I interfaces across all 5 levels of interaction.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to manage all operational C4I interfaces\"], \"Shared Phenomena\": [\"all 5 levels of interaction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall send and receive tactical communication messages. ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"send and receive tactical communication messages\"], \"Shared Phenomena\": [\"tactical communication messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall send and receive annotated and un-annotated digital imagery.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"send and receive annotated and un-annotated digital imagery\"], \"Shared Phenomena\": [\"annotated and un-annotated digital imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall establish digital communication with the C4I systems and terminate the communication upon completion.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the C4I systems\"], \"Requirements\": [\"establish digital communication\"], \"Shared Phenomena\": [\"terminate the communication upon completion\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to establish and subsequently terminate digital communication with peripheral devices.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"peripheral devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to establish and subsequently terminate digital communication\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall send and receive analog imagery in RS-170A format with as well as without overlay.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"RS-170A format\"], \"Requirements\": [\"send and receive analog imagery\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to establish and subsequently terminate analog communication with peripheral devices.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"peripheral devices\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to establish and subsequently terminate analog communication\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will have the functionality to process received C4I messages and to prepare C4I messages for transmission.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to process received C4I messages\", \"to prepare C4I messages for transmission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Processing will include formatting, storing, routing, and display.",
    "output": "{\"Machine Domain\": [\"Processing\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"formatting\", \"storing\", \"routing\", \"display\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall create tactical communications messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"create tactical communications messages\"], \"Shared Phenomena\": [\"tactical communications messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of reviewing incoming Tactical Communication Messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"reviewing incoming Tactical Communication Messages\"], \"Shared Phenomena\": [\"Tactical Communication Messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to review incoming annotated as well as un-annotated digital imagery.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to review incoming annotated as well as un-annotated digital imagery\"], \"Shared Phenomena\": [\"annotated as well as un-annotated digital imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All digital messages received by the Tactical Control System shall be automatically checked for errors and corrected when possible.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"automatically checked for errors and corrected when possible\"], \"Shared Phenomena\": [\"All digital messages received\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All erroneous messages that cannot be corrected by Tactical Control System shall be flagged to the operator.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"flagged to the operator\"], \"Shared Phenomena\": [\"All erroneous messages that cannot be corrected\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability to log all incoming and outgoing formatted tactical messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to log all incoming and outgoing formatted tactical messages\"], \"Shared Phenomena\": [\"all incoming and outgoing formatted tactical messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall prepare annotated as well as un-annotated analog imagery for transmission. ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"prepare annotated as well as un-annotated analog imagery for transmission\"], \"Shared Phenomena\": [\"annotated as well as un-annotated analog imagery for transmission\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to receive incoming annotated as well as un-annotated analog imagery.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to receive incoming annotated as well as un-annotated analog imagery\"], \"Shared Phenomena\": [\"analog imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to monitor the status of all C4I interfaces, and display appropriate control information.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to monitor the status of all C4I interfaces\", \"display appropriate control information\"], \"Shared Phenomena\": [\"the status of all C4I interfaces\", \"appropriate control information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall display which C4I systems are supported and online during a mission.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems\"], \"Requirements\": [\"display which C4I systems are supported and online during a mission\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of monitoring the status of all incoming and outgoing tactical communication messages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"monitoring the status of all incoming and outgoing tactical communication messages\"], \"Shared Phenomena\": [\"the status of all incoming and outgoing tactical communication messages\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the capability to review all tactical communication messages received and transmitted.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to review all tactical communication messages received and transmitted\"], \"Shared Phenomena\": [\"all tactical communication messages received and transmitted\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be equipped to view incoming and outgoing, both annotated and un-annotated analog imagery.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"equipped to view incoming and outgoing, both annotated and un-annotated analog imagery\"], \"Shared Phenomena\": [\"to view incoming and outgoing, both annotated and un-annotated analog imagery\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall be capable of executing AV maintenance software and displaying appropriate status results.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AV maintenance software\"], \"Requirements\": [\"executing AV maintenance software and displaying appropriate status results\"], \"Shared Phenomena\": [\"displaying appropriate status results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall be capable of executing payload maintenance software and displaying appropriate status results.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"payload maintenance software\"], \"Requirements\": [\"executing payload maintenance software\", \"displaying appropriate status results\"], \"Shared Phenomena\": [\"appropriate status results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall be capable of executing data terminal maintenance software and displaying appropriate status results.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"data terminal maintenance software\"], \"Requirements\": [\"executing data terminal maintenance software\"], \"Shared Phenomena\": [\"displaying appropriate status results\", \"displaying appropriate status results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System shall be capable of executing workstation and peripheral equipment maintenance software and displaying appropriate status results.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"workstation and peripheral equipment maintenance software\"], \"Requirements\": [\"executing workstation and peripheral equipment maintenance software\", \"displaying appropriate status results\"], \"Shared Phenomena\": [\"appropriate status results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Fault Detection/Location (FD/L) to the Line Replaceable Unit (LRU) level shall be provided to indicate the readiness status of Tactical Control System, if inherent to the COTS hardware and software utilized.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Fault Detection/Location (FD/L)\", \"the Line Replaceable Unit (LRU) level\", \"the COTS hardware and software\"], \"Requirements\": [], \"Shared Phenomena\": [\"provided to indicate the readiness status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As a minimum, Tactical Control System shall provide Startup FD/L for the operator workstation.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator workstation\"], \"Design Domain\": [], \"Requirements\": [\"provide Startup FD/L for the operator workstation\"], \"Shared Phenomena\": [\"Startup FD/L\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the operator to control and monitor the AV's FD/L, if required and provided by the Original Equipment Manufacturer (OEM).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\", \"the Original Equipment Manufacturer (OEM)\"], \"Design Domain\": [], \"Requirements\": [\"allow the operator to control and monitor the AV's FD/L\"], \"Shared Phenomena\": [\"the AV's FD/L\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow authorized operators to install software upgrades via CD-ROM as well as other media storage devices.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"other media storage devices\"], \"Environment Entity\": [\"authorized operators\"], \"Design Domain\": [\"software upgrades via CD-ROM\"], \"Requirements\": [\"allow authorized operators to install software upgrades via CD-ROM as well as other media storage devices\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall restrict operator access to this capability via password protection.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"restrict operator access to this capability via password protection\"], \"Shared Phenomena\": [\"access to this capability via password protection\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the capability for Authorized Operators to modify all Tactical Control System programmable parameters.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Authorized Operators\"], \"Design Domain\": [], \"Requirements\": [\"to modify all Tactical Control System programmable parameters\"], \"Shared Phenomena\": [\"all Tactical Control System programmable parameters\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of importing National Imagery Mapping Agency (NIMA) Digital Terrain Elevation Data (DTED), Digital Feature Analysis Data (DFAD), Arc Digitized Raster Graphic and scanned hard copy maps, via compact disk.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"National Imagery Mapping Agency (NIMA)\", \"compact disk\"], \"Design Domain\": [\"Digital Terrain Elevation Data (DTED)\", \"Digital Feature Analysis Data (DFAD)\", \"Arc Digitized Raster Graphic\", \"scanned hard copy maps\"], \"Requirements\": [\"capable of importing\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow an Authorized Operator to execute a software debug capability and view the resulting debug diagnostic information.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"an Authorized Operator\"], \"Design Domain\": [], \"Requirements\": [\"allow an Authorized Operator to execute a software debug capability\", \"view the resulting debug diagnostic information\"], \"Shared Phenomena\": [\"the resulting debug diagnostic information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As a minimum, the Tactical Control System will restrict Operator access to this capability via password protection.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Operator\"], \"Design Domain\": [], \"Requirements\": [\"restrict Operator access to this capability\"], \"Shared Phenomena\": [\"password protection\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will interface with external systems to conduct mission coordination and operations.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"to conduct mission coordination and operations\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall interface with external mission tasking systems (e.g., receive tasking orders, coordinate mission certification).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external mission tasking systems\"], \"Requirements\": [\"interface with external mission tasking systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality necessary to interface with the data terminal.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the data terminal\"], \"Requirements\": [\"to interface with the data terminal\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the system functionality to allow interfacing with external systems via a local area network.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external systems\", \"a local area network\"], \"Requirements\": [\"to allow interfacing with external systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide external interfaces to launch and recovery systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external interfaces\"], \"Requirements\": [\"provide external interfaces to launch and recovery systems\"], \"Shared Phenomena\": [\"launch and recovery systems\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will be interoperable with C4I systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"interoperable with C4I systems\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This prioritization schema has been validated by a Joint Requirements Oversight Council (JROC) Memorandum.",
    "output": "{\"Machine Domain\": [\"This prioritization schema\"], \"Physical Device\": [], \"Environment Entity\": [\"Joint Requirements Oversight Council (JROC) Memorandum\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For external communications to C4I systems the Tactical Control System shall utilize the Universal Communication Processor as well as the Common Message Processor (CMP) Government Off The Shelf (GOTS) software capabilities of the DII/COE to communicate with C4I systems using Tactical Communication (TACOMM) messages.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\", \"Tactical Communication (TACOMM) messages\"], \"Physical Device\": [\"the Universal Communication Processor\", \"the Common Message Processor (CMP)\"], \"Environment Entity\": [], \"Design Domain\": [\"C4I systems\", \"Government Off The Shelf (GOTS) software\", \"C4I systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"external communications\", \"the DII/COE to communicate\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with JSTARS GSM.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"JSTARS GSM\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with JSTARS GSM\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with JMCIS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"JMCIS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with JMCIS\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with JSIPS-N.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"JSIPS-N\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with JSIPS-N\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with AFATDS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AFATDS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with AFATDS\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with CARS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"CARS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with CARS\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with CCTV.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"CCTV\"], \"Design Domain\": [], \"Requirements\": [\"to allow the Tactical Control System to integrate with CCTV\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with Service Mission Planners.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"Service Mission Planners\"], \"Design Domain\": [], \"Requirements\": [\"to allow the Tactical Control System to integrate with Service Mission Planners\"], \"Shared Phenomena\": [\"integrate with Service Mission Planners\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with AMPS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AMPS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with AMPS\"], \"Shared Phenomena\": [\"integrate with AMPS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with AFMSS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AFMSS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with AFMSS\"], \"Shared Phenomena\": [\"integrate with AFMSS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with TAMPS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"TAMPS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with TAMPS\"], \"Shared Phenomena\": [\"integrate with TAMPS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with GCS/ACS IPF.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"GCS/ACS IPF\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with GCS/ACS IPF\"], \"Shared Phenomena\": [\"integrate with GCS/ACS IPF\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with JDISS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"JDISS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with JDISS\"], \"Shared Phenomena\": [\"integrate with JDISS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with IAS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"IAS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with IAS\"], \"Shared Phenomena\": [\"integrate with IAS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with ATHS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"ATHS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with ATHS\"], \"Shared Phenomena\": [\"integrate with ATHS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with Trojan Spirit II.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Trojan Spirit II\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with Trojan Spirit II\"], \"Shared Phenomena\": [\"integrate with Trojan Spirit II\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with TBMCS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"TBMCS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with TBMCS\"], \"Shared Phenomena\": [\"integrate with TBMCS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with MIES.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"MIES\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with MIES\"], \"Shared Phenomena\": [\"integrate with MIES\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with ETRAC.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [\"ETRAC\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to allow the Tactical Control System to integrate with ETRAC\"], \"Shared Phenomena\": [\"integrate with ETRAC\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with COMPASS.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"COMPASS\"], \"Requirements\": [\"to allow the Tactical Control System to integrate with COMPASS\"], \"Shared Phenomena\": [\"integrate with COMPASS\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary hardware and software functionality to allow the Tactical Control System to integrate with TEG.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [\"TEG\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to allow the Tactical Control System to integrate with TEG\"], \"Shared Phenomena\": [\"integrate with TEG\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide interfaces with the respective UAV program-provided data links for command and control.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"interfaces with the respective UAV program-provided data links\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have provisions for simultaneously supporting both of the following external interfaces: ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external interfaces\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an interface between the Tactical Control System and an external hard copy printer.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"an external hard copy printer\"], \"Design Domain\": [], \"Requirements\": [\"provide an interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to output digital message data and imagery to a hard copy printer.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"a hard copy printer\"], \"Design Domain\": [], \"Requirements\": [\"to output digital message data and imagery to a hard copy printer\"], \"Shared Phenomena\": [\"output digital message data\", \"imagery to a hard copy printer\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an interface between the Tactical Control System and external data storage systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external data storage systems\"], \"Requirements\": [\"provide an interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to transfer digital data as well as digital imagery to and from external data storage systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"external data storage systems\"], \"Requirements\": [\"to transfer digital data as well as digital imagery\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an interface between the Tactical Control System and DoD standard power supply equipment.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [\"DoD standard power supply equipment\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have an interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an interface to a source of current navigation information.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have an interface\"], \"Shared Phenomena\": [\"a source of current navigation information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As a minimum this information will include the location of all data terminals, launch and recovery sites, and the controlling Tactical Control System.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"this information\", \"the location of all data terminals\", \"launch and recovery sites\", \"the controlling Tactical Control System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall implement an AV Standard Interface that will provide the proper data format to ensure communications with the selected AV.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"the selected AV\"], \"Environment Entity\": [], \"Design Domain\": [\"an AV Standard Interface\"], \"Requirements\": [\"implement an AV Standard Interface\"], \"Shared Phenomena\": [\"provide the proper data format to ensure communications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This interface shall allow for addition of future AVs and will provide the generic architecture to ensure interoperability.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"future AVs\"], \"Environment Entity\": [], \"Design Domain\": [\"This interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The uplink and downlink information passed between the Tactical Control System and the AV shall be in accordance with the associated AV documentation.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [\"the AV\", \"AV\"], \"Environment Entity\": [], \"Design Domain\": [\"the associated AV documentation\"], \"Requirements\": [], \"Shared Phenomena\": [\"The uplink and downlink information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall support a concurrent uplink and downlink capability.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"support a concurrent uplink and downlink\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an internal interface for establishing communications with the Real Time Processor (RTP) within Tactical Control System.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System\"], \"Physical Device\": [\"the Real Time Processor (RTP)\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide an internal interface\"], \"Shared Phenomena\": [\"establishing communications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The RTP interface shall support distributed processing capability.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The RTP interface\"], \"Requirements\": [], \"Shared Phenomena\": [\"distributed processing\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Remotely hosted applications shall communicate in a client server relationship via the defined data server interface.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Remotely hosted applications\", \"the defined data server interface\"], \"Requirements\": [], \"Shared Phenomena\": [\"communicate in a client server relationship\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an internal interface for the SAR Processor in order to disseminate SAR information (to include imagery and telemetry) to other components of the Tactical Control System.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"other components of the Tactical Control System\"], \"Physical Device\": [\"the SAR Processor\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide an internal interface\"], \"Shared Phenomena\": [\"disseminate SAR information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall incorporate an intercom system that provides verbal communicate in the situation where there are multiple operators.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"multiple operators\"], \"Design Domain\": [\"an intercom system\"], \"Requirements\": [\"incorporate an intercom system\"], \"Shared Phenomena\": [\"verbal communicate in the situation\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The intercom system shall be compatible with service specific voice communication systems.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The intercom system\", \"service specific voice communication systems\"], \"Requirements\": [], \"Shared Phenomena\": [\"compatible with service specific voice communication systems\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System will provide an interface between the Tactical Control System and a video cassette recorder.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"a video cassette recorder\"], \"Design Domain\": [], \"Requirements\": [\"provide an interface\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall allow the Operator(s) to fully control the VCR via the Tactical Control System Display input device(s).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [\"the Tactical Control System Display input device(s)\"], \"Environment Entity\": [\"the Operator(s)\", \"VCR\"], \"Design Domain\": [], \"Requirements\": [\"to fully control the VCR\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be able to route VCR recorded payload video to the C4I Interfaces.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"VCR\"], \"Design Domain\": [\"the C4I Interfaces\"], \"Requirements\": [\"to route VCR recorded payload video to the C4I Interfaces\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have ports for outputting data and imagery to an internal hard copy printer.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"an internal hard copy printer\"], \"Design Domain\": [], \"Requirements\": [\"have ports for outputting data and imagery to an internal hard copy printer\"], \"Shared Phenomena\": [\"outputting data and imagery to an internal hard copy printer\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall, as a minimum, allow the Operator(s) to print freeze-frame video, C4I Messages, Mission Plans, FD/L information, and current map display to an internal printer.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"an internal printer\"], \"Environment Entity\": [\"the Operator(s)\"], \"Design Domain\": [\"freeze-frame video\", \"C4I Messages\", \"Mission Plans\", \"FD/L information\", \"current map display\"], \"Requirements\": [\"allow the Operator(s) to print freeze-frame video, C4I Messages, Mission Plans, FD/L information, and current map display to an internal printer\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have the functionality to transfer digital data as well as digital imagery to and from data storage devices.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"data storage devices\"], \"Environment Entity\": [], \"Design Domain\": [\"digital data\", \"digital imagery\"], \"Requirements\": [\"to transfer digital data as well as digital imagery to and from data storage devices\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide a CD drive for the retrieval of Tactical Control System data.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System data\"], \"Physical Device\": [], \"Environment Entity\": [\"a CD\"], \"Design Domain\": [], \"Requirements\": [\"provide a CD drive\"], \"Shared Phenomena\": [\"drive for the retrieval of Tactical Control System data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide a tape drive for storage and retrieval of Tactical Control System data.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System data\"], \"Physical Device\": [], \"Environment Entity\": [\"a tape\"], \"Design Domain\": [], \"Requirements\": [\"provide a tape\"], \"Shared Phenomena\": [\"storage and retrieval of Tactical Control System data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide a RAID for storage and retrieval of Tactical Control System data, if required.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System data\"], \"Physical Device\": [], \"Environment Entity\": [\"a RAID\"], \"Design Domain\": [], \"Requirements\": [\"provide a RAID\"], \"Shared Phenomena\": [\"storage and retrieval of Tactical Control System data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an interface to an uninterruptible power supply.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have an interface\"], \"Shared Phenomena\": [\"an uninterruptible power supply\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System internal data decisions will be left to the design and the requirement specifications for system components.",
    "output": "{\"Machine Domain\": [\"All Tactical Control System internal data decisions\", \"Tactical Control System\", \"system components\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"left to the design and the requirement specifications\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System design shall consider all safety requirements affecting design and performance except nuclear safety.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System design\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"consider all safety requirements affecting design\", \"performance except nuclear safety\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System safety requirements are intended to eliminate as well as control potential hazards to equipment and personnel involved in the Tactical Control System.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"The Tactical Control System safety requirements\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to eliminate as well as control potential hazards to equipment and personnel\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall comply with para 5.3 of MIL-STD 882C, “System Safety Program Requirements”, dated 19 January 1993 w/ Notice 1 dated 19 January 1996.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"comply with para 5.3 of MIL-STD 882C\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide sufficient cues to allow the operator to safely take-off, land and navigate under Instrument Flight Rules.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"provide sufficient cues\"], \"Shared Phenomena\": [\"safely take-off, land and navigate under Instrument Flight Rules\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide adequate capability to allow the operator to operate each UAV within its certified operational flight envelope.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"UAV\", \"certified operational flight envelope\"], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"to allow the operator to operate each UAV within its certified operational flight envelope\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Appropriate cautions and warnings shall be provided to the operator if the air vehicle deviates into unsafe flight regime.",
    "output": "{\"Machine Domain\": [\"Appropriate cautions and warnings\"], \"Physical Device\": [\"the air vehicle\"], \"Environment Entity\": [\"the operator\", \"unsafe flight regime\"], \"Design Domain\": [], \"Requirements\": [\"provided to the operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For mission planning, the Tactical Control System shall provide terrain avoidance warning and minimum reception altitude calculations for line of sight flights.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"mission planning\", \"line of sight flights\"], \"Requirements\": [\"provide terrain avoidance warning and minimum reception altitude calculations for line of sight flights\"], \"Shared Phenomena\": [\"terrain avoidance warning\", \"minimum reception altitude\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "During mission execution, the Tactical Control System shall provide the operator a cautions and warnings when the UAV system has identified a malfunction.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [\"mission execution\", \"the UAV system\"], \"Requirements\": [\"provide the operator a cautions and warnings\"], \"Shared Phenomena\": [\"a cautions and warnings\", \"identified a malfunction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the required information to allow the operator to maintain safe separation from other aircraft and a safe altitude in civilian airspace per Federal Aviation Administration (FAA) rules.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [\"Federal Aviation Administration (FAA) rules\"], \"Requirements\": [\"provide the required information to allow the operator to maintain safe separation from other aircraft and a safe altitude\"], \"Shared Phenomena\": [\"the required information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be designed such that no single hardware failure results in an unsafe command to be transmitted to the air vehicle.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"the air vehicle\"], \"Environment Entity\": [], \"Design Domain\": [\"an unsafe command\"], \"Requirements\": [\"designed such that no single hardware failure results in an unsafe command to be transmitted to the air vehicle\"], \"Shared Phenomena\": [\"no single hardware failure results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be designed such that no single software error results in an unsafe command to be transmitted to the air vehicle.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"the air vehicle\"], \"Environment Entity\": [], \"Design Domain\": [\"an unsafe command\"], \"Requirements\": [\"designed such that no single software error results in an unsafe command to be transmitted to the air vehicle\"], \"Shared Phenomena\": [\"no single software error results\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of restoring power in sufficient time to avoid loss of air vehicle control during power outages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"air vehicle\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"restoring power in sufficient time to avoid loss of air vehicle control during power outages\"], \"Shared Phenomena\": [\"restoring power in sufficient time\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall monitor the uplink and downlink to each UAV under its control.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"each UAV\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"monitor the uplink and downlink\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Upon detection of loss of link, the Tactical Control System shall attempt to reestablish communications with the air vehicle.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [\"the air vehicle\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"attempt to reestablish communications with the air vehicle\"], \"Shared Phenomena\": [\"Upon detection of loss of link\", \"reestablish communications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The system design shall use MIL-STD-2036, as a guide, with regard to personnel hazards, and MIL-STD-1472D, as a guide for safety from a human engineering viewpoint.",
    "output": "{\"Machine Domain\": [\"The system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"shall use MIL-STD-2036\", \"MIL-STD-1472D\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "System safety and health hazards, if any, shall be identified and evaluated during Phase I of the Tactical Control System development.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System development\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Risk levels and a program to manage the probability and severity of hazards shall also be developed.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System is an Automated Information System (AIS).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"an Automated Information System (AIS)\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Therefore, as per DoD Regulation 5000.2-R, dated March 15, 1996, the Tactical Control System shall meet security requirements in accordance with DoD Directive 5200.28(D), “Security Requirements for Automated Information Systems” dated March 21, 1988.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"DoD Regulation 5000.2-R\", \"DoD Directive 5200.28(D)\"], \"Requirements\": [\"meet security requirements\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be accredited by the Designated Approving Authority prior to processing classified as well as sensitive unclassified data.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The inputs to this procedure are the clearance or authorization of the Tactical Control System users and the sensitivities of the data that the Tactical Control System processes, stores or transfers.",
    "output": "{\"Machine Domain\": [\"this procedure\", \"the Tactical Control System\", \"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System users\", \"the Tactical Control System processes, stores or transfers\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These requirements pertain to the Tactical Control System computer hardware and software.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"These requirements\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System data sensitivities shall be determined by the data sensitivities of the systems with which it interfaces, to including the air vehicles, payloads, and C4I systems.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System data\", \"the systems\"], \"Physical Device\": [\"the air vehicles\"], \"Environment Entity\": [\"payloads\"], \"Design Domain\": [\"C4I systems\"], \"Requirements\": [\"determined by the data sensitivities of the systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be designed to protect its communication and data links against enemy Electronic Warfare (EW) threats, physical anti-radiation weaponry and physical destruction.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"physical anti-radiation weaponry\"], \"Environment Entity\": [\"enemy\"], \"Design Domain\": [], \"Requirements\": [\"to protect its communication and data links\"], \"Shared Phenomena\": [\"communication and data links\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be approved for operation at the same level as the systems with which it interfaces.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the same level as the systems\"], \"Requirements\": [\"approved for operation\"], \"Shared Phenomena\": [\"it interfaces\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System users, operators, maintainers and other personnel having access to Tactical Control System shall be cleared to the highest sensitivity of the data that the Tactical Control System processes, stores and transfers.",
    "output": "{\"Machine Domain\": [\"Tactical Control System\", \"the Tactical Control System processes\", \"stores\", \"transfers\"], \"Physical Device\": [], \"Environment Entity\": [\"Tactical Control System users\", \"operators\", \"maintainers\", \"other personnel\"], \"Design Domain\": [], \"Requirements\": [\"cleared to the highest sensitivity of the data\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Additional local site procedures shall be developed to prevent the intentional or unintentional disclosure of sensitive information to unauthorized individuals.",
    "output": "{\"Machine Domain\": [\"Additional local site procedures\"], \"Physical Device\": [], \"Environment Entity\": [\"unauthorized individuals\"], \"Design Domain\": [], \"Requirements\": [\"developed to prevent the intentional or unintentional disclosure of sensitive information to unauthorized individuals\"], \"Shared Phenomena\": [\"prevent the intentional or unintentional disclosure of sensitive information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A training program consisting of an initial security training and awareness briefing covering AIS security in general but also tailored to the Tactical Control System shall be developed.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AIS security\"], \"Requirements\": [], \"Shared Phenomena\": [\"an initial security training\", \"awareness briefing\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This section not applicable, therefore tailored out.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware shall be mounted as well as ruggedized to withstand inter and intra theater movement.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"The Tactical Control System hardware\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware will provide the functionality and capability to receive, process, and disseminate video and telemetry data from the AV and payload; perform mission planning; monitor and control the payload; monitor and control the AV; and monitor and control the data links.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"The Tactical Control System hardware\", \"AV\", \"the AV\"], \"Environment Entity\": [\"payload\", \"the payload\"], \"Design Domain\": [], \"Requirements\": [\"to receive, process, and disseminate video and telemetry data from the AV and payload\", \"perform mission planning\", \"monitor and control the payload\", \"monitor and control the AV\", \"monitor and control the data links\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The hardware of the Tactical Control System shall be capable of being scaled as well as being modular to meet the varying needs of the Services.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [\"The hardware of the Tactical Control System\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"being scaled as well as being modular to meet the varying needs of the Services\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware shall allow for long range communications from one Tactical Control System to another [SSS375], data storage expansion [SSS376], access to other computers to share in processing capability [SSS377], and multiple external peripherals [SSS378].",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"one Tactical Control System\"], \"Physical Device\": [\"The Tactical Control System hardware\"], \"Environment Entity\": [], \"Design Domain\": [\"another\"], \"Requirements\": [\"allow for long range communications\", \"data storage expansion\", \"access to other computers to share in processing capability\", \"multiple external peripherals\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System hardware shall support the data rate characteristics of the AV, data link and payload to ensure interoperability.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"The Tactical Control System hardware\", \"the AV\"], \"Environment Entity\": [\"data link\", \"payload\"], \"Design Domain\": [], \"Requirements\": [\"support the data rate characteristics of the AV, data link and payload to ensure interoperability\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For each OUTRIDER system, the Tactical Control System shall provide full independent computer redundancy.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"OUTRIDER system\"], \"Requirements\": [\"provide full independent computer redundancy\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall conform with the National Institute for Standard Technology (NIST) Federal Information Processing Standard (FIPS) Publication 151-2 (POSIX.1).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the National Institute for Standard Technology (NIST)\"], \"Design Domain\": [\"Federal Information Processing Standard (FIPS)\"], \"Requirements\": [\"conform with the National Institute for Standard Technology (NIST) Federal Information Processing Standard (FIPS) Publication 151-2 (POSIX.1)\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have sufficient throughput to support the processing requirements of the selected data link.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have sufficient throughput to support the processing requirements of the selected data link\"], \"Shared Phenomena\": [\"the processing requirements of the selected data link\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To meet growth requirements, the Tactical Control System shall be capable of adding additional storage without major hardware reconfiguration.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"major hardware reconfiguration\"], \"Requirements\": [\"adding additional storage without major hardware reconfiguration\"], \"Shared Phenomena\": [\"adding additional storage\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System computer system shall contain a CD-ROM drive that is compatible with National Imagery and Mapping Agency (NIMA), CD-ROM Digital Terrain Elevation Data (DTED), Digital Feature Analysis Data (DFAD), and embedded training media.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System computer system\"], \"Physical Device\": [\"a CD-ROM drive\"], \"Environment Entity\": [\"National Imagery and Mapping Agency (NIMA)\"], \"Design Domain\": [\"CD-ROM Digital Terrain Elevation Data (DTED)\", \"Digital Feature Analysis Data (DFAD)\", \"embedded training media\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall use standard military worldwide 110/220 volt 50/60 hertz generators and commercial power sources.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"generators\", \"commercial power sources\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"use standard military worldwide 110/220 volt 50/60 hertz generators and commercial power sources\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall use standard electrical power sources available within the DoD family of ground mobile, airborne, and shipboard electrical power sources.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"standard electrical power sources\", \"airborne, and shipboard electrical power sources\"], \"Environment Entity\": [\"the DoD\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of restoring power in sufficient time to avoid loss of critical mission data and loss of air vehicle control during power outages.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"air vehicle\"], \"Environment Entity\": [], \"Design Domain\": [\"critical mission data\"], \"Requirements\": [\"restoring power in sufficient time to avoid loss of critical mission data and loss of air vehicle control during power outages\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an uninterrupted power supply for critical phases (landing and takeoff as a minimum) of mission execution.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"have an uninterrupted power supply\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System throughput shall not exceed 50% of the throughput capability delivered over any 10 second period, and as an objective throughput shall not exceed 25% of throughput capability delivered over any 10 second period.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"throughput shall not exceed 50% of the throughput capability delivered over any 10 second period\", \"as an objective throughput shall not exceed 25% of throughput capability delivered over any 10 second period\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of providing a 50% spare memory storage capacity over delivered storage used.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"providing a 50% spare memory storage capacity over delivered storage used\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "As an objective a 75% spare memory storage capacity over storage used shall be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"a 75% spare memory storage capacity\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software will provide the functionality and capability to receive, process, and disseminate video and telemetry data from the AV and payload; perform mission planning; monitor and control the payload; monitor and control the AV; and monitor and control the data links.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"The Tactical Control System software\"], \"Physical Device\": [\"the AV\", \"the AV\"], \"Environment Entity\": [\"payload\", \"the payload\"], \"Design Domain\": [\"the data links\"], \"Requirements\": [\"to receive, process, and disseminate video and telemetry data\", \"perform mission planning\", \"monitor and control the payload\", \"monitor and control the AV\", \"monitor and control the data links\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have software based on Defense Information Infrastructure/Common Operating Environment per Assistant Secretary of Defense for Command, Control, Communications, and Intelligence (ASD(C3I)) Joint Technical Architecture (JTA).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Defense Information Infrastructure/Common Operating Environment per Assistant Secretary of Defense for Command, Control, Communications, and Intelligence (ASD(C3I)) Joint Technical Architecture (JTA).\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall comply with the Assistant Secretary of Defense (C3I) Joint Technical Architecture (JTA).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the Assistant Secretary of Defense (C3I) Joint Technical Architecture (JTA)\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This includes, but is not limited to, the language, the computer, database, architecture, and interoperability.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide an open software architecture to be capable of supporting additional CSCIs, CSCs, and CSUs for future AVs, future payloads, and payload capabilities (e.g.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"future AVs\"], \"Environment Entity\": [\"future payloads\"], \"Design Domain\": [\"CSCIs\", \"CSCs\", \"CSUs\"], \"Requirements\": [\"provide an open software architecture\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "auto-search and automatic target tracking), and future Tactical UAVs.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"future Tactical UAVs\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System core software shall be generically written to provide level one through level five interaction for both Outrider and Predator UAVs and establish the architecture for future tactical UAVs.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"The Tactical Control System core software\"], \"Physical Device\": [\"Outrider and Predator UAVs\", \"future tactical UAVs\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to provide level one through level five interaction for both Outrider and Predator UAVs\", \"establish the architecture for future tactical UAVs\"], \"Shared Phenomena\": [\"provide level one through level five interaction\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall provide the UAV operator with the necessary tools for computer related communications, mission tasking, mission planning, mission execution, data receipt, data processing, and data dissemination.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"The Tactical Control System\"], \"Physical Device\": [\"the UAV\"], \"Environment Entity\": [\"operator\"], \"Design Domain\": [], \"Requirements\": [\"provide the UAV operator with the necessary tools\"], \"Shared Phenomena\": [\"related communications\", \"mission tasking\", \"mission planning\", \"mission execution\", \"data receipt\", \"data processing\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall be capable of being hosted on a variety of computer operating systems that are organic to the various Services.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a variety of computer operating systems\"], \"Requirements\": [\"hosted on a variety of computer operating systems\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System software shall provide a windows based graphic operator interface.",
    "output": "{\"Machine Domain\": [\"Tactical Control System software\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\"], \"Design Domain\": [\"graphic operator interface\"], \"Requirements\": [\"provide a windows\"], \"Shared Phenomena\": [\"a windows\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall be non-proprietary and have unlimited data rights.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"non-proprietary and have unlimited data rights\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System’s operating system and executable software shall be re-programmable without hardware disassembly.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The Tactical Control System’s operating system\", \"executable software\"], \"Requirements\": [\"re-programmable without hardware disassembly\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Training software shall be alterable without affecting the configuration of the operational software.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the operational software\", \"Training software\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Training software is the software that provides the computer based training functionality for the system operator.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the system operator\"], \"Design Domain\": [\"Training software\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall restrict the operator(s) from exercising levels of interaction not achievable by the system.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"the system\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator(s)\"], \"Design Domain\": [], \"Requirements\": [\"restrict the operator(s) from exercising levels of interaction not achievable by the system\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System software shall provide a high-resolution, computer-generated graphical user interface that enables a UAV operator trained on one system to control different types of UAVs as well as UAV payloads with minimal additional training.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System software\", \"one system\"], \"Physical Device\": [\"a UAV\", \"UAVs\"], \"Environment Entity\": [\"a UAV operator\", \"UAV payloads\"], \"Design Domain\": [], \"Requirements\": [\"provide a high-resolution\", \"computer-generated graphical user interface\"], \"Shared Phenomena\": [\"computer-generated graphical user interface\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each control console shall have a display windows that provides the aircraft position, Tactical Control System position, flight path, and waypoint graphics in the foreground, which are positioned in relation to a map displayed in the background.",
    "output": "{\"Machine Domain\": [\"Each control console\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provides the aircraft position\", \"Tactical Control System position\", \"flight path\", \"waypoint graphics in the foreground\"], \"Shared Phenomena\": [\"a display windows\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each control console shall have a display windows that provides aircraft flight data or payload data in the foreground, with downlinked video in the background.",
    "output": "{\"Machine Domain\": [\"Each control console\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"downlinked video\"], \"Requirements\": [\"provides aircraft flight data or payload data in the foreground\"], \"Shared Phenomena\": [\"a display windows\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have ergonomically designed operator controls and displays for the 5th percentile female to 95th percentile male operator.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"male operator\"], \"Design Domain\": [], \"Requirements\": [\"have ergonomically designed operator controls\", \"displays for the 5th percentile female to 95th percentile male operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The controls shall allow the air vehicle and payload operators to perform mission control, mission monitoring, and mission updates and modifications while wearing cold weather clothing and in a Mission Oriented Protective Posture.",
    "output": "{\"Machine Domain\": [\"The controls\"], \"Physical Device\": [\"air vehicle\"], \"Environment Entity\": [\"payload operators\", \"cold weather clothing\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"perform mission control\", \"mission monitoring\", \"mission updates and modifications\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have monitor(s) that allow reading of displays under direct sunlight and low light level environments.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"monitor(s)\", \"sunlight and low light level environments\"], \"Design Domain\": [], \"Requirements\": [\"have monitor(s)\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall be a Graphical User Interface (GUI) based on X-windows and Motif.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\", \"a Graphical User Interface (GUI)\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"X-windows and Motif\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Tactical Control System Warning messages shall be color coded and flashed based on mission criticality.",
    "output": "{\"Machine Domain\": [\"Tactical Control System Warning messages\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"color coded and flashed\"], \"Shared Phenomena\": [\"mission criticality\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The color codes and flash frequencies will follow MIL-STD 1472 guidelines.",
    "output": "{\"Machine Domain\": [\"The color codes and flash frequencies\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"MIL-STD 1472 guidelines\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System operator shall be required to enter an acknowledgment prior to disabling the display of critical warning flags for any AV, Payload, ADT, GDT, and Tactical Control System faults.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Tactical Control System faults\"], \"Physical Device\": [\"any AV\", \"ADT\", \"GDT\"], \"Environment Entity\": [\"The Tactical Control System operator\", \"Payload\"], \"Design Domain\": [], \"Requirements\": [\"be required to enter an acknowledgment prior to disabling the display of critical warning flags\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A combination of visual and auditory outputs will be provided to alert the Tactical Control System operator to situations which may require operator response.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System operator\", \"operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"A combination of visual and auditory outputs\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Visual alerts to the Tactical Control System operator shall be in the form of a displayed message box that has a display priority greater than other existing windows to ensure that it is viewable immediately by the operator.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System operator\", \"the operator\"], \"Design Domain\": [], \"Requirements\": [\"in the form of a displayed message box\"], \"Shared Phenomena\": [\"other existing windows to ensure that it is viewable immediately\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The position of the displayed message window shall be easily adjustable by the operator to ensure that important mission data is not obscured.",
    "output": "{\"Machine Domain\": [\"The position of the displayed message window\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"easily adjustable by the operator to ensure\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In addition to displayed alert messages to the Tactical Control System operator, auditory alerts to include tones shall also be provided.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"displayed alert messages\", \"auditory alerts to include tones\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System warning messages and HCI actions shall be archived for later review.",
    "output": "{\"Machine Domain\": [\"All Tactical Control System warning messages\", \"HCI actions\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"archived for later review\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All Tactical Control System operator inputs shall be error checked such that any erroneous operator entry will not cause current processing to terminate.",
    "output": "{\"Machine Domain\": [\"All Tactical Control System operator inputs\"], \"Physical Device\": [], \"Environment Entity\": [\"any erroneous operator entry\"], \"Design Domain\": [], \"Requirements\": [\"error checked\"], \"Shared Phenomena\": [\"cause current processing to terminate\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The HCI shall prompt the operator for a valid input.",
    "output": "{\"Machine Domain\": [\"The HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"prompt the operator for a valid input\"], \"Shared Phenomena\": [\"a valid input\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Display jitter and flicker shall not be perceptible by the operator.",
    "output": "{\"Machine Domain\": [\"Display jitter and flicker\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"not be perceptible by the operator\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The operational tasks to be performed concurrently by the operator during normal operation will be determined by appropriate task analysis and function allocation.",
    "output": "{\"Machine Domain\": [\"The operational tasks\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"appropriate task analysis\", \"function allocation\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall facilitate Human-Computer Interfaces (HCIs) that support operation of all system modes, functions, and capabilities.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"Human-Computer Interfaces (HCIs)\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Human Computer Interface (HCI) shall be designed and implemented in accordance with the Tactical Control System HCI Specification, Tactical Control System 108.[SSS462] ",
    "output": "{\"Machine Domain\": [\"The Human Computer Interface (HCI)\", \"Tactical Control System\", \"the Tactical Control System HCI Specification\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The HCI shall provide redundancy in all operations, so that the loss of any one HCI input device does not prohibit operation of any Tactical Control System function.",
    "output": "{\"Machine Domain\": [\"The HCI\", \"any Tactical Control System function\"], \"Physical Device\": [\"one HCI input device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the functionality to display all HCI elements on any available monitor on the Tactical Control System workstation.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System workstation\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to display all HCI elements on any available monitor on the Tactical Control System workstation\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall be capable of displaying a window within a window format to include, as a minimum, displaying a video window overlaid on a map screen as well as a map screen overlaid on a video screen.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"displaying a window\"], \"Shared Phenomena\": [\"displaying a video window overlaid on a map screen\", \"a map screen overlaid on a video screen\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide full complementary control operations from the keyset as well as the X/Y control device (e.g., trackball, mouse, joystick).",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"the X/Y control device\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide full complementary control operations from the keyset\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide access to the DII Style Manager so that pointing device characteristics can be modified.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"DII Style Manager\"], \"Design Domain\": [], \"Requirements\": [\"access to the DII Style Manager\"], \"Shared Phenomena\": [\"pointing device characteristics can be modified\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The shall provide the functionality to have a maximum delay time of 1 second from operator command to system acknowledgement and response.[SSS 559] ",
    "output": "{\"Machine Domain\": [\"system acknowledgement and response\"], \"Physical Device\": [], \"Environment Entity\": [\"operator command\"], \"Design Domain\": [], \"Requirements\": [\"have a maximum delay time of 1 second\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide a capability for porting an off-the-shelf, complex control joystick with multiple toggle and multi-position switches as part of the Tactical Control System hardware suite.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\", \"the Tactical Control System hardware\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"porting an off-the-shelf\", \"complex control joystick with multiple toggle\", \"multi-position switches as part of the Tactical Control System hardware suite\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall use graphical representations to convey information, such as system status, C4I links, and AV-GDT links.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"AV-GDT links\", \"C4I links\", \"system status\"], \"Requirements\": [\"use graphical representations to convey information\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide for multi-level information display tailoring by the operator.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"provide for multi-level information display tailoring\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide maximum automated system software support to system status monitoring and alerting of the Tactical Control System operator when a preset system parameter goes under as well as over a set threshold.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System operator\"], \"Design Domain\": [\"system status\"], \"Requirements\": [\"provide maximum automated system software support to system status monitoring and alerting of the Tactical Control System operator\"], \"Shared Phenomena\": [\"a preset system parameter goes under as well as over a set threshold\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide the necessary processing, display, and control capabilities to ensure dynamic situational awareness input to the Tactical Control System operator.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [\"the Tactical Control System operator\"], \"Design Domain\": [], \"Requirements\": [\"provide the necessary processing, display, and control capabilities to ensure dynamic situational awareness input to the Tactical Control System operator\"], \"Shared Phenomena\": [\"processing, display, and control capabilities to ensure dynamic situational awareness input\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall minimize alphanumeric data display in favor of graphic, pictorial information display [SSS474] ",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"minimize alphanumeric data display in favor of graphic, pictorial information display\"], \"Shared Phenomena\": [\"minimize alphanumeric data display\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide unambiguous AV and payload control and status feedback indicators to ensure safe, efficient operations of two AVs and their payloads by a single Tactical Control System station.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\", \"a single Tactical Control System station\"], \"Physical Device\": [\"AV\", \"two AVs\"], \"Environment Entity\": [\"payload\", \"their payloads\"], \"Design Domain\": [], \"Requirements\": [\"unambiguous AV and payload control and status feedback indicators\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall provide for a specific icon shape on a constant contrast background, as well as other visual information coding mechanisms, to cue the Tactical Control System operator regarding which UAVs are under his or her primary control.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"UAVs\"], \"Environment Entity\": [\"the Tactical Control System operator\"], \"Design Domain\": [], \"Requirements\": [\"a specific icon shape on a constant contrast background\", \"other visual information coding mechanisms\", \"to cue the Tactical Control System operator regarding\"], \"Shared Phenomena\": [\"a specific icon shape\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide the capability to select and amplify an object and point on a map as well as payload screen.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"a map\", \"payload screen\"], \"Design Domain\": [], \"Requirements\": [\"to select and amplify an object and point on a map as well as payload screen\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide coarse and fine payload control capabilities directly on the payload screen.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"the payload screen\"], \"Design Domain\": [], \"Requirements\": [\"coarse and fine payload control capabilities directly on the payload screen\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall display the SAR imaging swath on the map display.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"map display\"], \"Design Domain\": [\"the SAR imaging swath\"], \"Requirements\": [\"display the SAR imaging swath on the map display\"], \"Shared Phenomena\": [\"display the SAR imaging swath on the map display\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "[SSS479] The Tactical Control System HCI shall provide the on-screen capability to select and efficiently move as well as reorient a previously defined SAR imaging swath.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"SAR imaging swath\"], \"Requirements\": [\"the on-screen capability\", \"to select and efficiently move as well as reorient a previously defined SAR imaging swath\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide the capability to lock onto and hold a coordinate point on the payload imagery window.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the payload imagery window\"], \"Requirements\": [\"to lock onto and hold a coordinate point on the payload imagery window\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide the capability to display operator definable “Lock Out” zones around waypoints, Launch and Recovery Point (LRP), as well as any selected point on the AV flight path.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"operator\", \"the AV flight path\"], \"Design Domain\": [], \"Requirements\": [\"to display operator definable “Lock Out” zones around waypoints, Launch and Recovery Point (LRP), as well as any selected point on the AV flight path\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide for a rapid means to cancel aural warnings.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide for a rapid means to cancel aural warnings\"], \"Shared Phenomena\": [\"to cancel aural warnings\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide for separation, grouping, and visual coding of multiple categories of alerts, to include Warnings, Cautions, and Advisories.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Warnings\", \"Cautions\", \"Advisories\"], \"Requirements\": [\"provide for separation, grouping, and visual coding of multiple categories of alerts\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide for visual Warnings, Cautions, and Advisories to be displayed at or near the center of the field of view, i.e., within a 30o cone, of all monitors in a Tactical Control System system.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\", \"a Tactical Control System system\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide for visual Warnings, Cautions, and Advisories to be displayed at or near the center of the field of view\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For AV safety as well as mission-critical Warnings, the Tactical Control System HCI shall provide a default selection as well as an override option, along with a selection of adaptive responses, and the minimum information necessary to assist the operator in responding quickly and adaptively to the emergency.",
    "output": "{\"Machine Domain\": [\"the Tactical Control System HCI\"], \"Physical Device\": [\"AV\"], \"Environment Entity\": [\"the operator\"], \"Design Domain\": [], \"Requirements\": [\"provide a default selection as well as an override option\"], \"Shared Phenomena\": [\"mission-critical Warnings\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide for on-screen information to include, as a minimum, overlays, headers, cursors, alphanumeric annotation, waypoints, crosshairs, designed to be visible against the complete spectrum of map and payload video backgrounds.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide for on-screen information\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide continuously-available, on-screen control functions for time and missioncritical operations, to include as a minimum print, freeze, declassification, mark VCR, declutter, cease RF transmission.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"provide continuously-available\", \"on-screen control functions for time\", \"missioncritical operations\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System HCI shall provide for the capability to automatically designate target locations from the payload screen onto the map screen.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System HCI\"], \"Physical Device\": [], \"Environment Entity\": [\"the payload screen\", \"the map screen\"], \"Design Domain\": [], \"Requirements\": [\"provide for the capability to automatically designate target locations from the payload screen onto the map screen\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an objective capability to be integrated and operated from tactical and command and control aircraft.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"aircraft\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to be integrated and operated from tactical and command and control aircraft\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an objective capability to be integrated and operated from submarines.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"submarines\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to be integrated and operated from submarines\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have a capability to be integrated and operated from land based platforms.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to be integrated and operated from land based platforms\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Tactical Control System shall have an objective capability to be integrated and operated from ships.",
    "output": "{\"Machine Domain\": [\"The Tactical Control System\"], \"Physical Device\": [\"ships\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"to be integrated and operated from ships\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This Software Requirements Specification (SRS) provides the requirements for the Center-to-Center (C2C) Communications Network that is based on a Texas Department of Transportation (TxDOT) C2C project.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center (C2C) Communications Network\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a Texas Department of Transportation (TxDOT) C2C project\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The TxDOT Center-to-Center project initially connected the DFW TxDOT Traffic Management Centers (TMCs).",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the DFW TxDOT Traffic Management Centers (TMCs)\"], \"Design Domain\": [\"The TxDOT Center-to-Center project\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This Center-to-Center infrastructure implements a repository for traffic data and provides a mechanism to exchange device control information between TMCs.",
    "output": "{\"Machine Domain\": [\"This Center-to-Center infrastructure\"], \"Physical Device\": [], \"Environment Entity\": [\"TMCs\"], \"Design Domain\": [], \"Requirements\": [\"to exchange device control information between TMCs\"], \"Shared Phenomena\": [\"traffic data\", \"device control information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center project will be implemented using the evolving ITS Traffic Management Data Dictionary (TMDD) standard, the message sets associated with TMDD, other ITS Data Elements and Message Sets.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center project\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the evolving ITS Traffic Management Data Dictionary (TMDD) standard,\", \"the message sets associated with TMDD\", \"other ITS Data Elements\", \"Message Sets\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center infrastructure must interconnect several dissimilar traffic management systems.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center infrastructure\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"traffic management systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In order to create the Center-to-Center infrastructure, interfaces to the existing systems will be created.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center infrastructure\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the existing systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The data from these interfaces will communicate with the existing system in a “system specific” format.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"these interfaces\"], \"Design Domain\": [\"the existing system\"], \"Requirements\": [], \"Shared Phenomena\": [\"The data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center infrastructure is being created using a series of building blocks.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center infrastructure\"], \"Physical Device\": [], \"Environment Entity\": [\"building blocks\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "These building blocks allow the software to be utilized in a number of configurations (by simply altering the configuration parameters of the software).",
    "output": "{\"Machine Domain\": [\"the software\"], \"Physical Device\": [], \"Environment Entity\": [\"building blocks\"], \"Design Domain\": [], \"Requirements\": [\"be utilized in a number of configurations\"], \"Shared Phenomena\": [\"the configuration parameters\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The software is being designed so that multiple instances of a building block can be deployed by simply “configuring” the building block of operation within a specific agency.",
    "output": "{\"Machine Domain\": [\"The software\"], \"Physical Device\": [], \"Environment Entity\": [\"a building block\"], \"Design Domain\": [], \"Requirements\": [\"multiple instances of a building block can be deployed\"], \"Shared Phenomena\": [\"“configuring” the building block of operation\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Any data that is passed into the “cloud” in the above figure will be based on the ITS standards.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the ITS standards\"], \"Design Domain\": [\"the “cloud”\"], \"Requirements\": [], \"Shared Phenomena\": [\"Any data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Systems will interface to the “cloud” using a project defined protocol.",
    "output": "{\"Machine Domain\": [\"Systems\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the “cloud”\"], \"Requirements\": [], \"Shared Phenomena\": [\"a project defined protocol\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "New systems that are deployed (based on the ITS standards) will not utilize the project defined protocol but will be moved “into” the cloud (because they themselves would be based on the ITS standards.",
    "output": "{\"Machine Domain\": [\"New systems\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the cloud\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "This would allow a “local” common repository to be created by “linking” individual partners, a “regional” common repository to be created by “linking” local common repositories and a “statewide” common repository to be created by “linking” regional common repositories.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"a “local” common repository\", \"individual partners\", \"a “regional” common repository\", \"local common repositories\", \"a “statewide” common repository\", \"regional common repositories\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The following sections define the requirements for the Center-to-Center project.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center project\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Requirements are listed in separate sections and in table format for each functional area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center project mnemonic uniquely identifies the Center-to-Center project to distinguish its requirements from the requirements of other ITS systems.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center project\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"other ITS systems\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The mnemonic for the Center-to-Center project is Center-to-Center.",
    "output": "{\"Machine Domain\": [\"Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Requirement Category Mnemonic is a two-letter mnemonic for each functional area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Requirement Numbers are a combination of target Advanced Traffic Management System (ATMS) and sequential within a given functional area.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"Advanced Traffic Management System\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For each roadway network it maintains, the Center shall provide the network name and link data information.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"each roadway network\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the network name\", \"link data information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall provide the link information, including link identifier, link name and link type.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the link information\", \"link identifier\", \"link name\", \"link type\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall provide the node information, including node identifier, node name and node type description.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the node information\", \"node identifier\", \"node name\", \"node type description\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the information about each incident, including network identifier, incident description and roadway.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the information about each incident\", \"network identifier\", \"incident description\", \"roadway\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support DMS control in other centers, the Center shall be able to support the following device control command for a DMS, including network identifier, DMS identifier, username and Password.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"a DMS\"], \"Requirements\": [\"To support DMS control in other centers\"], \"Shared Phenomena\": [\"device control command\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each LCS, including network identifier, LCS identifier, LCS name, Location and Status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"each LCS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"LCS identifier,\", \"LCS name\", \"Location\", \"Status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support CCTV control in other centers, the Center shall be able to support the following CCTV control request, including network identifier, CCTV identifier, username, Password.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"To support CCTV control in other centers\"], \"Requirements\": [], \"Shared Phenomena\": [\"CCTV control request,\", \"network identifier\", \"CCTV identifier\", \"username\", \"Password\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support video snapshots, the Center shall be able to support the status information, including network identifier, CCTV identifier, CCTV name and status.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"To support video snapshots\"], \"Shared Phenomena\": [\"network identifier\", \"CCTV identifier\", \"CCTV name\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support CCTV switching in other centers, the Center shall be able to support the following CCTV switching command, including network identifier, username, Password and video channel input identifier.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [\"To support CCTV switching in other centers\"], \"Shared Phenomena\": [\"CCTV switching command\", \"network identifier\", \"username\", \"Password\", \"video channel input identifier\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the status information about each ramp meter, including network identifier, Ramp Meter identifier, Ramp Meter name, Location and Status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"ramp meter\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the status information\", \"network identifier\", \"Ramp Meter identifier\", \"Ramp Meter name\", \"Location\", \"Status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support Ramp Meter control in other centers, the Center shall be able to support the following device control command for a ramp meter, including network identifier, Ramp Meter identifier, username, password and plan.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a ramp meter\"], \"Design Domain\": [], \"Requirements\": [\"To support Ramp Meter control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"Ramp Meter identifier\", \"username\", \"password\", \"plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each HAR, including network identifier, HAR identifier, HAR name, location and status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"HAR\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"HAR identifier\", \"HAR name\", \"location\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support HAR control in other centers, the Center shall be able to support the following device control command for a HAR, including network identifier, HAR identifier, username, password and message.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a HAR\"], \"Design Domain\": [], \"Requirements\": [\"To support HAR control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"HAR identifier\", \"username\", \"password\", \"message\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Traffic Signal, including network identifier,traffic signal identifier, traffic signal name,location and status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Traffic Signal\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"traffic signal identifier\", \"traffic signal name\", \"location\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support Traffic Signal control in other centers, the Center shall be able to support the following device control command for a Traffic Signal, including network identifier, traffic signal identifier, username, password and traffic signal plan identifier.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a Traffic Signal\"], \"Design Domain\": [], \"Requirements\": [\"To support Traffic Signal control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"traffic signal identifier\", \"username\", \"password\", \"traffic signal plan identifier\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each ESS, including network identifier, environmental sensor identifier, environment sensor name, type, location and status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [\"environmental sensor\", \"environment sensor\"], \"Environment Entity\": [\"each ESS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"environmental sensor identifier\", \"environment sensor name\", \"type\", \"location\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each HOV, including network identifier, HOV identifier, HOV name, link identifier, status and plan.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"each HOV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"following status information\", \"network identifier\", \"HOV identifier\", \"HOV name\", \"link identifier\", \"status\", \"plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support HOV Lane control in other centers, the Center shall be able to support the following device control command for a HOV Lane, including network identifier, HOV Lane identifier, username, password and lane plan.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a HOV Lane\"], \"Design Domain\": [], \"Requirements\": [\"To support HOV Lane control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"HOV Lane identifier\", \"username\", \"password\", \"lane plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Parking Lot, including network identifier, parking lot identifier, parking lot name, location and status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Parking Lot\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"parking lot identifier,\", \"parking lot name\", \"location\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each School Zone, including network identifier, link identifier, school zone identifier and school zone name.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"School Zone\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"school zone identifier\", \"school zone name\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support School Zone control in other centers, the Center shall be able to support the following device control command for a School Zone, including network identifier, school zone identifier, username, password and plan.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a School Zone\"], \"Design Domain\": [], \"Requirements\": [\"To support School Zone control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"school zone identifier\", \"username\", \"password\", \"plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Railroad Crossing, including network identifier, link identifier, rail crossing identifier, rail crossing name, location and status.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Railroad Crossing\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"rail crossing identifier\", \"rail crossing name\", \"location\", \"status\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Reversible Lane, including network identifier, reversible lane identifier, reversible lane name, link identifier, indicator status and indicator failure state.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Reversible Lane\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"reversible lane identifier\", \"reversible lane name\", \"link identifier\", \"indicator status\", \"indicator failure state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support Reversible Lane control in other centers, the Center shall be able to support the following device control command for a Reversible Lane, including network identifier, reversible lane identifier, username, password, plan and duration.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a Reversible Lane\"], \"Design Domain\": [], \"Requirements\": [\"To support Reversible Lane control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"reversible lane identifier\", \"username\", \"password\", \"plan\", \"duration\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Dynamic Lane, including network identifier, link identifier, dynamic lane identifier, dynamic lane name and failure state.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Dynamic Lane\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"dynamic lane identifier\", \"dynamic lane name\", \"failure state\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "To support Dynamic Lane control in other centers, the Center shall be able to support the following device control command for a Dynamic Lane, including network identifier, dynamic lane identifier, username, password and lane plan.",
    "output": "{\"Machine Domain\": [\"the Center\"], \"Physical Device\": [], \"Environment Entity\": [\"a Dynamic Lane\"], \"Design Domain\": [], \"Requirements\": [\"To support Dynamic Lane control in other centers\"], \"Shared Phenomena\": [\"device control command\", \"network identifier\", \"dynamic lane identifier\", \"username\", \"username\", \"password\", \"lane plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Bus Stop, including network identifier, link identifier, relative link location, name and location.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Bus Stop\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"relative link location\", \"name\", \"location\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Bus Location, including network identifier, link identifier, bus identifier, bus name, location and schedule adherece.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Bus Location\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"bus identifier\", \"bus name\", \"location\", \"schedule adherece\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Light/Commuter Stop, including network identifier, link identifier, commuter or light rail stop identifier, commuter or light rail stop name, location and routes.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Light/Commuter Stop\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"link identifier\", \"commuter or light rail stop identifier\", \"commuter or light rail stop name\", \"location\", \"routes\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Park and Ride Lot, including network identifier, park and ride lot identifier, park and ride lot name, location, status and capacity.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [\"Park and Ride Lot\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"network identifier\", \"park and ride lot identifier\", \"park and ride lot name\", \"location\", \"status\", \"capacity\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following status information about each Vehicle Priority, including vehicle identifier, network identifier, link identifier and intersection identifier.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [\"Vehicle Priority\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"status information\", \"vehicle identifier\", \"network identifier\", \"link identifier\", \"intersection identifier\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center shall support the following information about network device status, including network identifier, number of DMSs, number of LCSs, DMS status data, LCS status data and CCTV status data.",
    "output": "{\"Machine Domain\": [\"The Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information about network device status\", \"network identifier\", \"number of DMSs\", \"number of LCSs\", \"DMS status data\", \"LCS status data\", \"CCTV status data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The device status requestor and Center shall support the following information for command timeframe request, including network identifier and device type.",
    "output": "{\"Machine Domain\": [\"Center\"], \"Physical Device\": [], \"Environment Entity\": [\"The device status requestor\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information for command timeframe request\", \"network identifier\", \"device type\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Data Collector shall be designed to support the storage of TMDD data elements and message set information.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"The Data Collector\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"TMDD data elements\", \"message set information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center Project shall utilize the TMDD standard (including message sets) to transmit information.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center Project\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the TMDD standard\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "DATEX/ASN shall be used to transmit the TMDD message sets.",
    "output": "{\"Machine Domain\": [\"DATEX/ASN\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the TMDD message sets\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "TCP/IP shall be used to transmit the DATEX/ASN data.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [\"TCP/IP\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the DATEX/ASN data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Web Map application generates a map that can be displayed on an Internet WWW server.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The Web Map application\", \"an Internet WWW server\"], \"Requirements\": [], \"Shared Phenomena\": [\"a map\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map provides a graphical depiction of the traffic conditions.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The map\"], \"Requirements\": [], \"Shared Phenomena\": [\"the traffic conditions\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall display interstates and state highways on the graphical map.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The map\"], \"Requirements\": [], \"Shared Phenomena\": [\"interstates and state highways\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The basemap data shall be derived from the North Central Texas Council of Governments (NCTCOG) GeoData warehouse.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"GeoData warehouse\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"The basemap data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map user shall be able to alter the current magnification (zoom level) of the map.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map user\", \"the map\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the current magnification\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map user shall be able to pan the map in each of the following directions: North, South, East or West.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map user\", \"the map\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Each link displayed on the map shall be color coded to provide a graphical depiction of speeds.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"the map\", \"Each link\"], \"Design Domain\": [], \"Requirements\": [\"to provide a graphical depiction of speeds\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A configuration file shall be provided to specify specific speed values.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"A configuration file\"], \"Design Domain\": [], \"Requirements\": [\"to specify specific speed values\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall display the current incidents (as icons) known to the Center-to-Center Project.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center Project\"], \"Physical Device\": [], \"Environment Entity\": [\"The map\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the current incidents\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The user shall be able to click on an incident icon to obtain further information about the incident.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The user\", \"an incident icon\"], \"Design Domain\": [], \"Requirements\": [\"to obtain further information about the incident\"], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "All current incidents shall be displayed in tabular format with the following information contained in the table.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall be capable of displaying the following for a DMS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map\", \"a DMS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall be capable of displaying the following for a LCS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map\", \"a LCS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"displaying the following\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The map shall be capable of displaying the following for a CCTV.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [\"The map\", \"a CCTV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Incident GUI shall allow the user to enter incident or lane closure information without the use of an Center.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [\"The Incident GUI\"], \"Requirements\": [], \"Shared Phenomena\": [\"incident or lane closure information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Incident GUI shall allow the user to input the following information for each incident.",
    "output": "{\"Machine Domain\": [\"The Incident GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information for each incident\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Incident GUI shall allow the user to input the following information for each lane closure.",
    "output": "{\"Machine Domain\": [\"The Incident GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"lane closure\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"information for each lane closure\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall provide a list of previously entered incidents.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"a list of previously entered incidents\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall allow the data about an incident to be modified.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the data about an incident to be modified\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall allow a user to delete a previously entered incident.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"delete a previously entered incident\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall allow a user to delete a previously entered lane closure.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"delete a previously entered lane closure\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The GUI shall allow a user to delete a previously entered lane closure.",
    "output": "{\"Machine Domain\": [\"The GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"a user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"delete a previously entered lane closure\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The remote Center Control GUI shall be designed to execute on a public network (e.g., Internet) and transmit equipment requests to the C-2-C software system.",
    "output": "{\"Machine Domain\": [\"The remote Center Control GUI\"], \"Physical Device\": [], \"Environment Entity\": [\"a public network\"], \"Design Domain\": [\"the C-2-C software system\"], \"Requirements\": [], \"Shared Phenomena\": [\"equipment requests\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "When the GUI application is initiated, the user shall be prompted for the following information, including User name and Password.",
    "output": "{\"Machine Domain\": [\"the GUI application\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"User name\", \"Password\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a DMS from a list and provide the following information, including Target DMS, Message to be displayed and Beacons On/Off.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a DMS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target DMS\", \"Message to be displayed\", \"Beacons On/Off\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a LCS from a list and provide the following information, including Target LCS and Assignment of lane arrows.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a LCS\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target LCS\", \"Assignment of lane arrows\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a CCTV from a list and provide the following information.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a CCTV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"the following information\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a Ramp Meter from a list and provide the following information, including Target Ramp Meter and Plan.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a Ramp Meter\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target Ramp Meter\", \"Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a HAR from a list and provide the following information, including Target HAR and Text to be sent to the HAR.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a HAR\", \"o\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target HAR\", \"Text to be sent to the HAR\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a Traffic Signal from a list and provide the following information, including Target Traffic Signal and Plan.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a Traffic Signal\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target Traffic Signal and Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a HOV from a list and provide the following information, including Target HOV and Plan.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a HOV\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target HOV and Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a School Zone from a list and provide the following information, including Target School Zone and Plan.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a School Zone\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target School Zone and Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "Once an Center is selected, the user shall be able to select a Dynamic Lane from a list and provide the following information, including Target Dynamic Lane and Plan.",
    "output": "{\"Machine Domain\": [\"an Center\"], \"Physical Device\": [], \"Environment Entity\": [\"the user\", \"a Dynamic Lane\"], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"Target Dynamic Lane and Plan\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "For each device command/control status request sent by the Remote GUI, the status returned from the network identifier will be displayed in a scrollable list on the GUI.",
    "output": "{\"Machine Domain\": [\"the Remote GUI\", \"the GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"each device command/control status request\", \"the status returned from the network identifier\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center Server shall execute in a Microsoft Windows NT environment.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The Center-to-Center Server\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "A DATEX/ASN runtime library shall be available on any computer communicating to the Center-to-Center project.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center project\"], \"Physical Device\": [\"any computer\"], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"A DATEX/ASN runtime library\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The web server application shall use ESRI's ARC Internet Map Server (ARC IMS) product for creating of map images.",
    "output": "{\"Machine Domain\": [\"The web server application\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"ESRI's ARC Internet Map Server (ARC IMS) product\"], \"Requirements\": [], \"Shared Phenomena\": [\"map images.\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center shall be implemented in the C/C++ programming language.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center web interface shall be implemented using C/C++ and ESRI ARC IMS.",
    "output": "{\"Machine Domain\": [], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"The Center-to-Center web interface\"], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Incident GUI shall be implemented using C/C++ and ESRI Map Objects.",
    "output": "{\"Machine Domain\": [\"The Incident GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Remote Control GUI shall be implemented using C/C++ and ESRI Map Objects.",
    "output": "{\"Machine Domain\": [\"The Remote Control GUI\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center shall be able to operate in normal mode.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In this mode the Center-to-Center receives data from all connected systems, including the Incident GUI, and combines the data into a single data store (database).",
    "output": "{\"Machine Domain\": [\"the Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [\"the Incident GUI\", \"a single data store (database)\"], \"Requirements\": [], \"Shared Phenomena\": [\"data\", \"the data\"]}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "The Center-to-Center shall be able to operate in test mode.",
    "output": "{\"Machine Domain\": [\"The Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": []}"
  },
  {
    "instruction": "You are an expert specialising in entity extraction. Please extract the entities from input that match the schema definition and return an empty list for non-existent entity types. \nPlease answer in the format of a JSON string. \nschema: ['Machine Domain', 'Physical Device', 'Environment Entity', 'Design Domain', 'Requirements', 'Shared Phenomena']\"\n",
    "input": "In this mode, the Center-to-Center performs normal mode operations and also logs activities.",
    "output": "{\"Machine Domain\": [\"the Center-to-Center\"], \"Physical Device\": [], \"Environment Entity\": [], \"Design Domain\": [], \"Requirements\": [], \"Shared Phenomena\": [\"mode operations\", \"activities\"]}"
  }
]